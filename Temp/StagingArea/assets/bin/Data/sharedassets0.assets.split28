rojection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
mediump vec4 t16_1;
highp vec4 t2;
highp vec4 t3;
highp vec4 t4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp float t21;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t21 = dot(t1.xyz, t1.xyz);
    t21 = inversesqrt(t21);
    t1.xyz = vec3(t21) * t1.xyz;
    vs_TEXCOORD4.xyz = t1.xyz;
    vs_TEXCOORD4.w = 0.0;
    t2 = (-t0.yyyy) + unity_4LightPosY0;
    t3 = t1.yyyy * t2;
    t2 = t2 * t2;
    t4 = (-t0.xxxx) + unity_4LightPosX0;
    t0 = (-t0.zzzz) + unity_4LightPosZ0;
    t3 = t4 * t1.xxxx + t3;
    t2 = t4 * t4 + t2;
    t2 = t0 * t0 + t2;
    t0 = t0 * t1.zzzz + t3;
    t3 = inversesqrt(t2);
    t2 = t2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    t2 = vec4(1.0, 1.0, 1.0, 1.0) / t2;
    t0 = t0 * t3;
    t0 = max(t0, vec4(0.0, 0.0, 0.0, 0.0));
    t0 = t2 * t0;
    t2.xyz = t0.yyy * unity_LightColor[1].xyz;
    t2.xyz = unity_LightColor[0].xyz * t0.xxx + t2.xyz;
    t0.xyz = unity_LightColor[2].xyz * t0.zzz + t2.xyz;
    t0.xyz = unity_LightColor[3].xyz * t0.www + t0.xyz;
    t16_5.x = t1.y * t1.y;
    t16_5.x = t1.x * t1.x + (-t16_5.x);
    t16_1 = t1.yzzx * t1.xyzz;
    t16_6.x = dot(unity_SHBr, t16_1);
    t16_6.y = dot(unity_SHBg, t16_1);
    t16_6.z = dot(unity_SHBb, t16_1);
    t16_5.xyz = unity_SHC.xyz * t16_5.xxx + t16_6.xyz;
    t0.xyz = t0.xyz + t16_5.xyz;
    vs_TEXCOORD5.xyz = t0.xyz;
    vs_TEXCOORD5.w = 0.0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
mediump float t16_2;
lowp vec3 t10_2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump vec3 t16_9;
mediump float t16_11;
mediump vec3 t16_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_30;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_9.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_9.xyz, t16_9.xyz);
    t16_2 = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2);
    t16_0.xyz = t16_0.xxx * t16_9.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2 = max(t16_27, 0.0);
    t16_27 = t16_2 * t16_2;
    t16_28 = (-_Glossiness) + 1.0;
    t16_3.x = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_3.x;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_2 = t16_27 * t16_2 + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_3.x = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t16_12.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_12.x = inversesqrt(t16_12.x);
    t16_4.xyz = t16_12.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_4.xyz, t16_0.xyz);
    t16_11 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_11);
    t16_0.x = t16_0.x * t16_27;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2 = t16_0.x / t16_2;
    t16_0.x = max(t16_2, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_9.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_9.xyz = vec3(_Metallic) * t16_9.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_12.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_9.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_9.xyz + t16_12.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_3.xyz = t16_12.xyz * t16_8.xyz;
    t16_30 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_2 = max(t16_30, 0.0);
    t16_3.xyz = t16_7.xyz * vec3(t16_2) + t16_3.xyz;
    t16_30 = dot(t16_1.xyz, t16_4.xyz);
    t16_30 = t16_30 + t16_30;
    t16_7.xyz = t16_4.xyz * (-vec3(t16_30)) + t16_1.xyz;
    t16_1.x = dot(t16_4.xyz, (-t16_1.xyz));
    t16_2 = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_9.xyz = t16_1.xxx * t16_6.xyz + t16_9.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_28);
    t16_30 = t10_1.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_1.xyz * vec3(t16_30);
    t16_4.xyz = t16_0.xxx * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_9.xyz + t16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
mediump float t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump vec3 t16_10;
mediump float t16_12;
mediump vec3 t16_13;
mediump float t16_30;
mediump float t16_31;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_10.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_10.xyz, t16_10.xyz);
    t16_2 = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2);
    t16_0.xyz = t16_0.xxx * t16_10.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2 = max(t16_30, 0.0);
    t16_30 = t16_2 * t16_2;
    t16_31 = (-_Glossiness) + 1.0;
    t16_3.x = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_3.x;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_2 = t16_30 * t16_2 + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_3.x = t16_30 * t16_30 + 1.0;
    t16_30 = t16_30 * t16_30;
    t16_13.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_13.x = inversesqrt(t16_13.x);
    t16_13.xyz = t16_13.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_13.xyz, t16_0.xyz);
    t16_12 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_12);
    t16_0.x = t16_0.x * t16_30;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2 = t16_0.x / t16_2;
    t16_0.x = max(t16_2, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_2.xyz * _Color.xyz;
    t16_10.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_10.xyz = vec3(_Metallic) * t16_10.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = t16_3.xxx * t16_4.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_10.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_10.xyz + t16_5.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t10_2 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_0.x = t10_2.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_2.xyz * t16_0.xxx;
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_2.xyz + vec3(-0.5, -0.5, -0.5);
    t16_0.x = dot(t16_13.xyz, t10_9.xyz);
    t16_0.x = t16_0.x + 0.5;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_2.www;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_3.x = dot(t16_13.xyz, _WorldSpaceLightPos0.xyz);
    t16_2 = max(t16_3.x, 0.0);
    t16_5.xyz = t16_7.xyz * vec3(t16_2) + t16_5.xyz;
    t16_3.x = dot(t16_1.xyz, t16_13.xyz);
    t16_3.x = t16_3.x + t16_3.x;
    t16_7.xyz = t16_13.xyz * (-t16_3.xxx) + t16_1.xyz;
    t16_1.x = dot(t16_13.xyz, (-t16_1.xyz));
    t16_2 = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_10.xyz = t16_1.xxx * t16_6.xyz + t16_10.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_31);
    t16_3.x = t10_1.w * unity_SpecCube0_HDR.x;
    t16_3.xyz = t10_1.xyz * t16_3.xxx;
    t16_3.xyz = t16_0.xxx * t16_3.xyz;
    SV_Target0.xyz = t16_3.xyz * t16_10.xyz + t16_5.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
mediump float t16_2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t1.x = in_NORMAL0.y * _World2Object[0].y;
    t1.y = in_NORMAL0.y * _World2Object[1].y;
    t1.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t1.xyz;
    t1.x = in_NORMAL0.z * _World2Object[0].z;
    t1.y = in_NORMAL0.z * _World2Object[1].z;
    t1.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t1.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD4.xyz = t0.xyz;
    vs_TEXCOORD4.w = 0.0;
    t16_2 = t0.y * t0.y;
    t16_2 = t0.x * t0.x + (-t16_2);
    t16_0 = t0.yzzx * t0.xyzz;
    t16_3.x = dot(unity_SHBr, t16_0);
    t16_3.y = dot(unity_SHBg, t16_0);
    t16_3.z = dot(unity_SHBb, t16_0);
    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(t16_2) + t16_3.xyz;
    vs_TEXCOORD5.w = 0.0;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump float t16_3;
lowp vec3 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump float t16_9;
mediump float t16_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_29;
void main()
{
    vec3 txVec0 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    t16_9 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_9 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_27 = inversesqrt(t16_27);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_27) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_27) * vs_TEXCOORD1.xyz;
    t16_27 = dot(t16_1.xyz, t16_1.xyz);
    t16_3 = max(t16_27, 0.00100000005);
    t16_27 = inversesqrt(t16_3);
    t16_1.xyz = vec3(t16_27) * t16_1.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3 = max(t16_27, 0.0);
    t16_27 = t16_3 * t16_3;
    t16_28 = (-_Glossiness) + 1.0;
    t16_29 = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_29;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_3 = t16_27 * t16_3 + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_29 = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t16_4.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * vs_TEXCOORD4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_12 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_12);
    t16_27 = t16_27 * t16_1.x;
    t16_27 = exp2(t16_27);
    t16_27 = t16_27 * t16_29;
    t16_3 = t16_27 / t16_3;
    t16_27 = max(t16_3, 0.0);
    t16_27 = min(t16_27, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_29 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_6.xyz = vec3(t16_29) * t16_5.xyz;
    t16_29 = (-t16_29) + _Glossiness;
    t16_29 = t16_29 + 1.0;
    t16_29 = clamp(t16_29, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_29);
    t16_8.xyz = vec3(t16_27) * t16_1.xyz + t16_6.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_27 = (-_OcclusionStrength) + 1.0;
    t16_27 = t10_3.x * _OcclusionStrength + t16_27;
    t16_8.xyz = vec3(t16_27) * t16_8.xyz;
    t16_6.xyz = t16_6.xyz * t16_8.xyz;
    t16_29 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3 = max(t16_29, 0.0);
    t16_0.xyz = t16_0.xyz * vec3(t16_3) + t16_6.xyz;
    t16_29 = dot(t16_2.xyz, t16_4.xyz);
    t16_29 = t16_29 + t16_29;
    t16_6.xyz = t16_4.xyz * (-vec3(t16_29)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3 = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_6.xyz, t16_28);
    t16_28 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_28);
    t16_4.xyz = vec3(t16_27) * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump float t16_3;
lowp vec4 t10_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump float t16_10;
mediump float t16_13;
mediump float t16_30;
mediump float t16_31;
mediump float t16_32;
void main()
{
    vec3 txVec0 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    t16_10 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_10 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_30 = inversesqrt(t16_30);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_30) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_30) * vs_TEXCOORD1.xyz;
    t16_30 = dot(t16_1.xyz, t16_1.xyz);
    t16_3 = max(t16_30, 0.00100000005);
    t16_30 = inversesqrt(t16_3);
    t16_1.xyz = vec3(t16_30) * t16_1.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3 = max(t16_30, 0.0);
    t16_30 = t16_3 * t16_3;
    t16_31 = (-_Glossiness) + 1.0;
    t16_32 = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_32;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_3 = t16_30 * t16_3 + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_32 = t16_30 * t16_30 + 1.0;
    t16_30 = t16_30 * t16_30;
    t16_4.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * vs_TEXCOORD4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_13 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_13);
    t16_30 = t16_30 * t16_1.x;
    t16_30 = exp2(t16_30);
    t16_30 = t16_30 * t16_32;
    t16_3 = t16_30 / t16_3;
    t16_30 = max(t16_3, 0.0);
    t16_30 = min(t16_30, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_32 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_6.xyz = vec3(t16_32) * t16_5.xyz;
    t16_32 = (-t16_32) + _Glossiness;
    t16_32 = t16_32 + 1.0;
    t16_32 = clamp(t16_32, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_32);
    t16_8.xyz = vec3(t16_30) * t16_1.xyz + t16_6.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t10_3 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_30 = t10_3.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_3.xyz * vec3(t16_30);
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_3 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_3.xyz + vec3(-0.5, -0.5, -0.5);
    t16_30 = dot(t16_4.xyz, t10_9.xyz);
    t16_30 = t16_30 + 0.5;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_3.www;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_30 = (-_OcclusionStrength) + 1.0;
    t16_30 = t10_3.x * _OcclusionStrength + t16_30;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_6.xyz = t16_6.xyz * t16_8.xyz;
    t16_32 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3 = max(t16_32, 0.0);
    t16_0.xyz = t16_0.xyz * vec3(t16_3) + t16_6.xyz;
    t16_32 = dot(t16_2.xyz, t16_4.xyz);
    t16_32 = t16_32 + t16_32;
    t16_6.xyz = t16_4.xyz * (-vec3(t16_32)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3 = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_6.xyz, t16_31);
    t16_31 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_31);
    t16_4.xyz = vec3(t16_30) * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec4 t2;
highp vec4 t3;
highp vec4 t4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp float t21;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t21 = dot(t1.xyz, t1.xyz);
    t21 = inversesqrt(t21);
    t1.xyz = vec3(t21) * t1.xyz;
    vs_TEXCOORD4.xyz = t1.xyz;
    vs_TEXCOORD4.w = 0.0;
    t2 = (-t0.yyyy) + unity_4LightPosY0;
    t3 = t1.yyyy * t2;
    t2 = t2 * t2;
    t4 = (-t0.xxxx) + unity_4LightPosX0;
    t0 = (-t0.zzzz) + unity_4LightPosZ0;
    t3 = t4 * t1.xxxx + t3;
    t2 = t4 * t4 + t2;
    t2 = t0 * t0 + t2;
    t0 = t0 * t1.zzzz + t3;
    t3 = inversesqrt(t2);
    t2 = t2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    t2 = vec4(1.0, 1.0, 1.0, 1.0) / t2;
    t0 = t0 * t3;
    t0 = max(t0, vec4(0.0, 0.0, 0.0, 0.0));
    t0 = t2 * t0;
    t2.xyz = t0.yyy * unity_LightColor[1].xyz;
    t2.xyz = unity_LightColor[0].xyz * t0.xxx + t2.xyz;
    t0.xyz = unity_LightColor[2].xyz * t0.zzz + t2.xyz;
    t0.xyz = unity_LightColor[3].xyz * t0.www + t0.xyz;
    t16_5.x = t1.y * t1.y;
    t16_5.x = t1.x * t1.x + (-t16_5.x);
    t16_1 = t1.yzzx * t1.xyzz;
    t16_6.x = dot(unity_SHBr, t16_1);
    t16_6.y = dot(unity_SHBg, t16_1);
    t16_6.z = dot(unity_SHBb, t16_1);
    t16_5.xyz = unity_SHC.xyz * t16_5.xxx + t16_6.xyz;
    t0.xyz = t0.xyz + t16_5.xyz;
    vs_TEXCOORD5.xyz = t0.xyz;
    vs_TEXCOORD5.w = 0.0;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump float t16_3;
lowp vec3 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump float t16_9;
mediump float t16_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_29;
void main()
{
    vec3 txVec0 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    t16_9 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_9 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_27 = inversesqrt(t16_27);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_27) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_27) * vs_TEXCOORD1.xyz;
    t16_27 = dot(t16_1.xyz, t16_1.xyz);
    t16_3 = max(t16_27, 0.00100000005);
    t16_27 = inversesqrt(t16_3);
    t16_1.xyz = vec3(t16_27) * t16_1.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3 = max(t16_27, 0.0);
    t16_27 = t16_3 * t16_3;
    t16_28 = (-_Glossiness) + 1.0;
    t16_29 = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_29;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_3 = t16_27 * t16_3 + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_29 = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t16_4.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * vs_TEXCOORD4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_12 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_12);
    t16_27 = t16_27 * t16_1.x;
    t16_27 = exp2(t16_27);
    t16_27 = t16_27 * t16_29;
    t16_3 = t16_27 / t16_3;
    t16_27 = max(t16_3, 0.0);
    t16_27 = min(t16_27, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_29 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_6.xyz = vec3(t16_29) * t16_5.xyz;
    t16_29 = (-t16_29) + _Glossiness;
    t16_29 = t16_29 + 1.0;
    t16_29 = clamp(t16_29, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_29);
    t16_8.xyz = vec3(t16_27) * t16_1.xyz + t16_6.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_27 = (-_OcclusionStrength) + 1.0;
    t16_27 = t10_3.x * _OcclusionStrength + t16_27;
    t16_8.xyz = vec3(t16_27) * t16_8.xyz;
    t16_6.xyz = t16_6.xyz * t16_8.xyz;
    t16_29 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3 = max(t16_29, 0.0);
    t16_0.xyz = t16_0.xyz * vec3(t16_3) + t16_6.xyz;
    t16_29 = dot(t16_2.xyz, t16_4.xyz);
    t16_29 = t16_29 + t16_29;
    t16_6.xyz = t16_4.xyz * (-vec3(t16_29)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3 = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_6.xyz, t16_28);
    t16_28 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_28);
    t16_4.xyz = vec3(t16_27) * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump float t16_3;
lowp vec4 t10_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump float t16_10;
mediump float t16_13;
mediump float t16_30;
mediump float t16_31;
mediump float t16_32;
void main()
{
    vec3 txVec0 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    t16_10 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_10 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_30 = inversesqrt(t16_30);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_30) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_30) * vs_TEXCOORD1.xyz;
    t16_30 = dot(t16_1.xyz, t16_1.xyz);
    t16_3 = max(t16_30, 0.00100000005);
    t16_30 = inversesqrt(t16_3);
    t16_1.xyz = vec3(t16_30) * t16_1.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3 = max(t16_30, 0.0);
    t16_30 = t16_3 * t16_3;
    t16_31 = (-_Glossiness) + 1.0;
    t16_32 = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_32;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_3 = t16_30 * t16_3 + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_32 = t16_30 * t16_30 + 1.0;
    t16_30 = t16_30 * t16_30;
    t16_4.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * vs_TEXCOORD4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_13 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_13);
    t16_30 = t16_30 * t16_1.x;
    t16_30 = exp2(t16_30);
    t16_30 = t16_30 * t16_32;
    t16_3 = t16_30 / t16_3;
    t16_30 = max(t16_3, 0.0);
    t16_30 = min(t16_30, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_32 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_6.xyz = vec3(t16_32) * t16_5.xyz;
    t16_32 = (-t16_32) + _Glossiness;
    t16_32 = t16_32 + 1.0;
    t16_32 = clamp(t16_32, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_32);
    t16_8.xyz = vec3(t16_30) * t16_1.xyz + t16_6.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t10_3 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_30 = t10_3.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_3.xyz * vec3(t16_30);
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_3 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_3.xyz + vec3(-0.5, -0.5, -0.5);
    t16_30 = dot(t16_4.xyz, t10_9.xyz);
    t16_30 = t16_30 + 0.5;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_3.www;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_30 = (-_OcclusionStrength) + 1.0;
    t16_30 = t10_3.x * _OcclusionStrength + t16_30;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_6.xyz = t16_6.xyz * t16_8.xyz;
    t16_32 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3 = max(t16_32, 0.0);
    t16_0.xyz = t16_0.xyz * vec3(t16_3) + t16_6.xyz;
    t16_32 = dot(t16_2.xyz, t16_4.xyz);
    t16_32 = t16_32 + t16_32;
    t16_6.xyz = t16_4.xyz * (-vec3(t16_32)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3 = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_6.xyz, t16_31);
    t16_31 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_31);
    t16_4.xyz = vec3(t16_30) * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec3 t1;
mediump float t16_2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t1.x = in_NORMAL0.y * _World2Object[0].y;
    t1.y = in_NORMAL0.y * _World2Object[1].y;
    t1.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t1.xyz;
    t1.x = in_NORMAL0.z * _World2Object[0].z;
    t1.y = in_NORMAL0.z * _World2Object[1].z;
    t1.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t1.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD4.xyz = t0.xyz;
    vs_TEXCOORD4.w = 0.0;
    t16_2 = t0.y * t0.y;
    t16_2 = t0.x * t0.x + (-t16_2);
    t16_0 = t0.yzzx * t0.xyzz;
    t16_3.x = dot(unity_SHBr, t16_0);
    t16_3.y = dot(unity_SHBg, t16_0);
    t16_3.z = dot(unity_SHBb, t16_0);
    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(t16_2) + t16_3.xyz;
    vs_TEXCOORD5.w = 0.0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
highp vec3 t2;
mediump vec3 t16_2;
lowp vec3 t10_2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump vec3 t16_9;
mediump float t16_11;
mediump vec3 t16_12;
mediump float t16_27;
mediump float t16_28;
highp float t29;
mediump float t16_30;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_9.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_9.xyz, t16_9.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_0.xyz = t16_0.xxx * t16_9.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2.x = max(t16_27, 0.0);
    t16_27 = t16_2.x * t16_2.x;
    t16_28 = (-_Glossiness) + 1.0;
    t16_3.x = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_3.x;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_27 * t16_2.x + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_3.x = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t16_12.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_12.x = inversesqrt(t16_12.x);
    t16_4.xyz = t16_12.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_4.xyz, t16_0.xyz);
    t16_11 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_11);
    t16_0.x = t16_0.x * t16_27;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_9.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_9.xyz = vec3(_Metallic) * t16_9.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_12.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_9.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_9.xyz + t16_12.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_3.xyz = t16_12.xyz * t16_8.xyz;
    t16_30 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_2.x = max(t16_30, 0.0);
    t16_3.xyz = t16_7.xyz * t16_2.xxx + t16_3.xyz;
    t16_30 = dot(t16_1.xyz, t16_4.xyz);
    t16_30 = t16_30 + t16_30;
    t16_7.xyz = t16_4.xyz * (-vec3(t16_30)) + t16_1.xyz;
    t16_1.x = dot(t16_4.xyz, (-t16_1.xyz));
    t16_2.x = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2.x) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_9.xyz = t16_1.xxx * t16_6.xyz + t16_9.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_28);
    t16_30 = t10_1.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_1.xyz * vec3(t16_30);
    t16_4.xyz = t16_0.xxx * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_9.xyz + t16_3.xyz;
    t16_2.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t29 = vs_TEXCOORD7;
    t29 = clamp(t29, 0.0, 1.0);
    t2.xyz = vec3(t29) * t16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
highp vec3 t2;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump vec3 t16_10;
mediump float t16_12;
mediump vec3 t16_13;
mediump float t16_30;
mediump float t16_31;
highp float t32;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_10.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_10.xyz, t16_10.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_0.xyz = t16_0.xxx * t16_10.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2.x = max(t16_30, 0.0);
    t16_30 = t16_2.x * t16_2.x;
    t16_31 = (-_Glossiness) + 1.0;
    t16_3.x = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_3.x;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_30 * t16_2.x + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_3.x = t16_30 * t16_30 + 1.0;
    t16_30 = t16_30 * t16_30;
    t16_13.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_13.x = inversesqrt(t16_13.x);
    t16_13.xyz = t16_13.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_13.xyz, t16_0.xyz);
    t16_12 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_12);
    t16_0.x = t16_0.x * t16_30;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_2.xyz * _Color.xyz;
    t16_10.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_10.xyz = vec3(_Metallic) * t16_10.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = t16_3.xxx * t16_4.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_10.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_10.xyz + t16_5.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t10_2 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_0.x = t10_2.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_2.xyz * t16_0.xxx;
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_2.xyz + vec3(-0.5, -0.5, -0.5);
    t16_0.x = dot(t16_13.xyz, t10_9.xyz);
    t16_0.x = t16_0.x + 0.5;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_2.www;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_3.x = dot(t16_13.xyz, _WorldSpaceLightPos0.xyz);
    t16_2.x = max(t16_3.x, 0.0);
    t16_5.xyz = t16_7.xyz * t16_2.xxx + t16_5.xyz;
    t16_3.x = dot(t16_1.xyz, t16_13.xyz);
    t16_3.x = t16_3.x + t16_3.x;
    t16_7.xyz = t16_13.xyz * (-t16_3.xxx) + t16_1.xyz;
    t16_1.x = dot(t16_13.xyz, (-t16_1.xyz));
    t16_2.x = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2.x) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_10.xyz = t16_1.xxx * t16_6.xyz + t16_10.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_31);
    t16_3.x = t10_1.w * unity_SpecCube0_HDR.x;
    t16_3.xyz = t10_1.xyz * t16_3.xxx;
    t16_3.xyz = t16_0.xxx * t16_3.xyz;
    t16_0.xyz = t16_3.xyz * t16_10.xyz + t16_5.xyz;
    t16_2.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t32 = vs_TEXCOORD7;
    t32 = clamp(t32, 0.0, 1.0);
    t2.xyz = vec3(t32) * t16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "VERTEXLIGHT_ON" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
mediump vec4 t16_1;
highp vec4 t2;
highp vec4 t3;
highp vec4 t4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp float t21;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t21 = dot(t1.xyz, t1.xyz);
    t21 = inversesqrt(t21);
    t1.xyz = vec3(t21) * t1.xyz;
    vs_TEXCOORD4.xyz = t1.xyz;
    vs_TEXCOORD4.w = 0.0;
    t2 = (-t0.yyyy) + unity_4LightPosY0;
    t3 = t1.yyyy * t2;
    t2 = t2 * t2;
    t4 = (-t0.xxxx) + unity_4LightPosX0;
    t0 = (-t0.zzzz) + unity_4LightPosZ0;
    t3 = t4 * t1.xxxx + t3;
    t2 = t4 * t4 + t2;
    t2 = t0 * t0 + t2;
    t0 = t0 * t1.zzzz + t3;
    t3 = inversesqrt(t2);
    t2 = t2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    t2 = vec4(1.0, 1.0, 1.0, 1.0) / t2;
    t0 = t0 * t3;
    t0 = max(t0, vec4(0.0, 0.0, 0.0, 0.0));
    t0 = t2 * t0;
    t2.xyz = t0.yyy * unity_LightColor[1].xyz;
    t2.xyz = unity_LightColor[0].xyz * t0.xxx + t2.xyz;
    t0.xyz = unity_LightColor[2].xyz * t0.zzz + t2.xyz;
    t0.xyz = unity_LightColor[3].xyz * t0.www + t0.xyz;
    t16_5.x = t1.y * t1.y;
    t16_5.x = t1.x * t1.x + (-t16_5.x);
    t16_1 = t1.yzzx * t1.xyzz;
    t16_6.x = dot(unity_SHBr, t16_1);
    t16_6.y = dot(unity_SHBg, t16_1);
    t16_6.z = dot(unity_SHBb, t16_1);
    t16_5.xyz = unity_SHC.xyz * t16_5.xxx + t16_6.xyz;
    t0.xyz = t0.xyz + t16_5.xyz;
    vs_TEXCOORD5.xyz = t0.xyz;
    vs_TEXCOORD5.w = 0.0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
highp vec3 t2;
mediump vec3 t16_2;
lowp vec3 t10_2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump vec3 t16_9;
mediump float t16_11;
mediump vec3 t16_12;
mediump float t16_27;
mediump float t16_28;
highp float t29;
mediump float t16_30;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_9.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_9.xyz, t16_9.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_0.xyz = t16_0.xxx * t16_9.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2.x = max(t16_27, 0.0);
    t16_27 = t16_2.x * t16_2.x;
    t16_28 = (-_Glossiness) + 1.0;
    t16_3.x = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_3.x;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_27 * t16_2.x + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_3.x = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t16_12.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_12.x = inversesqrt(t16_12.x);
    t16_4.xyz = t16_12.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_4.xyz, t16_0.xyz);
    t16_11 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_11);
    t16_0.x = t16_0.x * t16_27;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_9.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_9.xyz = vec3(_Metallic) * t16_9.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_12.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_9.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_9.xyz + t16_12.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_3.xyz = t16_12.xyz * t16_8.xyz;
    t16_30 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_2.x = max(t16_30, 0.0);
    t16_3.xyz = t16_7.xyz * t16_2.xxx + t16_3.xyz;
    t16_30 = dot(t16_1.xyz, t16_4.xyz);
    t16_30 = t16_30 + t16_30;
    t16_7.xyz = t16_4.xyz * (-vec3(t16_30)) + t16_1.xyz;
    t16_1.x = dot(t16_4.xyz, (-t16_1.xyz));
    t16_2.x = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2.x) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_9.xyz = t16_1.xxx * t16_6.xyz + t16_9.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_28);
    t16_30 = t10_1.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_1.xyz * vec3(t16_30);
    t16_4.xyz = t16_0.xxx * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_9.xyz + t16_3.xyz;
    t16_2.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t29 = vs_TEXCOORD7;
    t29 = clamp(t29, 0.0, 1.0);
    t2.xyz = vec3(t29) * t16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" "VERTEXLIGHT_ON" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
highp vec3 t2;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump vec3 t16_10;
mediump float t16_12;
mediump vec3 t16_13;
mediump float t16_30;
mediump float t16_31;
highp float t32;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_10.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_10.xyz, t16_10.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_0.xyz = t16_0.xxx * t16_10.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2.x = max(t16_30, 0.0);
    t16_30 = t16_2.x * t16_2.x;
    t16_31 = (-_Glossiness) + 1.0;
    t16_3.x = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_3.x;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_30 * t16_2.x + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_3.x = t16_30 * t16_30 + 1.0;
    t16_30 = t16_30 * t16_30;
    t16_13.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_13.x = inversesqrt(t16_13.x);
    t16_13.xyz = t16_13.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_13.xyz, t16_0.xyz);
    t16_12 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_12);
    t16_0.x = t16_0.x * t16_30;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_2.xyz * _Color.xyz;
    t16_10.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_10.xyz = vec3(_Metallic) * t16_10.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = t16_3.xxx * t16_4.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_10.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_10.xyz + t16_5.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t10_2 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_0.x = t10_2.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_2.xyz * t16_0.xxx;
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_2.xyz + vec3(-0.5, -0.5, -0.5);
    t16_0.x = dot(t16_13.xyz, t10_9.xyz);
    t16_0.x = t16_0.x + 0.5;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_2.www;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_3.x = dot(t16_13.xyz, _WorldSpaceLightPos0.xyz);
    t16_2.x = max(t16_3.x, 0.0);
    t16_5.xyz = t16_7.xyz * t16_2.xxx + t16_5.xyz;
    t16_3.x = dot(t16_1.xyz, t16_13.xyz);
    t16_3.x = t16_3.x + t16_3.x;
    t16_7.xyz = t16_13.xyz * (-t16_3.xxx) + t16_1.xyz;
    t16_1.x = dot(t16_13.xyz, (-t16_1.xyz));
    t16_2.x = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2.x) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_10.xyz = t16_1.xxx * t16_6.xyz + t16_10.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_31);
    t16_3.x = t10_1.w * unity_SpecCube0_HDR.x;
    t16_3.xyz = t10_1.xyz * t16_3.xxx;
    t16_3.xyz = t16_0.xxx * t16_3.xyz;
    t16_0.xyz = t16_3.xyz * t16_10.xyz + t16_5.xyz;
    t16_2.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t32 = vs_TEXCOORD7;
    t32 = clamp(t32, 0.0, 1.0);
    t2.xyz = vec3(t32) * t16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
mediump float t16_2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t1.x = in_NORMAL0.y * _World2Object[0].y;
    t1.y = in_NORMAL0.y * _World2Object[1].y;
    t1.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t1.xyz;
    t1.x = in_NORMAL0.z * _World2Object[0].z;
    t1.y = in_NORMAL0.z * _World2Object[1].z;
    t1.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t1.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD4.xyz = t0.xyz;
    vs_TEXCOORD4.w = 0.0;
    t16_2 = t0.y * t0.y;
    t16_2 = t0.x * t0.x + (-t16_2);
    t16_0 = t0.yzzx * t0.xyzz;
    t16_3.x = dot(unity_SHBr, t16_0);
    t16_3.y = dot(unity_SHBg, t16_0);
    t16_3.z = dot(unity_SHBb, t16_0);
    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(t16_2) + t16_3.xyz;
    vs_TEXCOORD5.w = 0.0;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
highp vec3 t3;
mediump vec3 t16_3;
lowp vec3 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump float t16_9;
mediump float t16_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_29;
highp float t30;
void main()
{
    vec3 txVec30 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec30, 0.0);
    t16_9 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_9 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_27 = inversesqrt(t16_27);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_27) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_27) * vs_TEXCOORD1.xyz;
    t16_27 = dot(t16_1.xyz, t16_1.xyz);
    t16_3.x = max(t16_27, 0.00100000005);
    t16_27 = inversesqrt(t16_3.x);
    t16_1.xyz = vec3(t16_27) * t16_1.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3.x = max(t16_27, 0.0);
    t16_27 = t16_3.x * t16_3.x;
    t16_28 = (-_Glossiness) + 1.0;
    t16_29 = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_29;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_3.x = t16_27 * t16_3.x + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_29 = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t16_4.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * vs_TEXCOORD4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_12 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_12);
    t16_27 = t16_27 * t16_1.x;
    t16_27 = exp2(t16_27);
    t16_27 = t16_27 * t16_29;
    t16_3.x = t16_27 / t16_3.x;
    t16_27 = max(t16_3.x, 0.0);
    t16_27 = min(t16_27, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_29 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_6.xyz = vec3(t16_29) * t16_5.xyz;
    t16_29 = (-t16_29) + _Glossiness;
    t16_29 = t16_29 + 1.0;
    t16_29 = clamp(t16_29, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_29);
    t16_8.xyz = vec3(t16_27) * t16_1.xyz + t16_6.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_27 = (-_OcclusionStrength) + 1.0;
    t16_27 = t10_3.x * _OcclusionStrength + t16_27;
    t16_8.xyz = vec3(t16_27) * t16_8.xyz;
    t16_6.xyz = t16_6.xyz * t16_8.xyz;
    t16_29 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3.x = max(t16_29, 0.0);
    t16_0.xyz = t16_0.xyz * t16_3.xxx + t16_6.xyz;
    t16_29 = dot(t16_2.xyz, t16_4.xyz);
    t16_29 = t16_29 + t16_29;
    t16_6.xyz = t16_4.xyz * (-vec3(t16_29)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3.x = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3.x) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_6.xyz, t16_28);
    t16_28 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_28);
    t16_4.xyz = vec3(t16_27) * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    t16_3.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t30 = vs_TEXCOORD7;
    t30 = clamp(t30, 0.0, 1.0);
    t3.xyz = vec3(t30) * t16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
highp vec3 t3;
mediump vec3 t16_3;
lowp vec4 t10_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump float t16_10;
mediump float t16_13;
mediump float t16_30;
mediump float t16_31;
mediump float t16_32;
highp float t33;
void main()
{
    vec3 txVec33 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec33, 0.0);
    t16_10 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_10 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_30 = inversesqrt(t16_30);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_30) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_30) * vs_TEXCOORD1.xyz;
    t16_30 = dot(t16_1.xyz, t16_1.xyz);
    t16_3.x = max(t16_30, 0.00100000005);
    t16_30 = inversesqrt(t16_3.x);
    t16_1.xyz = vec3(t16_30) * t16_1.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3.x = max(t16_30, 0.0);
    t16_30 = t16_3.x * t16_3.x;
    t16_31 = (-_Glossiness) + 1.0;
    t16_32 = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_32;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_3.x = t16_30 * t16_3.x + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_32 = t16_30 * t16_30 + 1.0;
    t16_30 = t16_30 * t16_30;
    t16_4.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * vs_TEXCOORD4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_13 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_13);
    t16_30 = t16_30 * t16_1.x;
    t16_30 = exp2(t16_30);
    t16_30 = t16_30 * t16_32;
    t16_3.x = t16_30 / t16_3.x;
    t16_30 = max(t16_3.x, 0.0);
    t16_30 = min(t16_30, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_32 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_6.xyz = vec3(t16_32) * t16_5.xyz;
    t16_32 = (-t16_32) + _Glossiness;
    t16_32 = t16_32 + 1.0;
    t16_32 = clamp(t16_32, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_32);
    t16_8.xyz = vec3(t16_30) * t16_1.xyz + t16_6.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t10_3 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_30 = t10_3.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_3.xyz * vec3(t16_30);
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_3 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_3.xyz + vec3(-0.5, -0.5, -0.5);
    t16_30 = dot(t16_4.xyz, t10_9.xyz);
    t16_30 = t16_30 + 0.5;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_3.www;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_30 = (-_OcclusionStrength) + 1.0;
    t16_30 = t10_3.x * _OcclusionStrength + t16_30;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_6.xyz = t16_6.xyz * t16_8.xyz;
    t16_32 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3.x = max(t16_32, 0.0);
    t16_0.xyz = t16_0.xyz * t16_3.xxx + t16_6.xyz;
    t16_32 = dot(t16_2.xyz, t16_4.xyz);
    t16_32 = t16_32 + t16_32;
    t16_6.xyz = t16_4.xyz * (-vec3(t16_32)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3.x = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3.x) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_6.xyz, t16_31);
    t16_31 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_31);
    t16_4.xyz = vec3(t16_30) * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    t16_3.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t33 = vs_TEXCOORD7;
    t33 = clamp(t33, 0.0, 1.0);
    t3.xyz = vec3(t33) * t16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "VERTEXLIGHT_ON" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec4 t2;
highp vec4 t3;
highp vec4 t4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp float t21;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t21 = dot(t1.xyz, t1.xyz);
    t21 = inversesqrt(t21);
    t1.xyz = vec3(t21) * t1.xyz;
    vs_TEXCOORD4.xyz = t1.xyz;
    vs_TEXCOORD4.w = 0.0;
    t2 = (-t0.yyyy) + unity_4LightPosY0;
    t3 = t1.yyyy * t2;
    t2 = t2 * t2;
    t4 = (-t0.xxxx) + unity_4LightPosX0;
    t0 = (-t0.zzzz) + unity_4LightPosZ0;
    t3 = t4 * t1.xxxx + t3;
    t2 = t4 * t4 + t2;
    t2 = t0 * t0 + t2;
    t0 = t0 * t1.zzzz + t3;
    t3 = inversesqrt(t2);
    t2 = t2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    t2 = vec4(1.0, 1.0, 1.0, 1.0) / t2;
    t0 = t0 * t3;
    t0 = max(t0, vec4(0.0, 0.0, 0.0, 0.0));
    t0 = t2 * t0;
    t2.xyz = t0.yyy * unity_LightColor[1].xyz;
    t2.xyz = unity_LightColor[0].xyz * t0.xxx + t2.xyz;
    t0.xyz = unity_LightColor[2].xyz * t0.zzz + t2.xyz;
    t0.xyz = unity_LightColor[3].xyz * t0.www + t0.xyz;
    t16_5.x = t1.y * t1.y;
    t16_5.x = t1.x * t1.x + (-t16_5.x);
    t16_1 = t1.yzzx * t1.xyzz;
    t16_6.x = dot(unity_SHBr, t16_1);
    t16_6.y = dot(unity_SHBg, t16_1);
    t16_6.z = dot(unity_SHBb, t16_1);
    t16_5.xyz = unity_SHC.xyz * t16_5.xxx + t16_6.xyz;
    t0.xyz = t0.xyz + t16_5.xyz;
    vs_TEXCOORD5.xyz = t0.xyz;
    vs_TEXCOORD5.w = 0.0;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
highp vec3 t3;
mediump vec3 t16_3;
lowp vec3 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump float t16_9;
mediump float t16_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_29;
highp float t30;
void main()
{
    vec3 txVec37 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec37, 0.0);
    t16_9 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_9 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_27 = inversesqrt(t16_27);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_27) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_27) * vs_TEXCOORD1.xyz;
    t16_27 = dot(t16_1.xyz, t16_1.xyz);
    t16_3.x = max(t16_27, 0.00100000005);
    t16_27 = inversesqrt(t16_3.x);
    t16_1.xyz = vec3(t16_27) * t16_1.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3.x = max(t16_27, 0.0);
    t16_27 = t16_3.x * t16_3.x;
    t16_28 = (-_Glossiness) + 1.0;
    t16_29 = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_29;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_3.x = t16_27 * t16_3.x + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_29 = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t16_4.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * vs_TEXCOORD4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_12 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_12);
    t16_27 = t16_27 * t16_1.x;
    t16_27 = exp2(t16_27);
    t16_27 = t16_27 * t16_29;
    t16_3.x = t16_27 / t16_3.x;
    t16_27 = max(t16_3.x, 0.0);
    t16_27 = min(t16_27, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_29 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_6.xyz = vec3(t16_29) * t16_5.xyz;
    t16_29 = (-t16_29) + _Glossiness;
    t16_29 = t16_29 + 1.0;
    t16_29 = clamp(t16_29, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_29);
    t16_8.xyz = vec3(t16_27) * t16_1.xyz + t16_6.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_27 = (-_OcclusionStrength) + 1.0;
    t16_27 = t10_3.x * _OcclusionStrength + t16_27;
    t16_8.xyz = vec3(t16_27) * t16_8.xyz;
    t16_6.xyz = t16_6.xyz * t16_8.xyz;
    t16_29 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3.x = max(t16_29, 0.0);
    t16_0.xyz = t16_0.xyz * t16_3.xxx + t16_6.xyz;
    t16_29 = dot(t16_2.xyz, t16_4.xyz);
    t16_29 = t16_29 + t16_29;
    t16_6.xyz = t16_4.xyz * (-vec3(t16_29)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3.x = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3.x) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_6.xyz, t16_28);
    t16_28 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_28);
    t16_4.xyz = vec3(t16_27) * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    t16_3.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t30 = vs_TEXCOORD7;
    t30 = clamp(t30, 0.0, 1.0);
    t3.xyz = vec3(t30) * t16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" "VERTEXLIGHT_ON" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
highp vec3 t3;
mediump vec3 t16_3;
lowp vec4 t10_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump float t16_10;
mediump float t16_13;
mediump float t16_30;
mediump float t16_31;
mediump float t16_32;
highp float t33;
void main()
{
    vec3 txVec50 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec50, 0.0);
    t16_10 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_10 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_30 = inversesqrt(t16_30);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_30) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_30) * vs_TEXCOORD1.xyz;
    t16_30 = dot(t16_1.xyz, t16_1.xyz);
    t16_3.x = max(t16_30, 0.00100000005);
    t16_30 = inversesqrt(t16_3.x);
    t16_1.xyz = vec3(t16_30) * t16_1.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3.x = max(t16_30, 0.0);
    t16_30 = t16_3.x * t16_3.x;
    t16_31 = (-_Glossiness) + 1.0;
    t16_32 = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_32;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_3.x = t16_30 * t16_3.x + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_32 = t16_30 * t16_30 + 1.0;
    t16_30 = t16_30 * t16_30;
    t16_4.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * vs_TEXCOORD4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_13 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_13);
    t16_30 = t16_30 * t16_1.x;
    t16_30 = exp2(t16_30);
    t16_30 = t16_30 * t16_32;
    t16_3.x = t16_30 / t16_3.x;
    t16_30 = max(t16_3.x, 0.0);
    t16_30 = min(t16_30, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_32 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_6.xyz = vec3(t16_32) * t16_5.xyz;
    t16_32 = (-t16_32) + _Glossiness;
    t16_32 = t16_32 + 1.0;
    t16_32 = clamp(t16_32, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_32);
    t16_8.xyz = vec3(t16_30) * t16_1.xyz + t16_6.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t10_3 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_30 = t10_3.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_3.xyz * vec3(t16_30);
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_3 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_3.xyz + vec3(-0.5, -0.5, -0.5);
    t16_30 = dot(t16_4.xyz, t10_9.xyz);
    t16_30 = t16_30 + 0.5;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_3.www;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_30 = (-_OcclusionStrength) + 1.0;
    t16_30 = t10_3.x * _OcclusionStrength + t16_30;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_6.xyz = t16_6.xyz * t16_8.xyz;
    t16_32 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3.x = max(t16_32, 0.0);
    t16_0.xyz = t16_0.xyz * t16_3.xxx + t16_6.xyz;
    t16_32 = dot(t16_2.xyz, t16_4.xyz);
    t16_32 = t16_32 + t16_32;
    t16_6.xyz = t16_4.xyz * (-vec3(t16_32)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3.x = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3.x) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_6.xyz, t16_31);
    t16_31 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_31);
    t16_4.xyz = vec3(t16_30) * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    t16_3.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t33 = vs_TEXCOORD7;
    t33 = clamp(t33, 0.0, 1.0);
    t3.xyz = vec3(t33) * t16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.xyz = t1.xyz;
    vs_TEXCOORD4.w = 0.0;
    t16_3.x = t1.y * t1.y;
    t16_3.x = t1.x * t1.x + (-t16_3.x);
    t16_0 = t1.yzzx * t1.xyzz;
    t16_4.x = dot(unity_SHBr, t16_0);
    t16_4.y = dot(unity_SHBg, t16_0);
    t16_4.z = dot(unity_SHBb, t16_0);
    vs_TEXCOORD5.xyz = unity_SHC.xyz * t16_3.xxx + t16_4.xyz;
    vs_TEXCOORD5.w = 0.0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
mediump float t16_2;
lowp vec3 t10_2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump vec3 t16_9;
mediump float t16_11;
lowp vec3 t10_11;
mediump vec3 t16_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_30;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_9.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_9.xyz, t16_9.xyz);
    t16_2 = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2);
    t16_0.xyz = t16_0.xxx * t16_9.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2 = max(t16_27, 0.0);
    t16_27 = t16_2 * t16_2;
    t16_28 = (-_Glossiness) + 1.0;
    t16_3.x = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_3.x;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_2 = t16_27 * t16_2 + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_3.x = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t10_11.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_12.xyz = t10_11.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_4.xyz = t16_12.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyz = vs_TEXCOORD2.xyz * t16_12.xxx + t16_4.xyz;
    t16_12.xyz = vs_TEXCOORD4.xyz * t16_12.zzz + t16_4.xyz;
    t16_4.x = dot(t16_12.xyz, t16_12.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_12.xyz * t16_4.xxx;
    t16_0.x = dot(t16_4.xyz, t16_0.xyz);
    t16_11 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_11);
    t16_0.x = t16_0.x * t16_27;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2 = t16_0.x / t16_2;
    t16_0.x = max(t16_2, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_9.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_9.xyz = vec3(_Metallic) * t16_9.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_12.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_9.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_9.xyz + t16_12.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_3.xyz = t16_12.xyz * t16_8.xyz;
    t16_30 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_2 = max(t16_30, 0.0);
    t16_3.xyz = t16_7.xyz * vec3(t16_2) + t16_3.xyz;
    t16_30 = dot(t16_1.xyz, t16_4.xyz);
    t16_30 = t16_30 + t16_30;
    t16_7.xyz = t16_4.xyz * (-vec3(t16_30)) + t16_1.xyz;
    t16_1.x = dot(t16_4.xyz, (-t16_1.xyz));
    t16_2 = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_9.xyz = t16_1.xxx * t16_6.xyz + t16_9.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_28);
    t16_30 = t10_1.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_1.xyz * vec3(t16_30);
    t16_4.xyz = t16_0.xxx * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_9.xyz + t16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
mediump float t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump vec3 t16_10;
mediump float t16_12;
lowp vec3 t10_12;
mediump vec3 t16_13;
mediump float t16_30;
mediump float t16_31;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_10.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_10.xyz, t16_10.xyz);
    t16_2 = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2);
    t16_0.xyz = t16_0.xxx * t16_10.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2 = max(t16_30, 0.0);
    t16_30 = t16_2 * t16_2;
    t16_31 = (-_Glossiness) + 1.0;
    t16_3.x = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_3.x;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_2 = t16_30 * t16_2 + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_3.x = t16_30 * t16_30;
    t16_30 = t16_30 * t16_30 + 1.0;
    t10_12.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_13.xyz = t10_12.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_4.xyz = t16_13.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyz = vs_TEXCOORD2.xyz * t16_13.xxx + t16_4.xyz;
    t16_13.xyz = vs_TEXCOORD4.xyz * t16_13.zzz + t16_4.xyz;
    t16_4.x = dot(t16_13.xyz, t16_13.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_13.xyz = t16_13.xyz * t16_4.xxx;
    t16_0.x = dot(t16_13.xyz, t16_0.xyz);
    t16_12 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_12);
    t16_0.x = t16_0.x * t16_3.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_30;
    t16_2 = t16_0.x / t16_2;
    t16_0.x = max(t16_2, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_10.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_10.xyz = vec3(_Metallic) * t16_10.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_10.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_10.xyz + t16_4.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t10_2 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_0.x = t10_2.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_2.xyz * t16_0.xxx;
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_2.xyz + vec3(-0.5, -0.5, -0.5);
    t16_0.x = dot(t16_13.xyz, t10_9.xyz);
    t16_0.x = t16_0.x + 0.5;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_2.www;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_4.xyz = t16_4.xyz * t16_8.xyz;
    t16_3.x = dot(t16_13.xyz, _WorldSpaceLightPos0.xyz);
    t16_2 = max(t16_3.x, 0.0);
    t16_4.xyz = t16_7.xyz * vec3(t16_2) + t16_4.xyz;
    t16_3.x = dot(t16_1.xyz, t16_13.xyz);
    t16_3.x = t16_3.x + t16_3.x;
    t16_7.xyz = t16_13.xyz * (-t16_3.xxx) + t16_1.xyz;
    t16_1.x = dot(t16_13.xyz, (-t16_1.xyz));
    t16_2 = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_10.xyz = t16_1.xxx * t16_6.xyz + t16_10.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_31);
    t16_3.x = t10_1.w * unity_SpecCube0_HDR.x;
    t16_3.xyz = t10_1.xyz * t16_3.xxx;
    t16_3.xyz = t16_0.xxx * t16_3.xyz;
    SV_Target0.xyz = t16_3.xyz * t16_10.xyz + t16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec3 t2;
highp vec4 t3;
highp vec4 t4;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp float t21;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t21 = dot(t1.xyz, t1.xyz);
    t21 = inversesqrt(t21);
    t1.xyz = vec3(t21) * t1.xyz;
    vs_TEXCOORD2.xyz = t1.xyz;
    vs_TEXCOORD2.w = 0.0;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t21 = dot(t2.xyz, t2.xyz);
    t21 = inversesqrt(t21);
    t2.xyz = vec3(t21) * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t21 = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = vec3(t21) * t16_4.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.xyz = t2.xyz;
    vs_TEXCOORD4.w = 0.0;
    t1 = (-t0.yyyy) + unity_4LightPosY0;
    t3 = t2.yyyy * t1;
    t1 = t1 * t1;
    t4 = (-t0.xxxx) + unity_4LightPosX0;
    t0 = (-t0.zzzz) + unity_4LightPosZ0;
    t3 = t4 * t2.xxxx + t3;
    t1 = t4 * t4 + t1;
    t1 = t0 * t0 + t1;
    t0 = t0 * t2.zzzz + t3;
    t3 = inversesqrt(t1);
    t1 = t1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    t1 = vec4(1.0, 1.0, 1.0, 1.0) / t1;
    t0 = t0 * t3;
    t0 = max(t0, vec4(0.0, 0.0, 0.0, 0.0));
    t0 = t1 * t0;
    t1.xyz = t0.yyy * unity_LightColor[1].xyz;
    t1.xyz = unity_LightColor[0].xyz * t0.xxx + t1.xyz;
    t0.xyz = unity_LightColor[2].xyz * t0.zzz + t1.xyz;
    t0.xyz = unity_LightColor[3].xyz * t0.www + t0.xyz;
    t16_5.x = t2.y * t2.y;
    t16_5.x = t2.x * t2.x + (-t16_5.x);
    t16_1 = t2.yzzx * t2.xyzz;
    t16_6.x = dot(unity_SHBr, t16_1);
    t16_6.y = dot(unity_SHBg, t16_1);
    t16_6.z = dot(unity_SHBb, t16_1);
    t16_5.xyz = unity_SHC.xyz * t16_5.xxx + t16_6.xyz;
    t0.xyz = t0.xyz + t16_5.xyz;
    vs_TEXCOORD5.xyz = t0.xyz;
    vs_TEXCOORD5.w = 0.0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
mediump float t16_2;
lowp vec3 t10_2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump vec3 t16_9;
mediump float t16_11;
lowp vec3 t10_11;
mediump vec3 t16_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_30;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_9.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_9.xyz, t16_9.xyz);
    t16_2 = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2);
    t16_0.xyz = t16_0.xxx * t16_9.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2 = max(t16_27, 0.0);
    t16_27 = t16_2 * t16_2;
    t16_28 = (-_Glossiness) + 1.0;
    t16_3.x = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_3.x;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_2 = t16_27 * t16_2 + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_3.x = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t10_11.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_12.xyz = t10_11.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_4.xyz = t16_12.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyz = vs_TEXCOORD2.xyz * t16_12.xxx + t16_4.xyz;
    t16_12.xyz = vs_TEXCOORD4.xyz * t16_12.zzz + t16_4.xyz;
    t16_4.x = dot(t16_12.xyz, t16_12.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_12.xyz * t16_4.xxx;
    t16_0.x = dot(t16_4.xyz, t16_0.xyz);
    t16_11 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_11);
    t16_0.x = t16_0.x * t16_27;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2 = t16_0.x / t16_2;
    t16_0.x = max(t16_2, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_9.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_9.xyz = vec3(_Metallic) * t16_9.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_12.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_9.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_9.xyz + t16_12.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_3.xyz = t16_12.xyz * t16_8.xyz;
    t16_30 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_2 = max(t16_30, 0.0);
    t16_3.xyz = t16_7.xyz * vec3(t16_2) + t16_3.xyz;
    t16_30 = dot(t16_1.xyz, t16_4.xyz);
    t16_30 = t16_30 + t16_30;
    t16_7.xyz = t16_4.xyz * (-vec3(t16_30)) + t16_1.xyz;
    t16_1.x = dot(t16_4.xyz, (-t16_1.xyz));
    t16_2 = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_9.xyz = t16_1.xxx * t16_6.xyz + t16_9.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_28);
    t16_30 = t10_1.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_1.xyz * vec3(t16_30);
    t16_4.xyz = t16_0.xxx * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_9.xyz + t16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
mediump float t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump vec3 t16_10;
mediump float t16_12;
lowp vec3 t10_12;
mediump vec3 t16_13;
mediump float t16_30;
mediump float t16_31;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_10.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_10.xyz, t16_10.xyz);
    t16_2 = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2);
    t16_0.xyz = t16_0.xxx * t16_10.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2 = max(t16_30, 0.0);
    t16_30 = t16_2 * t16_2;
    t16_31 = (-_Glossiness) + 1.0;
    t16_3.x = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_3.x;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_2 = t16_30 * t16_2 + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_3.x = t16_30 * t16_30;
    t16_30 = t16_30 * t16_30 + 1.0;
    t10_12.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_13.xyz = t10_12.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_4.xyz = t16_13.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyz = vs_TEXCOORD2.xyz * t16_13.xxx + t16_4.xyz;
    t16_13.xyz = vs_TEXCOORD4.xyz * t16_13.zzz + t16_4.xyz;
    t16_4.x = dot(t16_13.xyz, t16_13.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_13.xyz = t16_13.xyz * t16_4.xxx;
    t16_0.x = dot(t16_13.xyz, t16_0.xyz);
    t16_12 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_12);
    t16_0.x = t16_0.x * t16_3.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_30;
    t16_2 = t16_0.x / t16_2;
    t16_0.x = max(t16_2, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_10.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_10.xyz = vec3(_Metallic) * t16_10.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_10.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_10.xyz + t16_4.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t10_2 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_0.x = t10_2.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_2.xyz * t16_0.xxx;
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_2.xyz + vec3(-0.5, -0.5, -0.5);
    t16_0.x = dot(t16_13.xyz, t10_9.xyz);
    t16_0.x = t16_0.x + 0.5;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_2.www;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_4.xyz = t16_4.xyz * t16_8.xyz;
    t16_3.x = dot(t16_13.xyz, _WorldSpaceLightPos0.xyz);
    t16_2 = max(t16_3.x, 0.0);
    t16_4.xyz = t16_7.xyz * vec3(t16_2) + t16_4.xyz;
    t16_3.x = dot(t16_1.xyz, t16_13.xyz);
    t16_3.x = t16_3.x + t16_3.x;
    t16_7.xyz = t16_13.xyz * (-t16_3.xxx) + t16_1.xyz;
    t16_1.x = dot(t16_13.xyz, (-t16_1.xyz));
    t16_2 = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_10.xyz = t16_1.xxx * t16_6.xyz + t16_10.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_31);
    t16_3.x = t10_1.w * unity_SpecCube0_HDR.x;
    t16_3.xyz = t10_1.xyz * t16_3.xxx;
    t16_3.xyz = t16_0.xxx * t16_3.xyz;
    SV_Target0.xyz = t16_3.xyz * t16_10.xyz + t16_4.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.xyz = t1.xyz;
    vs_TEXCOORD4.w = 0.0;
    t16_3.x = t1.y * t1.y;
    t16_3.x = t1.x * t1.x + (-t16_3.x);
    t16_0 = t1.yzzx * t1.xyzz;
    t16_4.x = dot(unity_SHBr, t16_0);
    t16_4.y = dot(unity_SHBg, t16_0);
    t16_4.z = dot(unity_SHBb, t16_0);
    vs_TEXCOORD5.xyz = unity_SHC.xyz * t16_3.xxx + t16_4.xyz;
    vs_TEXCOORD5.w = 0.0;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump float t16_3;
lowp vec3 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump float t16_9;
mediump float t16_12;
lowp vec3 t10_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_29;
mediump float t16_31;
void main()
{
    vec3 txVec33 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec33, 0.0);
    t16_9 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_9 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_27 = inversesqrt(t16_27);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_27) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_27) * vs_TEXCOORD1.xyz;
    t16_27 = dot(t16_1.xyz, t16_1.xyz);
    t16_3 = max(t16_27, 0.00100000005);
    t16_27 = inversesqrt(t16_3);
    t16_1.xyz = vec3(t16_27) * t16_1.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3 = max(t16_27, 0.0);
    t16_27 = t16_3 * t16_3;
    t16_28 = (-_Glossiness) + 1.0;
    t16_29 = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_29;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_3 = t16_27 * t16_3 + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_29 = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t10_12.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_12.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_31 = dot(t16_4.xyz, t16_4.xyz);
    t16_31 = inversesqrt(t16_31);
    t16_4.xyz = vec3(t16_31) * t16_4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_12 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_12);
    t16_27 = t16_27 * t16_1.x;
    t16_27 = exp2(t16_27);
    t16_27 = t16_27 * t16_29;
    t16_3 = t16_27 / t16_3;
    t16_27 = max(t16_3, 0.0);
    t16_27 = min(t16_27, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_29 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = vec3(t16_29) * t16_6.xyz;
    t16_29 = (-t16_29) + _Glossiness;
    t16_29 = t16_29 + 1.0;
    t16_29 = clamp(t16_29, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_29);
    t16_8.xyz = vec3(t16_27) * t16_1.xyz + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_27 = (-_OcclusionStrength) + 1.0;
    t16_27 = t10_3.x * _OcclusionStrength + t16_27;
    t16_8.xyz = vec3(t16_27) * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_29 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3 = max(t16_29, 0.0);
    t16_0.xyz = t16_0.xyz * vec3(t16_3) + t16_5.xyz;
    t16_29 = dot(t16_2.xyz, t16_4.xyz);
    t16_29 = t16_29 + t16_29;
    t16_5.xyz = t16_4.xyz * (-vec3(t16_29)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3 = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_5.xyz, t16_28);
    t16_28 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_28);
    t16_4.xyz = vec3(t16_27) * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump float t16_3;
lowp vec4 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump float t16_10;
mediump float t16_13;
lowp vec3 t10_13;
mediump float t16_30;
mediump float t16_31;
mediump float t16_32;
mediump float t16_34;
void main()
{
    vec3 txVec36 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec36, 0.0);
    t16_10 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_10 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_30 = inversesqrt(t16_30);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_30) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_30) * vs_TEXCOORD1.xyz;
    t16_30 = dot(t16_1.xyz, t16_1.xyz);
    t16_3 = max(t16_30, 0.00100000005);
    t16_30 = inversesqrt(t16_3);
    t16_1.xyz = vec3(t16_30) * t16_1.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3 = max(t16_30, 0.0);
    t16_30 = t16_3 * t16_3;
    t16_31 = (-_Glossiness) + 1.0;
    t16_32 = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_32;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_3 = t16_30 * t16_3 + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_32 = t16_30 * t16_30;
    t16_30 = t16_30 * t16_30 + 1.0;
    t10_13.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_13.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_34 = dot(t16_4.xyz, t16_4.xyz);
    t16_34 = inversesqrt(t16_34);
    t16_4.xyz = vec3(t16_34) * t16_4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_13 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_13);
    t16_1.x = t16_1.x * t16_32;
    t16_1.x = exp2(t16_1.x);
    t16_30 = t16_30 * t16_1.x;
    t16_3 = t16_30 / t16_3;
    t16_30 = max(t16_3, 0.0);
    t16_30 = min(t16_30, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_32 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = vec3(t16_32) * t16_6.xyz;
    t16_32 = (-t16_32) + _Glossiness;
    t16_32 = t16_32 + 1.0;
    t16_32 = clamp(t16_32, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_32);
    t16_8.xyz = vec3(t16_30) * t16_1.xyz + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t10_3 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_30 = t10_3.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_3.xyz * vec3(t16_30);
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_3 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_3.xyz + vec3(-0.5, -0.5, -0.5);
    t16_30 = dot(t16_4.xyz, t10_9.xyz);
    t16_30 = t16_30 + 0.5;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_3.www;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_30 = (-_OcclusionStrength) + 1.0;
    t16_30 = t10_3.x * _OcclusionStrength + t16_30;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_32 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3 = max(t16_32, 0.0);
    t16_0.xyz = t16_0.xyz * vec3(t16_3) + t16_5.xyz;
    t16_32 = dot(t16_2.xyz, t16_4.xyz);
    t16_32 = t16_32 + t16_32;
    t16_5.xyz = t16_4.xyz * (-vec3(t16_32)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3 = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_5.xyz, t16_31);
    t16_31 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_31);
    t16_4.xyz = vec3(t16_30) * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec3 t2;
highp vec4 t3;
highp vec4 t4;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp float t21;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t21 = dot(t1.xyz, t1.xyz);
    t21 = inversesqrt(t21);
    t1.xyz = vec3(t21) * t1.xyz;
    vs_TEXCOORD2.xyz = t1.xyz;
    vs_TEXCOORD2.w = 0.0;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t21 = dot(t2.xyz, t2.xyz);
    t21 = inversesqrt(t21);
    t2.xyz = vec3(t21) * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t21 = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = vec3(t21) * t16_4.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.xyz = t2.xyz;
    vs_TEXCOORD4.w = 0.0;
    t1 = (-t0.yyyy) + unity_4LightPosY0;
    t3 = t2.yyyy * t1;
    t1 = t1 * t1;
    t4 = (-t0.xxxx) + unity_4LightPosX0;
    t0 = (-t0.zzzz) + unity_4LightPosZ0;
    t3 = t4 * t2.xxxx + t3;
    t1 = t4 * t4 + t1;
    t1 = t0 * t0 + t1;
    t0 = t0 * t2.zzzz + t3;
    t3 = inversesqrt(t1);
    t1 = t1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    t1 = vec4(1.0, 1.0, 1.0, 1.0) / t1;
    t0 = t0 * t3;
    t0 = max(t0, vec4(0.0, 0.0, 0.0, 0.0));
    t0 = t1 * t0;
    t1.xyz = t0.yyy * unity_LightColor[1].xyz;
    t1.xyz = unity_LightColor[0].xyz * t0.xxx + t1.xyz;
    t0.xyz = unity_LightColor[2].xyz * t0.zzz + t1.xyz;
    t0.xyz = unity_LightColor[3].xyz * t0.www + t0.xyz;
    t16_5.x = t2.y * t2.y;
    t16_5.x = t2.x * t2.x + (-t16_5.x);
    t16_1 = t2.yzzx * t2.xyzz;
    t16_6.x = dot(unity_SHBr, t16_1);
    t16_6.y = dot(unity_SHBg, t16_1);
    t16_6.z = dot(unity_SHBb, t16_1);
    t16_5.xyz = unity_SHC.xyz * t16_5.xxx + t16_6.xyz;
    t0.xyz = t0.xyz + t16_5.xyz;
    vs_TEXCOORD5.xyz = t0.xyz;
    vs_TEXCOORD5.w = 0.0;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump float t16_3;
lowp vec3 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump float t16_9;
mediump float t16_12;
lowp vec3 t10_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_29;
mediump float t16_31;
void main()
{
    vec3 txVec53 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec53, 0.0);
    t16_9 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_9 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_27 = inversesqrt(t16_27);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_27) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_27) * vs_TEXCOORD1.xyz;
    t16_27 = dot(t16_1.xyz, t16_1.xyz);
    t16_3 = max(t16_27, 0.00100000005);
    t16_27 = inversesqrt(t16_3);
    t16_1.xyz = vec3(t16_27) * t16_1.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3 = max(t16_27, 0.0);
    t16_27 = t16_3 * t16_3;
    t16_28 = (-_Glossiness) + 1.0;
    t16_29 = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_29;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_3 = t16_27 * t16_3 + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_29 = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t10_12.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_12.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_31 = dot(t16_4.xyz, t16_4.xyz);
    t16_31 = inversesqrt(t16_31);
    t16_4.xyz = vec3(t16_31) * t16_4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_12 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_12);
    t16_27 = t16_27 * t16_1.x;
    t16_27 = exp2(t16_27);
    t16_27 = t16_27 * t16_29;
    t16_3 = t16_27 / t16_3;
    t16_27 = max(t16_3, 0.0);
    t16_27 = min(t16_27, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_29 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = vec3(t16_29) * t16_6.xyz;
    t16_29 = (-t16_29) + _Glossiness;
    t16_29 = t16_29 + 1.0;
    t16_29 = clamp(t16_29, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_29);
    t16_8.xyz = vec3(t16_27) * t16_1.xyz + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_27 = (-_OcclusionStrength) + 1.0;
    t16_27 = t10_3.x * _OcclusionStrength + t16_27;
    t16_8.xyz = vec3(t16_27) * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_29 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3 = max(t16_29, 0.0);
    t16_0.xyz = t16_0.xyz * vec3(t16_3) + t16_5.xyz;
    t16_29 = dot(t16_2.xyz, t16_4.xyz);
    t16_29 = t16_29 + t16_29;
    t16_5.xyz = t16_4.xyz * (-vec3(t16_29)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3 = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_5.xyz, t16_28);
    t16_28 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_28);
    t16_4.xyz = vec3(t16_27) * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump float t16_3;
lowp vec4 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump float t16_10;
mediump float t16_13;
lowp vec3 t10_13;
mediump float t16_30;
mediump float t16_31;
mediump float t16_32;
mediump float t16_34;
void main()
{
    vec3 txVec40 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec40, 0.0);
    t16_10 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_10 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_30 = inversesqrt(t16_30);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_30) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_30) * vs_TEXCOORD1.xyz;
    t16_30 = dot(t16_1.xyz, t16_1.xyz);
    t16_3 = max(t16_30, 0.00100000005);
    t16_30 = inversesqrt(t16_3);
    t16_1.xyz = vec3(t16_30) * t16_1.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3 = max(t16_30, 0.0);
    t16_30 = t16_3 * t16_3;
    t16_31 = (-_Glossiness) + 1.0;
    t16_32 = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_32;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_3 = t16_30 * t16_3 + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_32 = t16_30 * t16_30;
    t16_30 = t16_30 * t16_30 + 1.0;
    t10_13.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_13.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_34 = dot(t16_4.xyz, t16_4.xyz);
    t16_34 = inversesqrt(t16_34);
    t16_4.xyz = vec3(t16_34) * t16_4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_13 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_13);
    t16_1.x = t16_1.x * t16_32;
    t16_1.x = exp2(t16_1.x);
    t16_30 = t16_30 * t16_1.x;
    t16_3 = t16_30 / t16_3;
    t16_30 = max(t16_3, 0.0);
    t16_30 = min(t16_30, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_32 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = vec3(t16_32) * t16_6.xyz;
    t16_32 = (-t16_32) + _Glossiness;
    t16_32 = t16_32 + 1.0;
    t16_32 = clamp(t16_32, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_32);
    t16_8.xyz = vec3(t16_30) * t16_1.xyz + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t10_3 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_30 = t10_3.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_3.xyz * vec3(t16_30);
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_3 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_3.xyz + vec3(-0.5, -0.5, -0.5);
    t16_30 = dot(t16_4.xyz, t10_9.xyz);
    t16_30 = t16_30 + 0.5;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_3.www;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_30 = (-_OcclusionStrength) + 1.0;
    t16_30 = t10_3.x * _OcclusionStrength + t16_30;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_32 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3 = max(t16_32, 0.0);
    t16_0.xyz = t16_0.xyz * vec3(t16_3) + t16_5.xyz;
    t16_32 = dot(t16_2.xyz, t16_4.xyz);
    t16_32 = t16_32 + t16_32;
    t16_5.xyz = t16_4.xyz * (-vec3(t16_32)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3 = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_5.xyz, t16_31);
    t16_31 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_31);
    t16_4.xyz = vec3(t16_30) * t16_4.xyz;
    SV_Target0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.xyz = t1.xyz;
    vs_TEXCOORD4.w = 0.0;
    t16_3.x = t1.y * t1.y;
    t16_3.x = t1.x * t1.x + (-t16_3.x);
    t16_0 = t1.yzzx * t1.xyzz;
    t16_4.x = dot(unity_SHBr, t16_0);
    t16_4.y = dot(unity_SHBg, t16_0);
    t16_4.z = dot(unity_SHBb, t16_0);
    vs_TEXCOORD5.xyz = unity_SHC.xyz * t16_3.xxx + t16_4.xyz;
    vs_TEXCOORD5.w = 0.0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
highp vec3 t2;
mediump vec3 t16_2;
lowp vec3 t10_2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump vec3 t16_9;
mediump float t16_11;
lowp vec3 t10_11;
mediump vec3 t16_12;
mediump float t16_27;
mediump float t16_28;
highp float t29;
mediump float t16_30;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_9.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_9.xyz, t16_9.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_0.xyz = t16_0.xxx * t16_9.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2.x = max(t16_27, 0.0);
    t16_27 = t16_2.x * t16_2.x;
    t16_28 = (-_Glossiness) + 1.0;
    t16_3.x = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_3.x;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_27 * t16_2.x + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_3.x = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t10_11.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_12.xyz = t10_11.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_4.xyz = t16_12.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyz = vs_TEXCOORD2.xyz * t16_12.xxx + t16_4.xyz;
    t16_12.xyz = vs_TEXCOORD4.xyz * t16_12.zzz + t16_4.xyz;
    t16_4.x = dot(t16_12.xyz, t16_12.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_12.xyz * t16_4.xxx;
    t16_0.x = dot(t16_4.xyz, t16_0.xyz);
    t16_11 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_11);
    t16_0.x = t16_0.x * t16_27;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_9.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_9.xyz = vec3(_Metallic) * t16_9.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_12.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_9.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_9.xyz + t16_12.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_3.xyz = t16_12.xyz * t16_8.xyz;
    t16_30 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_2.x = max(t16_30, 0.0);
    t16_3.xyz = t16_7.xyz * t16_2.xxx + t16_3.xyz;
    t16_30 = dot(t16_1.xyz, t16_4.xyz);
    t16_30 = t16_30 + t16_30;
    t16_7.xyz = t16_4.xyz * (-vec3(t16_30)) + t16_1.xyz;
    t16_1.x = dot(t16_4.xyz, (-t16_1.xyz));
    t16_2.x = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2.x) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_9.xyz = t16_1.xxx * t16_6.xyz + t16_9.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_28);
    t16_30 = t10_1.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_1.xyz * vec3(t16_30);
    t16_4.xyz = t16_0.xxx * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_9.xyz + t16_3.xyz;
    t16_2.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t29 = vs_TEXCOORD7;
    t29 = clamp(t29, 0.0, 1.0);
    t2.xyz = vec3(t29) * t16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
highp vec3 t2;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump vec3 t16_10;
mediump float t16_12;
lowp vec3 t10_12;
mediump vec3 t16_13;
mediump float t16_30;
mediump float t16_31;
highp float t32;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_10.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_10.xyz, t16_10.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_0.xyz = t16_0.xxx * t16_10.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2.x = max(t16_30, 0.0);
    t16_30 = t16_2.x * t16_2.x;
    t16_31 = (-_Glossiness) + 1.0;
    t16_3.x = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_3.x;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_30 * t16_2.x + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_3.x = t16_30 * t16_30;
    t16_30 = t16_30 * t16_30 + 1.0;
    t10_12.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_13.xyz = t10_12.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_4.xyz = t16_13.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyz = vs_TEXCOORD2.xyz * t16_13.xxx + t16_4.xyz;
    t16_13.xyz = vs_TEXCOORD4.xyz * t16_13.zzz + t16_4.xyz;
    t16_4.x = dot(t16_13.xyz, t16_13.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_13.xyz = t16_13.xyz * t16_4.xxx;
    t16_0.x = dot(t16_13.xyz, t16_0.xyz);
    t16_12 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_12);
    t16_0.x = t16_0.x * t16_3.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_30;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_10.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_10.xyz = vec3(_Metallic) * t16_10.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_10.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_10.xyz + t16_4.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t10_2 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_0.x = t10_2.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_2.xyz * t16_0.xxx;
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_2.xyz + vec3(-0.5, -0.5, -0.5);
    t16_0.x = dot(t16_13.xyz, t10_9.xyz);
    t16_0.x = t16_0.x + 0.5;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_2.www;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_4.xyz = t16_4.xyz * t16_8.xyz;
    t16_3.x = dot(t16_13.xyz, _WorldSpaceLightPos0.xyz);
    t16_2.x = max(t16_3.x, 0.0);
    t16_4.xyz = t16_7.xyz * t16_2.xxx + t16_4.xyz;
    t16_3.x = dot(t16_1.xyz, t16_13.xyz);
    t16_3.x = t16_3.x + t16_3.x;
    t16_7.xyz = t16_13.xyz * (-t16_3.xxx) + t16_1.xyz;
    t16_1.x = dot(t16_13.xyz, (-t16_1.xyz));
    t16_2.x = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2.x) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_10.xyz = t16_1.xxx * t16_6.xyz + t16_10.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_31);
    t16_3.x = t10_1.w * unity_SpecCube0_HDR.x;
    t16_3.xyz = t10_1.xyz * t16_3.xxx;
    t16_3.xyz = t16_0.xxx * t16_3.xyz;
    t16_0.xyz = t16_3.xyz * t16_10.xyz + t16_4.xyz;
    t16_2.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t32 = vs_TEXCOORD7;
    t32 = clamp(t32, 0.0, 1.0);
    t2.xyz = vec3(t32) * t16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec3 t2;
highp vec4 t3;
highp vec4 t4;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp float t21;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t21 = dot(t1.xyz, t1.xyz);
    t21 = inversesqrt(t21);
    t1.xyz = vec3(t21) * t1.xyz;
    vs_TEXCOORD2.xyz = t1.xyz;
    vs_TEXCOORD2.w = 0.0;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t21 = dot(t2.xyz, t2.xyz);
    t21 = inversesqrt(t21);
    t2.xyz = vec3(t21) * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t21 = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = vec3(t21) * t16_4.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.xyz = t2.xyz;
    vs_TEXCOORD4.w = 0.0;
    t1 = (-t0.yyyy) + unity_4LightPosY0;
    t3 = t2.yyyy * t1;
    t1 = t1 * t1;
    t4 = (-t0.xxxx) + unity_4LightPosX0;
    t0 = (-t0.zzzz) + unity_4LightPosZ0;
    t3 = t4 * t2.xxxx + t3;
    t1 = t4 * t4 + t1;
    t1 = t0 * t0 + t1;
    t0 = t0 * t2.zzzz + t3;
    t3 = inversesqrt(t1);
    t1 = t1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    t1 = vec4(1.0, 1.0, 1.0, 1.0) / t1;
    t0 = t0 * t3;
    t0 = max(t0, vec4(0.0, 0.0, 0.0, 0.0));
    t0 = t1 * t0;
    t1.xyz = t0.yyy * unity_LightColor[1].xyz;
    t1.xyz = unity_LightColor[0].xyz * t0.xxx + t1.xyz;
    t0.xyz = unity_LightColor[2].xyz * t0.zzz + t1.xyz;
    t0.xyz = unity_LightColor[3].xyz * t0.www + t0.xyz;
    t16_5.x = t2.y * t2.y;
    t16_5.x = t2.x * t2.x + (-t16_5.x);
    t16_1 = t2.yzzx * t2.xyzz;
    t16_6.x = dot(unity_SHBr, t16_1);
    t16_6.y = dot(unity_SHBg, t16_1);
    t16_6.z = dot(unity_SHBb, t16_1);
    t16_5.xyz = unity_SHC.xyz * t16_5.xxx + t16_6.xyz;
    t0.xyz = t0.xyz + t16_5.xyz;
    vs_TEXCOORD5.xyz = t0.xyz;
    vs_TEXCOORD5.w = 0.0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
highp vec3 t2;
mediump vec3 t16_2;
lowp vec3 t10_2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump vec3 t16_9;
mediump float t16_11;
lowp vec3 t10_11;
mediump vec3 t16_12;
mediump float t16_27;
mediump float t16_28;
highp float t29;
mediump float t16_30;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_9.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_9.xyz, t16_9.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_0.xyz = t16_0.xxx * t16_9.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2.x = max(t16_27, 0.0);
    t16_27 = t16_2.x * t16_2.x;
    t16_28 = (-_Glossiness) + 1.0;
    t16_3.x = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_3.x;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_27 * t16_2.x + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_3.x = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t10_11.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_12.xyz = t10_11.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_4.xyz = t16_12.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyz = vs_TEXCOORD2.xyz * t16_12.xxx + t16_4.xyz;
    t16_12.xyz = vs_TEXCOORD4.xyz * t16_12.zzz + t16_4.xyz;
    t16_4.x = dot(t16_12.xyz, t16_12.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_12.xyz * t16_4.xxx;
    t16_0.x = dot(t16_4.xyz, t16_0.xyz);
    t16_11 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_11);
    t16_0.x = t16_0.x * t16_27;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_3.x;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_9.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_9.xyz = vec3(_Metallic) * t16_9.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_12.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_9.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_9.xyz + t16_12.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_3.xyz = t16_12.xyz * t16_8.xyz;
    t16_30 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_2.x = max(t16_30, 0.0);
    t16_3.xyz = t16_7.xyz * t16_2.xxx + t16_3.xyz;
    t16_30 = dot(t16_1.xyz, t16_4.xyz);
    t16_30 = t16_30 + t16_30;
    t16_7.xyz = t16_4.xyz * (-vec3(t16_30)) + t16_1.xyz;
    t16_1.x = dot(t16_4.xyz, (-t16_1.xyz));
    t16_2.x = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2.x) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_9.xyz = t16_1.xxx * t16_6.xyz + t16_9.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_28);
    t16_30 = t10_1.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_1.xyz * vec3(t16_30);
    t16_4.xyz = t16_0.xxx * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_9.xyz + t16_3.xyz;
    t16_2.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t29 = vs_TEXCOORD7;
    t29 = clamp(t29, 0.0, 1.0);
    t2.xyz = vec3(t29) * t16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec3 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
lowp vec4 t10_1;
highp vec3 t2;
mediump vec3 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump vec3 t16_10;
mediump float t16_12;
lowp vec3 t10_12;
mediump vec3 t16_13;
mediump float t16_30;
mediump float t16_31;
highp float t32;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_10.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + _WorldSpaceLightPos0.xyz;
    t16_1.xyz = t16_0.xxx * vs_TEXCOORD1.xyz;
    t16_0.x = dot(t16_10.xyz, t16_10.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_0.xyz = t16_0.xxx * t16_10.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_0.xyz);
    t16_2.x = max(t16_30, 0.0);
    t16_30 = t16_2.x * t16_2.x;
    t16_31 = (-_Glossiness) + 1.0;
    t16_3.x = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_3.x;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_30 * t16_2.x + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_3.x = t16_30 * t16_30;
    t16_30 = t16_30 * t16_30 + 1.0;
    t10_12.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_13.xyz = t10_12.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_4.xyz = t16_13.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyz = vs_TEXCOORD2.xyz * t16_13.xxx + t16_4.xyz;
    t16_13.xyz = vs_TEXCOORD4.xyz * t16_13.zzz + t16_4.xyz;
    t16_4.x = dot(t16_13.xyz, t16_13.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_13.xyz = t16_13.xyz * t16_4.xxx;
    t16_0.x = dot(t16_13.xyz, t16_0.xyz);
    t16_12 = max(t16_0.x, 0.0);
    t16_0.x = log2(t16_12);
    t16_0.x = t16_0.x * t16_3.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_30;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_2.xyz * _Color.xyz;
    t16_10.xyz = _Color.xyz * t10_2.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_10.xyz = vec3(_Metallic) * t16_10.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.x = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_3.xxx * t16_5.xyz;
    t16_3.x = (-t16_3.x) + _Glossiness;
    t16_3.x = t16_3.x + 1.0;
    t16_3.x = clamp(t16_3.x, 0.0, 1.0);
    t16_6.xyz = (-t16_10.xyz) + t16_3.xxx;
    t16_7.xyz = t16_0.xxx * t16_10.xyz + t16_4.xyz;
    t16_7.xyz = t16_7.xyz * _LightColor0.xyz;
    t10_2 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_0.x = t10_2.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_2.xyz * t16_0.xxx;
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_2.xyz + vec3(-0.5, -0.5, -0.5);
    t16_0.x = dot(t16_13.xyz, t10_9.xyz);
    t16_0.x = t16_0.x + 0.5;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_2.www;
    t10_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_0.x = (-_OcclusionStrength) + 1.0;
    t16_0.x = t10_2.x * _OcclusionStrength + t16_0.x;
    t16_8.xyz = t16_0.xxx * t16_8.xyz;
    t16_4.xyz = t16_4.xyz * t16_8.xyz;
    t16_3.x = dot(t16_13.xyz, _WorldSpaceLightPos0.xyz);
    t16_2.x = max(t16_3.x, 0.0);
    t16_4.xyz = t16_7.xyz * t16_2.xxx + t16_4.xyz;
    t16_3.x = dot(t16_1.xyz, t16_13.xyz);
    t16_3.x = t16_3.x + t16_3.x;
    t16_7.xyz = t16_13.xyz * (-t16_3.xxx) + t16_1.xyz;
    t16_1.x = dot(t16_13.xyz, (-t16_1.xyz));
    t16_2.x = max(t16_1.x, 0.0);
    t16_1.x = (-t16_2.x) + 1.0;
    t16_1.x = t16_1.x * t16_1.x;
    t16_1.x = t16_1.x * t16_1.x;
    t16_10.xyz = t16_1.xxx * t16_6.xyz + t16_10.xyz;
    t10_1 = textureLod(unity_SpecCube0, t16_7.xyz, t16_31);
    t16_3.x = t10_1.w * unity_SpecCube0_HDR.x;
    t16_3.xyz = t10_1.xyz * t16_3.xxx;
    t16_3.xyz = t16_0.xxx * t16_3.xyz;
    t16_0.xyz = t16_3.xyz * t16_10.xyz + t16_4.xyz;
    t16_2.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t32 = vs_TEXCOORD7;
    t32 = clamp(t32, 0.0, 1.0);
    t2.xyz = vec3(t32) * t16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.xyz = t1.xyz;
    vs_TEXCOORD4.w = 0.0;
    t16_3.x = t1.y * t1.y;
    t16_3.x = t1.x * t1.x + (-t16_3.x);
    t16_0 = t1.yzzx * t1.xyzz;
    t16_4.x = dot(unity_SHBr, t16_0);
    t16_4.y = dot(unity_SHBg, t16_0);
    t16_4.z = dot(unity_SHBb, t16_0);
    vs_TEXCOORD5.xyz = unity_SHC.xyz * t16_3.xxx + t16_4.xyz;
    vs_TEXCOORD5.w = 0.0;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
highp vec3 t3;
mediump vec3 t16_3;
lowp vec3 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump float t16_9;
mediump float t16_12;
lowp vec3 t10_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_29;
highp float t30;
mediump float t16_31;
void main()
{
    vec3 txVec34 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec34, 0.0);
    t16_9 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_9 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_27 = inversesqrt(t16_27);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_27) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_27) * vs_TEXCOORD1.xyz;
    t16_27 = dot(t16_1.xyz, t16_1.xyz);
    t16_3.x = max(t16_27, 0.00100000005);
    t16_27 = inversesqrt(t16_3.x);
    t16_1.xyz = vec3(t16_27) * t16_1.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3.x = max(t16_27, 0.0);
    t16_27 = t16_3.x * t16_3.x;
    t16_28 = (-_Glossiness) + 1.0;
    t16_29 = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_29;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_3.x = t16_27 * t16_3.x + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_29 = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t10_12.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_12.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_31 = dot(t16_4.xyz, t16_4.xyz);
    t16_31 = inversesqrt(t16_31);
    t16_4.xyz = vec3(t16_31) * t16_4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_12 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_12);
    t16_27 = t16_27 * t16_1.x;
    t16_27 = exp2(t16_27);
    t16_27 = t16_27 * t16_29;
    t16_3.x = t16_27 / t16_3.x;
    t16_27 = max(t16_3.x, 0.0);
    t16_27 = min(t16_27, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_29 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = vec3(t16_29) * t16_6.xyz;
    t16_29 = (-t16_29) + _Glossiness;
    t16_29 = t16_29 + 1.0;
    t16_29 = clamp(t16_29, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_29);
    t16_8.xyz = vec3(t16_27) * t16_1.xyz + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_27 = (-_OcclusionStrength) + 1.0;
    t16_27 = t10_3.x * _OcclusionStrength + t16_27;
    t16_8.xyz = vec3(t16_27) * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_29 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3.x = max(t16_29, 0.0);
    t16_0.xyz = t16_0.xyz * t16_3.xxx + t16_5.xyz;
    t16_29 = dot(t16_2.xyz, t16_4.xyz);
    t16_29 = t16_29 + t16_29;
    t16_5.xyz = t16_4.xyz * (-vec3(t16_29)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3.x = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3.x) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_5.xyz, t16_28);
    t16_28 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_28);
    t16_4.xyz = vec3(t16_27) * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    t16_3.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t30 = vs_TEXCOORD7;
    t30 = clamp(t30, 0.0, 1.0);
    t3.xyz = vec3(t30) * t16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
highp vec3 t3;
mediump vec3 t16_3;
lowp vec4 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump float t16_10;
mediump float t16_13;
lowp vec3 t10_13;
mediump float t16_30;
mediump float t16_31;
mediump float t16_32;
highp float t33;
mediump float t16_34;
void main()
{
    vec3 txVec37 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec37, 0.0);
    t16_10 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_10 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_30 = inversesqrt(t16_30);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_30) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_30) * vs_TEXCOORD1.xyz;
    t16_30 = dot(t16_1.xyz, t16_1.xyz);
    t16_3.x = max(t16_30, 0.00100000005);
    t16_30 = inversesqrt(t16_3.x);
    t16_1.xyz = vec3(t16_30) * t16_1.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3.x = max(t16_30, 0.0);
    t16_30 = t16_3.x * t16_3.x;
    t16_31 = (-_Glossiness) + 1.0;
    t16_32 = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_32;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_3.x = t16_30 * t16_3.x + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_32 = t16_30 * t16_30;
    t16_30 = t16_30 * t16_30 + 1.0;
    t10_13.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_13.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_34 = dot(t16_4.xyz, t16_4.xyz);
    t16_34 = inversesqrt(t16_34);
    t16_4.xyz = vec3(t16_34) * t16_4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_13 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_13);
    t16_1.x = t16_1.x * t16_32;
    t16_1.x = exp2(t16_1.x);
    t16_30 = t16_30 * t16_1.x;
    t16_3.x = t16_30 / t16_3.x;
    t16_30 = max(t16_3.x, 0.0);
    t16_30 = min(t16_30, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_32 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = vec3(t16_32) * t16_6.xyz;
    t16_32 = (-t16_32) + _Glossiness;
    t16_32 = t16_32 + 1.0;
    t16_32 = clamp(t16_32, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_32);
    t16_8.xyz = vec3(t16_30) * t16_1.xyz + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t10_3 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_30 = t10_3.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_3.xyz * vec3(t16_30);
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_3 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_3.xyz + vec3(-0.5, -0.5, -0.5);
    t16_30 = dot(t16_4.xyz, t10_9.xyz);
    t16_30 = t16_30 + 0.5;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_3.www;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_30 = (-_OcclusionStrength) + 1.0;
    t16_30 = t10_3.x * _OcclusionStrength + t16_30;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_32 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3.x = max(t16_32, 0.0);
    t16_0.xyz = t16_0.xyz * t16_3.xxx + t16_5.xyz;
    t16_32 = dot(t16_2.xyz, t16_4.xyz);
    t16_32 = t16_32 + t16_32;
    t16_5.xyz = t16_4.xyz * (-vec3(t16_32)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3.x = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3.x) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_5.xyz, t16_31);
    t16_31 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_31);
    t16_4.xyz = vec3(t16_30) * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    t16_3.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t33 = vs_TEXCOORD7;
    t33 = clamp(t33, 0.0, 1.0);
    t3.xyz = vec3(t33) * t16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec3 t2;
highp vec4 t3;
highp vec4 t4;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp float t21;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t21 = dot(t1.xyz, t1.xyz);
    t21 = inversesqrt(t21);
    t1.xyz = vec3(t21) * t1.xyz;
    vs_TEXCOORD2.xyz = t1.xyz;
    vs_TEXCOORD2.w = 0.0;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t21 = dot(t2.xyz, t2.xyz);
    t21 = inversesqrt(t21);
    t2.xyz = vec3(t21) * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t21 = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = vec3(t21) * t16_4.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.xyz = t2.xyz;
    vs_TEXCOORD4.w = 0.0;
    t1 = (-t0.yyyy) + unity_4LightPosY0;
    t3 = t2.yyyy * t1;
    t1 = t1 * t1;
    t4 = (-t0.xxxx) + unity_4LightPosX0;
    t0 = (-t0.zzzz) + unity_4LightPosZ0;
    t3 = t4 * t2.xxxx + t3;
    t1 = t4 * t4 + t1;
    t1 = t0 * t0 + t1;
    t0 = t0 * t2.zzzz + t3;
    t3 = inversesqrt(t1);
    t1 = t1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    t1 = vec4(1.0, 1.0, 1.0, 1.0) / t1;
    t0 = t0 * t3;
    t0 = max(t0, vec4(0.0, 0.0, 0.0, 0.0));
    t0 = t1 * t0;
    t1.xyz = t0.yyy * unity_LightColor[1].xyz;
    t1.xyz = unity_LightColor[0].xyz * t0.xxx + t1.xyz;
    t0.xyz = unity_LightColor[2].xyz * t0.zzz + t1.xyz;
    t0.xyz = unity_LightColor[3].xyz * t0.www + t0.xyz;
    t16_5.x = t2.y * t2.y;
    t16_5.x = t2.x * t2.x + (-t16_5.x);
    t16_1 = t2.yzzx * t2.xyzz;
    t16_6.x = dot(unity_SHBr, t16_1);
    t16_6.y = dot(unity_SHBg, t16_1);
    t16_6.z = dot(unity_SHBb, t16_1);
    t16_5.xyz = unity_SHC.xyz * t16_5.xxx + t16_6.xyz;
    t0.xyz = t0.xyz + t16_5.xyz;
    vs_TEXCOORD5.xyz = t0.xyz;
    vs_TEXCOORD5.w = 0.0;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
highp vec3 t3;
mediump vec3 t16_3;
lowp vec3 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
mediump float t16_9;
mediump float t16_12;
lowp vec3 t10_12;
mediump float t16_27;
mediump float t16_28;
mediump float t16_29;
highp float t30;
mediump float t16_31;
void main()
{
    vec3 txVec54 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec54, 0.0);
    t16_9 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_9 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_27 = inversesqrt(t16_27);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_27) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_27) * vs_TEXCOORD1.xyz;
    t16_27 = dot(t16_1.xyz, t16_1.xyz);
    t16_3.x = max(t16_27, 0.00100000005);
    t16_27 = inversesqrt(t16_3.x);
    t16_1.xyz = vec3(t16_27) * t16_1.xyz;
    t16_27 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3.x = max(t16_27, 0.0);
    t16_27 = t16_3.x * t16_3.x;
    t16_28 = (-_Glossiness) + 1.0;
    t16_29 = t16_28 * t16_28;
    t16_27 = t16_27 * _Glossiness + t16_29;
    t16_27 = t16_27 * unity_LightGammaCorrectionConsts.z;
    t16_3.x = t16_27 * t16_3.x + 9.99999975e-005;
    t16_27 = (-t16_28) + 1.0;
    t16_28 = log2(t16_28);
    t16_28 = t16_28 * 0.75;
    t16_28 = exp2(t16_28);
    t16_28 = t16_28 * 7.0;
    t16_27 = t16_27 * 0.967999995 + 0.0299999993;
    t16_27 = log2(t16_27);
    t16_27 = 10.0 / t16_27;
    t16_27 = max(t16_27, -255.936996);
    t16_29 = t16_27 * t16_27 + 1.0;
    t16_27 = t16_27 * t16_27;
    t10_12.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_12.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_31 = dot(t16_4.xyz, t16_4.xyz);
    t16_31 = inversesqrt(t16_31);
    t16_4.xyz = vec3(t16_31) * t16_4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_12 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_12);
    t16_27 = t16_27 * t16_1.x;
    t16_27 = exp2(t16_27);
    t16_27 = t16_27 * t16_29;
    t16_3.x = t16_27 / t16_3.x;
    t16_27 = max(t16_3.x, 0.0);
    t16_27 = min(t16_27, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_29 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = vec3(t16_29) * t16_6.xyz;
    t16_29 = (-t16_29) + _Glossiness;
    t16_29 = t16_29 + 1.0;
    t16_29 = clamp(t16_29, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_29);
    t16_8.xyz = vec3(t16_27) * t16_1.xyz + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t16_4.w = 1.0;
    t16_8.x = dot(unity_SHAr, t16_4);
    t16_8.y = dot(unity_SHAg, t16_4);
    t16_8.z = dot(unity_SHAb, t16_4);
    t16_8.xyz = t16_8.xyz + vs_TEXCOORD5.xyz;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_27 = (-_OcclusionStrength) + 1.0;
    t16_27 = t10_3.x * _OcclusionStrength + t16_27;
    t16_8.xyz = vec3(t16_27) * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_29 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3.x = max(t16_29, 0.0);
    t16_0.xyz = t16_0.xyz * t16_3.xxx + t16_5.xyz;
    t16_29 = dot(t16_2.xyz, t16_4.xyz);
    t16_29 = t16_29 + t16_29;
    t16_5.xyz = t16_4.xyz * (-vec3(t16_29)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3.x = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3.x) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_5.xyz, t16_28);
    t16_28 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_28);
    t16_4.xyz = vec3(t16_27) * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    t16_3.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t30 = vs_TEXCOORD7;
    t30 = clamp(t30, 0.0, 1.0);
    t3.xyz = vec3(t30) * t16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in highp vec2 in_TEXCOORD2;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
mediump vec3 t16_3;
highp float t12;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t0.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t0.xyz;
    t0.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t0.xyz;
    t12 = dot(t0.xyz, t0.xyz);
    t12 = inversesqrt(t12);
    t0.xyz = vec3(t12) * t0.xyz;
    vs_TEXCOORD2.xyz = t0.xyz;
    vs_TEXCOORD2.w = 0.0;
    t1.x = in_NORMAL0.x * _World2Object[0].x;
    t1.y = in_NORMAL0.x * _World2Object[1].x;
    t1.z = in_NORMAL0.x * _World2Object[2].x;
    t2.x = in_NORMAL0.y * _World2Object[0].y;
    t2.y = in_NORMAL0.y * _World2Object[1].y;
    t2.z = in_NORMAL0.y * _World2Object[2].y;
    t1.xyz = t1.xyz + t2.xyz;
    t2.x = in_NORMAL0.z * _World2Object[0].z;
    t2.y = in_NORMAL0.z * _World2Object[1].z;
    t2.z = in_NORMAL0.z * _World2Object[2].z;
    t1.xyz = t1.xyz + t2.xyz;
    t12 = dot(t1.xyz, t1.xyz);
    t12 = inversesqrt(t12);
    t1.xyz = vec3(t12) * t1.xyz;
    t16_3.xyz = t0.yzx * t1.zxy;
    t16_3.xyz = t1.yzx * t0.zxy + (-t16_3.xyz);
    vs_TEXCOORD4.xyz = t1.xyz;
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_3.xyz;
    vs_TEXCOORD3.w = 0.0;
    vs_TEXCOORD4.w = 0.0;
    t0.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
    vs_TEXCOORD5.zw = t0.xy;
    vs_TEXCOORD5.xy = vec2(0.0, 0.0);
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _OcclusionMap;
uniform lowp sampler2D unity_DynamicLightmap;
uniform lowp sampler2D unity_DynamicDirectionality;
uniform lowp samplerCube unity_SpecCube0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec3 t16_2;
lowp vec4 t10_2;
highp vec3 t3;
mediump vec3 t16_3;
lowp vec4 t10_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump vec3 t16_8;
lowp vec3 t10_9;
mediump float t16_10;
mediump float t16_13;
lowp vec3 t10_13;
mediump float t16_30;
mediump float t16_31;
mediump float t16_32;
highp float t33;
mediump float t16_34;
void main()
{
    vec3 txVec41 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec41, 0.0);
    t16_10 = (-_LightShadowData.x) + 1.0;
    t16_0.x = t16_0.x * t16_10 + _LightShadowData.x;
    t16_0.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_30 = inversesqrt(t16_30);
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_30) + _WorldSpaceLightPos0.xyz;
    t16_2.xyz = vec3(t16_30) * vs_TEXCOORD1.xyz;
    t16_30 = dot(t16_1.xyz, t16_1.xyz);
    t16_3.x = max(t16_30, 0.00100000005);
    t16_30 = inversesqrt(t16_3.x);
    t16_1.xyz = vec3(t16_30) * t16_1.xyz;
    t16_30 = dot(_WorldSpaceLightPos0.xyz, t16_1.xyz);
    t16_3.x = max(t16_30, 0.0);
    t16_30 = t16_3.x * t16_3.x;
    t16_31 = (-_Glossiness) + 1.0;
    t16_32 = t16_31 * t16_31;
    t16_30 = t16_30 * _Glossiness + t16_32;
    t16_30 = t16_30 * unity_LightGammaCorrectionConsts.z;
    t16_3.x = t16_30 * t16_3.x + 9.99999975e-005;
    t16_30 = (-t16_31) + 1.0;
    t16_31 = log2(t16_31);
    t16_31 = t16_31 * 0.75;
    t16_31 = exp2(t16_31);
    t16_31 = t16_31 * 7.0;
    t16_30 = t16_30 * 0.967999995 + 0.0299999993;
    t16_30 = log2(t16_30);
    t16_30 = 10.0 / t16_30;
    t16_30 = max(t16_30, -255.936996);
    t16_32 = t16_30 * t16_30;
    t16_30 = t16_30 * t16_30 + 1.0;
    t10_13.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_13.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_34 = dot(t16_4.xyz, t16_4.xyz);
    t16_34 = inversesqrt(t16_34);
    t16_4.xyz = vec3(t16_34) * t16_4.xyz;
    t16_1.x = dot(t16_4.xyz, t16_1.xyz);
    t16_13 = max(t16_1.x, 0.0);
    t16_1.x = log2(t16_13);
    t16_1.x = t16_1.x * t16_32;
    t16_1.x = exp2(t16_1.x);
    t16_30 = t16_30 * t16_1.x;
    t16_3.x = t16_30 / t16_3.x;
    t16_30 = max(t16_3.x, 0.0);
    t16_30 = min(t16_30, 100.0);
    t10_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = t10_3.xyz * _Color.xyz;
    t16_1.xyz = _Color.xyz * t10_3.xyz + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xyz = vec3(_Metallic) * t16_1.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_32 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = vec3(t16_32) * t16_6.xyz;
    t16_32 = (-t16_32) + _Glossiness;
    t16_32 = t16_32 + 1.0;
    t16_32 = clamp(t16_32, 0.0, 1.0);
    t16_7.xyz = (-t16_1.xyz) + vec3(t16_32);
    t16_8.xyz = vec3(t16_30) * t16_1.xyz + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_8.xyz;
    t10_3 = texture(unity_DynamicLightmap, vs_TEXCOORD5.zw);
    t16_30 = t10_3.w * unity_DynamicLightmap_HDR.x;
    t16_8.xyz = t10_3.xyz * vec3(t16_30);
    t16_8.xyz = log2(t16_8.xyz);
    t16_8.xyz = t16_8.xyz * unity_DynamicLightmap_HDR.yyy;
    t16_8.xyz = exp2(t16_8.xyz);
    t10_3 = texture(unity_DynamicDirectionality, vs_TEXCOORD5.zw);
    t10_9.xyz = t10_3.xyz + vec3(-0.5, -0.5, -0.5);
    t16_30 = dot(t16_4.xyz, t10_9.xyz);
    t16_30 = t16_30 + 0.5;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_8.xyz = t16_8.xyz / t10_3.www;
    t10_3.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;
    t16_30 = (-_OcclusionStrength) + 1.0;
    t16_30 = t10_3.x * _OcclusionStrength + t16_30;
    t16_8.xyz = vec3(t16_30) * t16_8.xyz;
    t16_5.xyz = t16_5.xyz * t16_8.xyz;
    t16_32 = dot(t16_4.xyz, _WorldSpaceLightPos0.xyz);
    t16_3.x = max(t16_32, 0.0);
    t16_0.xyz = t16_0.xyz * t16_3.xxx + t16_5.xyz;
    t16_32 = dot(t16_2.xyz, t16_4.xyz);
    t16_32 = t16_32 + t16_32;
    t16_5.xyz = t16_4.xyz * (-vec3(t16_32)) + t16_2.xyz;
    t16_2.x = dot(t16_4.xyz, (-t16_2.xyz));
    t16_3.x = max(t16_2.x, 0.0);
    t16_2.x = (-t16_3.x) + 1.0;
    t16_2.x = t16_2.x * t16_2.x;
    t16_2.x = t16_2.x * t16_2.x;
    t16_1.xyz = t16_2.xxx * t16_7.xyz + t16_1.xyz;
    t10_2 = textureLod(unity_SpecCube0, t16_5.xyz, t16_31);
    t16_31 = t10_2.w * unity_SpecCube0_HDR.x;
    t16_4.xyz = t10_2.xyz * vec3(t16_31);
    t16_4.xyz = vec3(t16_30) * t16_4.xyz;
    t16_0.xyz = t16_4.xyz * t16_1.xyz + t16_0.xyz;
    t16_3.xyz = t16_0.xyz + (-unity_FogColor.xyz);
    t33 = vs_TEXCOORD7;
    t33 = clamp(t33, 0.0, 1.0);
    t3.xyz = vec3(t33) * t16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = t3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3"
}
}
 }
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  GpuProgramID 115835
Program "vp" {
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp float t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_8;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_4.x = dot(t16_1.xyz, t16_1.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_4.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_4.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_4.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_4.x = t16_13 * t16_13;
    t16_8 = t16_13 * t16_13 + 1.0;
    t16_0.x = t16_0.x * t16_4.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_8;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t2 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTexture0, vec2(t2)).w;
    t16_1.xyz = t10_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    SV_Target0.xyz = t16_6.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_0.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_1.xyz;
    t16_12 = dot(t16_0.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.00100000005);
    t16_12 = inversesqrt(t16_2.x);
    t16_0.xyz = vec3(t16_12) * t16_0.xyz;
    t16_12 = dot(t16_1.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.0);
    t16_12 = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_12 = t16_12 * _Glossiness + t16_3.x;
    t16_12 = t16_12 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_12 * t16_2.x + 9.99999975e-005;
    t16_12 = t16_13 * t16_13 + 1.0;
    t16_13 = t16_13 * t16_13;
    t16_3.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_3.x = inversesqrt(t16_3.x);
    t16_3.xyz = t16_3.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_0.xyz);
    t16_0.y = dot(t16_3.xyz, t16_1.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_0.x = t16_0.x * t16_13;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_12;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t16_0.xyz = t16_0.xyz * _LightColor0.xyz;
    SV_Target0.xyz = t16_6.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
lowp float t10_4;
mediump vec3 t16_5;
mediump vec2 t16_7;
mediump float t16_10;
bool tb12;
mediump float t16_15;
mediump float t16_16;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_5.x = dot(t16_1.xyz, t16_1.xyz);
    t16_5.x = inversesqrt(t16_5.x);
    t16_5.xyz = t16_5.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_5.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_5.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_16 = (-_Glossiness) + 1.0;
    t16_3.x = t16_16 * t16_16;
    t16_16 = (-t16_16) + 1.0;
    t16_16 = t16_16 * 0.967999995 + 0.0299999993;
    t16_16 = log2(t16_16);
    t16_16 = 10.0 / t16_16;
    t16_16 = max(t16_16, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_5.xyz);
    t16_7.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_7.y);
    t16_5.x = t16_16 * t16_16;
    t16_10 = t16_16 * t16_16 + 1.0;
    t16_0.x = t16_0.x * t16_5.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_10;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_5.xyz * t16_0.xxx;
    t16_15 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_15) + t16_0.xyz;
    t16_1.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_1.xy = t16_1.xy + vec2(0.5, 0.5);
    t10_2.x = texture(_LightTexture0, t16_1.xy).w;
    tb12 = 0.0<vs_TEXCOORD5.z;
    t10_4 = (tb12) ? 1.0 : 0.0;
    t10_4 = t10_2.x * t10_4;
    t16_2.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTextureB0, t16_2.xx).w;
    t10_4 = t10_2.x * t10_4;
    t16_1.xyz = vec3(t10_4) * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    SV_Target0.xyz = t16_7.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp float t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_8;
lowp float t10_10;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_4.x = dot(t16_1.xyz, t16_1.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_4.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_4.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_4.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_4.x = t16_13 * t16_13;
    t16_8 = t16_13 * t16_13 + 1.0;
    t16_0.x = t16_0.x * t16_4.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_8;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t2 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTextureB0, vec2(t2)).w;
    t10_10 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_2.x = t10_10 * t10_2.x;
    t16_1.xyz = t16_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    SV_Target0.xyz = t16_6.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec2 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t16_1.x = _LightMatrix0[0].x;
    t16_1.y = _LightMatrix0[1].x;
    t16_1.z = _LightMatrix0[2].x;
    t16_1.w = _LightMatrix0[3].x;
    vs_TEXCOORD5.x = dot(t16_1, t0);
    t16_1.x = _LightMatrix0[0].y;
    t16_1.y = _LightMatrix0[1].y;
    t16_1.z = _LightMatrix0[2].y;
    t16_1.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_1, t0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec2 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_0.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_1.xyz;
    t16_12 = dot(t16_0.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.00100000005);
    t16_12 = inversesqrt(t16_2.x);
    t16_0.xyz = vec3(t16_12) * t16_0.xyz;
    t16_12 = dot(t16_1.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.0);
    t16_12 = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_12 = t16_12 * _Glossiness + t16_3.x;
    t16_12 = t16_12 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_12 * t16_2.x + 9.99999975e-005;
    t16_12 = t16_13 * t16_13 + 1.0;
    t16_13 = t16_13 * t16_13;
    t16_3.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_3.x = inversesqrt(t16_3.x);
    t16_3.xyz = t16_3.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_0.xyz);
    t16_0.y = dot(t16_3.xyz, t16_1.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_0.x = t16_0.x * t16_13;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_12;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t10_2.x = texture(_LightTexture0, vs_TEXCOORD5.xy).w;
    t16_1.xyz = t10_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    SV_Target0.xyz = t16_6.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec4 t16_1;
lowp vec4 t10_1;
lowp float t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump float t16_7;
bool tb7;
mediump float t16_9;
mediump float t16_13;
mediump float t16_18;
mediump float t16_21;
mediump float t16_22;
void main()
{
    t16_0.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_0.xy = t16_0.xy + vec2(0.5, 0.5);
    t10_1.x = texture(_LightTexture0, t16_0.xy).w;
    tb7 = 0.0<vs_TEXCOORD5.z;
    t10_2 = (tb7) ? 1.0 : 0.0;
    t10_2 = t10_1.x * t10_2;
    t16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_1.x = texture(_LightTextureB0, t16_0.xx).w;
    t10_2 = t10_1.x * t10_2;
    t16_1.xyz = vs_TEXCOORD6.xyz / vs_TEXCOORD6.www;
    vec3 txVec1 = vec3(t16_1.xy,t16_1.z);
    t10_1.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec1, 0.0);
    t16_0.x = (-_LightShadowData.x) + 1.0;
    t16_0.x = t10_1.x * t16_0.x + _LightShadowData.x;
    t10_2 = t16_0.x * t10_2;
    t16_0.xyz = vec3(t10_2) * _LightColor0.xyz;
    t16_18 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_18 = inversesqrt(t16_18);
    t16_3.x = vs_TEXCOORD2.w;
    t16_3.y = vs_TEXCOORD3.w;
    t16_3.z = vs_TEXCOORD4.w;
    t16_21 = dot(t16_3.xyz, t16_3.xyz);
    t16_21 = inversesqrt(t16_21);
    t16_3.xyz = vec3(t16_21) * t16_3.xyz;
    t16_4.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_18) + t16_3.xyz;
    t16_18 = dot(t16_4.xyz, t16_4.xyz);
    t16_1.x = max(t16_18, 0.00100000005);
    t16_18 = inversesqrt(t16_1.x);
    t16_4.xyz = vec3(t16_18) * t16_4.xyz;
    t16_18 = dot(t16_3.xyz, t16_4.xyz);
    t16_1.x = max(t16_18, 0.0);
    t16_18 = t16_1.x * t16_1.x;
    t16_21 = (-_Glossiness) + 1.0;
    t16_22 = t16_21 * t16_21;
    t16_21 = (-t16_21) + 1.0;
    t16_21 = t16_21 * 0.967999995 + 0.0299999993;
    t16_21 = log2(t16_21);
    t16_21 = 10.0 / t16_21;
    t16_21 = max(t16_21, -255.936996);
    t16_18 = t16_18 * _Glossiness + t16_22;
    t16_18 = t16_18 * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_18 * t16_1.x + 9.99999975e-005;
    t16_18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_18 = inversesqrt(t16_18);
    t16_5.xyz = vec3(t16_18) * vs_TEXCOORD4.xyz;
    t16_18 = dot(t16_5.xyz, t16_4.xyz);
    t16_3.x = dot(t16_5.xyz, t16_3.xyz);
    t16_7 = max(t16_3.x, 0.0);
    t16_13 = max(t16_18, 0.0);
    t16_18 = log2(t16_13);
    t16_3.x = t16_21 * t16_21;
    t16_9 = t16_21 * t16_21 + 1.0;
    t16_18 = t16_18 * t16_3.x;
    t16_18 = exp2(t16_18);
    t16_18 = t16_18 * t16_9;
    t16_1.x = t16_18 / t16_1.x;
    t16_18 = max(t16_1.x, 0.0);
    t16_18 = min(t16_18, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_3.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_3.xyz = vec3(_Metallic) * t16_3.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.xyz = vec3(t16_18) * t16_3.xyz;
    t16_18 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_3.xyz = t16_1.xzw * vec3(t16_18) + t16_3.xyz;
    t16_0.xyz = t16_0.xyz * t16_3.xyz;
    SV_Target0.xyz = vec3(t16_7) * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
highp vec4 t1;
mediump vec3 t16_1;
highp float t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
bool tb2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_8;
highp float t10;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_4.x = dot(t16_1.xyz, t16_1.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_4.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_4.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_4.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_4.x = t16_13 * t16_13;
    t16_8 = t16_13 * t16_13 + 1.0;
    t16_0.x = t16_0.x * t16_4.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_8;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t2 = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t2 = sqrt(t2);
    t2 = t2 * _LightPositionRange.w;
    t2 = t2 * 0.970000029;
    t1 = texture(_ShadowMapTexture, vs_TEXCOORD6.xyz);
    t10 = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb2 = t10<t2;
    t16_12 = (tb2) ? _LightShadowData.x : 1.0;
    t2 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTexture0, vec2(t2)).w;
    t16_2.x = t16_12 * t10_2.x;
    t16_3.xyz = t16_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_3.xyz;
    SV_Target0.xyz = t16_6.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
highp vec4 t1;
mediump vec3 t16_1;
highp float t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
bool tb2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_8;
highp float t10;
lowp float t10_10;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_4.x = dot(t16_1.xyz, t16_1.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_4.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_4.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_4.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_4.x = t16_13 * t16_13;
    t16_8 = t16_13 * t16_13 + 1.0;
    t16_0.x = t16_0.x * t16_4.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_8;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t2 = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t2 = sqrt(t2);
    t2 = t2 * _LightPositionRange.w;
    t2 = t2 * 0.970000029;
    t1 = texture(_ShadowMapTexture, vs_TEXCOORD6.xyz);
    t10 = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb2 = t10<t2;
    t16_12 = (tb2) ? _LightShadowData.x : 1.0;
    t2 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTextureB0, vec2(t2)).w;
    t10_10 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_2.x = t10_10 * t10_2.x;
    t16_2.x = t16_12 * t16_2.x;
    t16_3.xyz = t16_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_3.xyz;
    SV_Target0.xyz = t16_6.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	vec4 _ShadowOffsets[4];
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	vec4 _ShadowOffsets[4];
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 t16_0;
highp vec3 t1;
mediump vec4 t16_1;
lowp vec4 t10_1;
highp vec4 t2;
highp vec3 t3;
lowp float t10_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump float t16_9;
lowp float t10_9;
mediump float t16_13;
mediump float t16_17;
bool tb17;
mediump float t16_24;
mediump float t16_29;
mediump float t16_30;
void main()
{
    t16_0.x = (-_LightShadowData.x) + 1.0;
    t16_1.xyz = vs_TEXCOORD6.xyz / vs_TEXCOORD6.www;
    t2.xyz = t16_1.xyz + _ShadowOffsets[0].xyz;
    vec3 txVec1 = vec3(t2.xy,t2.z);
    t2.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec1, 0.0);
    t3.xyz = t16_1.xyz + _ShadowOffsets[1].xyz;
    vec3 txVec2 = vec3(t3.xy,t3.z);
    t2.y = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec2, 0.0);
    t3.xyz = t16_1.xyz + _ShadowOffsets[2].xyz;
    t1.xyz = t16_1.xyz + _ShadowOffsets[3].xyz;
    vec3 txVec3 = vec3(t1.xy,t1.z);
    t2.w = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec3, 0.0);
    vec3 txVec4 = vec3(t3.xy,t3.z);
    t2.z = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec4, 0.0);
    t16_0 = t2 * t16_0.xxxx + _LightShadowData.xxxx;
    t16_1.x = dot(t16_0, vec4(0.25, 0.25, 0.25, 0.25));
    t16_0.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_0.xy = t16_0.xy + vec2(0.5, 0.5);
    t10_9 = texture(_LightTexture0, t16_0.xy).w;
    tb17 = 0.0<vs_TEXCOORD5.z;
    t10_4 = (tb17) ? 1.0 : 0.0;
    t10_4 = t10_9 * t10_4;
    t16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_9 = texture(_LightTextureB0, t16_0.xx).w;
    t10_4 = t10_9 * t10_4;
    t10_4 = t16_1.x * t10_4;
    t16_0.xyz = vec3(t10_4) * _LightColor0.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_5.x = vs_TEXCOORD2.w;
    t16_5.y = vs_TEXCOORD3.w;
    t16_5.z = vs_TEXCOORD4.w;
    t16_29 = dot(t16_5.xyz, t16_5.xyz);
    t16_29 = inversesqrt(t16_29);
    t16_5.xyz = vec3(t16_29) * t16_5.xyz;
    t16_6.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_5.xyz;
    t16_24 = dot(t16_6.xyz, t16_6.xyz);
    t16_1.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_1.x);
    t16_6.xyz = vec3(t16_24) * t16_6.xyz;
    t16_24 = dot(t16_5.xyz, t16_6.xyz);
    t16_1.x = max(t16_24, 0.0);
    t16_24 = t16_1.x * t16_1.x;
    t16_29 = (-_Glossiness) + 1.0;
    t16_30 = t16_29 * t16_29;
    t16_29 = (-t16_29) + 1.0;
    t16_29 = t16_29 * 0.967999995 + 0.0299999993;
    t16_29 = log2(t16_29);
    t16_29 = 10.0 / t16_29;
    t16_29 = max(t16_29, -255.936996);
    t16_24 = t16_24 * _Glossiness + t16_30;
    t16_24 = t16_24 * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_24 * t16_1.x + 9.99999975e-005;
    t16_24 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_7.xyz = vec3(t16_24) * vs_TEXCOORD4.xyz;
    t16_24 = dot(t16_7.xyz, t16_6.xyz);
    t16_5.x = dot(t16_7.xyz, t16_5.xyz);
    t16_9 = max(t16_5.x, 0.0);
    t16_17 = max(t16_24, 0.0);
    t16_24 = log2(t16_17);
    t16_5.x = t16_29 * t16_29;
    t16_13 = t16_29 * t16_29 + 1.0;
    t16_24 = t16_24 * t16_5.x;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_13;
    t16_1.x = t16_24 / t16_1.x;
    t16_24 = max(t16_1.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_5.xyz = vec3(t16_24) * t16_5.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = t16_1.xzw * vec3(t16_24) + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_5.xyz;
    SV_Target0.xyz = vec3(t16_9) * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec4 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
bvec4 tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp vec3 t7;
mediump float t16_7;
mediump float t16_11;
mediump float t16_14;
mediump float t16_24;
mediump float t16_25;
mediump float t16_26;
void main()
{
    t0.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t0.x = sqrt(t0.x);
    t0.x = t0.x * _LightPositionRange.w;
    t0.x = t0.x * 0.970000029;
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, 0.0078125, 0.0078125);
    t1 = texture(_ShadowMapTexture, t7.xyz);
    t1.x = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, -0.0078125, 0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.y = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, 0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.z = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, -0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.w = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb0 = lessThan(t1, t0.xxxx);
    t0.x = (tb0.x) ? _LightShadowData.x : float(1.0);
    t0.y = (tb0.y) ? _LightShadowData.x : float(1.0);
    t0.z = (tb0.z) ? _LightShadowData.x : float(1.0);
    t0.w = (tb0.w) ? _LightShadowData.x : float(1.0);
    t16_3.x = dot(t0, vec4(0.25, 0.25, 0.25, 0.25));
    t0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTexture0, t0.xx).w;
    t16_0.x = t16_3.x * t10_0.x;
    t16_3.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_4.x = vs_TEXCOORD2.w;
    t16_4.y = vs_TEXCOORD3.w;
    t16_4.z = vs_TEXCOORD4.w;
    t16_25 = dot(t16_4.xyz, t16_4.xyz);
    t16_25 = inversesqrt(t16_25);
    t16_4.xyz = vec3(t16_25) * t16_4.xyz;
    t16_5.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_4.xyz;
    t16_24 = dot(t16_5.xyz, t16_5.xyz);
    t16_0.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_0.x);
    t16_5.xyz = vec3(t16_24) * t16_5.xyz;
    t16_24 = dot(t16_4.xyz, t16_5.xyz);
    t16_0.x = max(t16_24, 0.0);
    t16_24 = t16_0.x * t16_0.x;
    t16_25 = (-_Glossiness) + 1.0;
    t16_26 = t16_25 * t16_25;
    t16_25 = (-t16_25) + 1.0;
    t16_25 = t16_25 * 0.967999995 + 0.0299999993;
    t16_25 = log2(t16_25);
    t16_25 = 10.0 / t16_25;
    t16_25 = max(t16_25, -255.936996);
    t16_24 = t16_24 * _Glossiness + t16_26;
    t16_24 = t16_24 * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_24 * t16_0.x + 9.99999975e-005;
    t16_24 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_6.xyz = vec3(t16_24) * vs_TEXCOORD4.xyz;
    t16_24 = dot(t16_6.xyz, t16_5.xyz);
    t16_4.x = dot(t16_6.xyz, t16_4.xyz);
    t16_7 = max(t16_4.x, 0.0);
    t16_14 = max(t16_24, 0.0);
    t16_24 = log2(t16_14);
    t16_4.x = t16_25 * t16_25;
    t16_11 = t16_25 * t16_25 + 1.0;
    t16_24 = t16_24 * t16_4.x;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_11;
    t16_0.x = t16_24 / t16_0.x;
    t16_24 = max(t16_0.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_4.xyz = vec3(t16_24) * t16_4.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_0.xzw * vec3(t16_24) + t16_4.xyz;
    t16_3.xyz = t16_3.xyz * t16_4.xyz;
    SV_Target0.xyz = vec3(t16_7) * t16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec4 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
bvec4 tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp vec3 t7;
mediump float t16_7;
lowp float t10_7;
mediump float t16_11;
mediump float t16_14;
mediump float t16_24;
mediump float t16_25;
mediump float t16_26;
void main()
{
    t0.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t0.x = sqrt(t0.x);
    t0.x = t0.x * _LightPositionRange.w;
    t0.x = t0.x * 0.970000029;
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, 0.0078125, 0.0078125);
    t1 = texture(_ShadowMapTexture, t7.xyz);
    t1.x = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, -0.0078125, 0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.y = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, 0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.z = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, -0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.w = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb0 = lessThan(t1, t0.xxxx);
    t0.x = (tb0.x) ? _LightShadowData.x : float(1.0);
    t0.y = (tb0.y) ? _LightShadowData.x : float(1.0);
    t0.z = (tb0.z) ? _LightShadowData.x : float(1.0);
    t0.w = (tb0.w) ? _LightShadowData.x : float(1.0);
    t16_3.x = dot(t0, vec4(0.25, 0.25, 0.25, 0.25));
    t0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, t0.xx).w;
    t10_7 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_0.x = t10_7 * t10_0.x;
    t16_0.x = t16_3.x * t16_0.x;
    t16_3.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_4.x = vs_TEXCOORD2.w;
    t16_4.y = vs_TEXCOORD3.w;
    t16_4.z = vs_TEXCOORD4.w;
    t16_25 = dot(t16_4.xyz, t16_4.xyz);
    t16_25 = inversesqrt(t16_25);
    t16_4.xyz = vec3(t16_25) * t16_4.xyz;
    t16_5.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_4.xyz;
    t16_24 = dot(t16_5.xyz, t16_5.xyz);
    t16_0.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_0.x);
    t16_5.xyz = vec3(t16_24) * t16_5.xyz;
    t16_24 = dot(t16_4.xyz, t16_5.xyz);
    t16_0.x = max(t16_24, 0.0);
    t16_24 = t16_0.x * t16_0.x;
    t16_25 = (-_Glossiness) + 1.0;
    t16_26 = t16_25 * t16_25;
    t16_25 = (-t16_25) + 1.0;
    t16_25 = t16_25 * 0.967999995 + 0.0299999993;
    t16_25 = log2(t16_25);
    t16_25 = 10.0 / t16_25;
    t16_25 = max(t16_25, -255.936996);
    t16_24 = t16_24 * _Glossiness + t16_26;
    t16_24 = t16_24 * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_24 * t16_0.x + 9.99999975e-005;
    t16_24 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_6.xyz = vec3(t16_24) * vs_TEXCOORD4.xyz;
    t16_24 = dot(t16_6.xyz, t16_5.xyz);
    t16_4.x = dot(t16_6.xyz, t16_4.xyz);
    t16_7 = max(t16_4.x, 0.0);
    t16_14 = max(t16_24, 0.0);
    t16_24 = log2(t16_14);
    t16_4.x = t16_25 * t16_25;
    t16_11 = t16_25 * t16_25 + 1.0;
    t16_24 = t16_24 * t16_4.x;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_11;
    t16_0.x = t16_24 / t16_0.x;
    t16_24 = max(t16_0.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_4.xyz = vec3(t16_24) * t16_4.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_0.xzw * vec3(t16_24) + t16_4.xyz;
    t16_3.xyz = t16_3.xyz * t16_4.xyz;
    SV_Target0.xyz = vec3(t16_7) * t16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD5 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_0.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_1.xyz;
    t16_12 = dot(t16_0.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.00100000005);
    t16_12 = inversesqrt(t16_2.x);
    t16_0.xyz = vec3(t16_12) * t16_0.xyz;
    t16_12 = dot(t16_1.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.0);
    t16_12 = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_12 = t16_12 * _Glossiness + t16_3.x;
    t16_12 = t16_12 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_12 * t16_2.x + 9.99999975e-005;
    t16_12 = t16_13 * t16_13 + 1.0;
    t16_13 = t16_13 * t16_13;
    t16_3.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_3.x = inversesqrt(t16_3.x);
    t16_3.xyz = t16_3.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_0.xyz);
    t16_0.y = dot(t16_3.xyz, t16_1.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_0.x = t16_0.x * t16_13;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_12;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    vec3 txVec2 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
    t16_12 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec2, 0.0);
    t16_1.x = (-_LightShadowData.x) + 1.0;
    t16_12 = t16_12 * t16_1.x + _LightShadowData.x;
    t16_1.xyz = vec3(t16_12) * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    SV_Target0.xyz = t16_6.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec2 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t2.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    t2.y = dot(t16_0, t1);
    vs_TEXCOORD5.xy = t2.xy;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec2 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_0.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_1.xyz;
    t16_12 = dot(t16_0.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.00100000005);
    t16_12 = inversesqrt(t16_2.x);
    t16_0.xyz = vec3(t16_12) * t16_0.xyz;
    t16_12 = dot(t16_1.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.0);
    t16_12 = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_12 = t16_12 * _Glossiness + t16_3.x;
    t16_12 = t16_12 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_12 * t16_2.x + 9.99999975e-005;
    t16_12 = t16_13 * t16_13 + 1.0;
    t16_13 = t16_13 * t16_13;
    t16_3.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_3.x = inversesqrt(t16_3.x);
    t16_3.xyz = t16_3.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_0.xyz);
    t16_0.y = dot(t16_3.xyz, t16_1.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_0.x = t16_0.x * t16_13;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_12;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    vec3 txVec5 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_12 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec5, 0.0);
    t16_1.x = (-_LightShadowData.x) + 1.0;
    t16_12 = t16_12 * t16_1.x + _LightShadowData.x;
    t10_2.x = texture(_LightTexture0, vs_TEXCOORD5.xy).w;
    t16_2.x = t16_12 * t10_2.x;
    t16_1.xyz = t16_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    SV_Target0.xyz = t16_6.xxx * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_8;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_4.x = dot(t16_1.xyz, t16_1.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_4.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_4.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_4.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_4.x = t16_13 * t16_13;
    t16_8 = t16_13 * t16_13 + 1.0;
    t16_0.x = t16_0.x * t16_4.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_8;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t2.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTexture0, t2.xx).w;
    t16_1.xyz = t10_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    t16_0.xyz = t16_6.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_0.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_1.xyz;
    t16_12 = dot(t16_0.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.00100000005);
    t16_12 = inversesqrt(t16_2.x);
    t16_0.xyz = vec3(t16_12) * t16_0.xyz;
    t16_12 = dot(t16_1.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.0);
    t16_12 = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_12 = t16_12 * _Glossiness + t16_3.x;
    t16_12 = t16_12 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_12 * t16_2.x + 9.99999975e-005;
    t16_12 = t16_13 * t16_13 + 1.0;
    t16_13 = t16_13 * t16_13;
    t16_3.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_3.x = inversesqrt(t16_3.x);
    t16_3.xyz = t16_3.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_0.xyz);
    t16_0.y = dot(t16_3.xyz, t16_1.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_0.x = t16_0.x * t16_13;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_12;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t16_0.xyz = t16_0.xyz * _LightColor0.xyz;
    t16_0.xyz = t16_6.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
lowp float t10_4;
mediump vec3 t16_5;
mediump vec2 t16_7;
mediump float t16_10;
bool tb12;
mediump float t16_15;
mediump float t16_16;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_5.x = dot(t16_1.xyz, t16_1.xyz);
    t16_5.x = inversesqrt(t16_5.x);
    t16_5.xyz = t16_5.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_5.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_5.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_16 = (-_Glossiness) + 1.0;
    t16_3.x = t16_16 * t16_16;
    t16_16 = (-t16_16) + 1.0;
    t16_16 = t16_16 * 0.967999995 + 0.0299999993;
    t16_16 = log2(t16_16);
    t16_16 = 10.0 / t16_16;
    t16_16 = max(t16_16, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_5.xyz);
    t16_7.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_7.y);
    t16_5.x = t16_16 * t16_16;
    t16_10 = t16_16 * t16_16 + 1.0;
    t16_0.x = t16_0.x * t16_5.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_10;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_5.xyz * t16_0.xxx;
    t16_15 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_15) + t16_0.xyz;
    t16_1.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_1.xy = t16_1.xy + vec2(0.5, 0.5);
    t10_2.x = texture(_LightTexture0, t16_1.xy).w;
    tb12 = 0.0<vs_TEXCOORD5.z;
    t10_4 = (tb12) ? 1.0 : 0.0;
    t10_4 = t10_2.x * t10_4;
    t16_2.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTextureB0, t16_2.xx).w;
    t10_4 = t10_2.x * t10_4;
    t16_1.xyz = vec3(t10_4) * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    t16_0.xyz = t16_7.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_8;
lowp float t10_10;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_4.x = dot(t16_1.xyz, t16_1.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_4.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_4.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_4.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_4.x = t16_13 * t16_13;
    t16_8 = t16_13 * t16_13 + 1.0;
    t16_0.x = t16_0.x * t16_4.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_8;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t2.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTextureB0, t2.xx).w;
    t10_10 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_2.x = t10_10 * t10_2.x;
    t16_1.xyz = t16_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    t16_0.xyz = t16_6.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec2 vs_TEXCOORD5;
out highp float vs_TEXCOORD7;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t16_1.x = _LightMatrix0[0].x;
    t16_1.y = _LightMatrix0[1].x;
    t16_1.z = _LightMatrix0[2].x;
    t16_1.w = _LightMatrix0[3].x;
    vs_TEXCOORD5.x = dot(t16_1, t0);
    t16_1.x = _LightMatrix0[0].y;
    t16_1.y = _LightMatrix0[1].y;
    t16_1.z = _LightMatrix0[2].y;
    t16_1.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_1, t0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec2 vs_TEXCOORD5;
in highp float vs_TEXCOORD7;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_0.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_1.xyz;
    t16_12 = dot(t16_0.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.00100000005);
    t16_12 = inversesqrt(t16_2.x);
    t16_0.xyz = vec3(t16_12) * t16_0.xyz;
    t16_12 = dot(t16_1.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.0);
    t16_12 = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_12 = t16_12 * _Glossiness + t16_3.x;
    t16_12 = t16_12 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_12 * t16_2.x + 9.99999975e-005;
    t16_12 = t16_13 * t16_13 + 1.0;
    t16_13 = t16_13 * t16_13;
    t16_3.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_3.x = inversesqrt(t16_3.x);
    t16_3.xyz = t16_3.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_0.xyz);
    t16_0.y = dot(t16_3.xyz, t16_1.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_0.x = t16_0.x * t16_13;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_12;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t10_2.x = texture(_LightTexture0, vs_TEXCOORD5.xy).w;
    t16_1.xyz = t10_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    t16_0.xyz = t16_6.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
highp vec3 t1;
mediump vec4 t16_1;
lowp vec4 t10_1;
lowp float t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump float t16_7;
bool tb7;
mediump float t16_9;
mediump float t16_13;
mediump float t16_18;
mediump float t16_21;
mediump float t16_22;
void main()
{
    t16_0.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_0.xy = t16_0.xy + vec2(0.5, 0.5);
    t10_1.x = texture(_LightTexture0, t16_0.xy).w;
    tb7 = 0.0<vs_TEXCOORD5.z;
    t10_2 = (tb7) ? 1.0 : 0.0;
    t10_2 = t10_1.x * t10_2;
    t16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_1.x = texture(_LightTextureB0, t16_0.xx).w;
    t10_2 = t10_1.x * t10_2;
    t16_1.xyz = vs_TEXCOORD6.xyz / vs_TEXCOORD6.www;
    vec3 txVec61 = vec3(t16_1.xy,t16_1.z);
    t10_1.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec61, 0.0);
    t16_0.x = (-_LightShadowData.x) + 1.0;
    t16_0.x = t10_1.x * t16_0.x + _LightShadowData.x;
    t10_2 = t16_0.x * t10_2;
    t16_0.xyz = vec3(t10_2) * _LightColor0.xyz;
    t16_18 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_18 = inversesqrt(t16_18);
    t16_3.x = vs_TEXCOORD2.w;
    t16_3.y = vs_TEXCOORD3.w;
    t16_3.z = vs_TEXCOORD4.w;
    t16_21 = dot(t16_3.xyz, t16_3.xyz);
    t16_21 = inversesqrt(t16_21);
    t16_3.xyz = vec3(t16_21) * t16_3.xyz;
    t16_4.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_18) + t16_3.xyz;
    t16_18 = dot(t16_4.xyz, t16_4.xyz);
    t16_1.x = max(t16_18, 0.00100000005);
    t16_18 = inversesqrt(t16_1.x);
    t16_4.xyz = vec3(t16_18) * t16_4.xyz;
    t16_18 = dot(t16_3.xyz, t16_4.xyz);
    t16_1.x = max(t16_18, 0.0);
    t16_18 = t16_1.x * t16_1.x;
    t16_21 = (-_Glossiness) + 1.0;
    t16_22 = t16_21 * t16_21;
    t16_21 = (-t16_21) + 1.0;
    t16_21 = t16_21 * 0.967999995 + 0.0299999993;
    t16_21 = log2(t16_21);
    t16_21 = 10.0 / t16_21;
    t16_21 = max(t16_21, -255.936996);
    t16_18 = t16_18 * _Glossiness + t16_22;
    t16_18 = t16_18 * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_18 * t16_1.x + 9.99999975e-005;
    t16_18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_18 = inversesqrt(t16_18);
    t16_5.xyz = vec3(t16_18) * vs_TEXCOORD4.xyz;
    t16_18 = dot(t16_5.xyz, t16_4.xyz);
    t16_3.x = dot(t16_5.xyz, t16_3.xyz);
    t16_7 = max(t16_3.x, 0.0);
    t16_13 = max(t16_18, 0.0);
    t16_18 = log2(t16_13);
    t16_3.x = t16_21 * t16_21;
    t16_9 = t16_21 * t16_21 + 1.0;
    t16_18 = t16_18 * t16_3.x;
    t16_18 = exp2(t16_18);
    t16_18 = t16_18 * t16_9;
    t16_1.x = t16_18 / t16_1.x;
    t16_18 = max(t16_1.x, 0.0);
    t16_18 = min(t16_18, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_3.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_3.xyz = vec3(_Metallic) * t16_3.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_3.xyz = vec3(t16_18) * t16_3.xyz;
    t16_18 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_3.xyz = t16_1.xzw * vec3(t16_18) + t16_3.xyz;
    t16_0.xyz = t16_0.xyz * t16_3.xyz;
    t16_0.xyz = vec3(t16_7) * t16_0.xyz;
    t1.x = vs_TEXCOORD7;
    t1.x = clamp(t1.x, 0.0, 1.0);
    t1.xyz = t16_0.xyz * t1.xxx;
    SV_Target0.xyz = t1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
highp vec4 t1;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
bool tb2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_8;
highp float t10;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_4.x = dot(t16_1.xyz, t16_1.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_4.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_4.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_4.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_4.x = t16_13 * t16_13;
    t16_8 = t16_13 * t16_13 + 1.0;
    t16_0.x = t16_0.x * t16_4.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_8;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t2.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t2.x = sqrt(t2.x);
    t2.x = t2.x * _LightPositionRange.w;
    t2.x = t2.x * 0.970000029;
    t1 = texture(_ShadowMapTexture, vs_TEXCOORD6.xyz);
    t10 = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb2 = t10<t2.x;
    t16_12 = (tb2) ? _LightShadowData.x : 1.0;
    t2.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTexture0, t2.xx).w;
    t16_2.x = t16_12 * t10_2.x;
    t16_3.xyz = t16_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_3.xyz;
    t16_0.xyz = t16_6.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
highp vec4 t1;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
bool tb2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_8;
highp float t10;
lowp float t10_10;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_4.x = dot(t16_1.xyz, t16_1.xyz);
    t16_4.x = inversesqrt(t16_4.x);
    t16_4.xyz = t16_4.xxx * t16_1.xyz;
    t16_1.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_4.xyz;
    t16_0.x = dot(t16_1.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.00100000005);
    t16_0.x = inversesqrt(t16_2.x);
    t16_1.xyz = t16_0.xxx * t16_1.xyz;
    t16_0.x = dot(t16_4.xyz, t16_1.xyz);
    t16_2.x = max(t16_0.x, 0.0);
    t16_0.x = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_0.x = t16_0.x * _Glossiness + t16_3.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_0.x * t16_2.x + 9.99999975e-005;
    t16_0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_3.xyz = t16_0.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_1.xyz);
    t16_0.y = dot(t16_3.xyz, t16_4.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_4.x = t16_13 * t16_13;
    t16_8 = t16_13 * t16_13 + 1.0;
    t16_0.x = t16_0.x * t16_4.x;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_8;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    t2.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t2.x = sqrt(t2.x);
    t2.x = t2.x * _LightPositionRange.w;
    t2.x = t2.x * 0.970000029;
    t1 = texture(_ShadowMapTexture, vs_TEXCOORD6.xyz);
    t10 = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb2 = t10<t2.x;
    t16_12 = (tb2) ? _LightShadowData.x : 1.0;
    t2.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_2.x = texture(_LightTextureB0, t2.xx).w;
    t10_10 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_2.x = t10_10 * t10_2.x;
    t16_2.x = t16_12 * t16_2.x;
    t16_3.xyz = t16_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_3.xyz;
    t16_0.xyz = t16_6.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	vec4 _ShadowOffsets[4];
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	vec4 _ShadowOffsets[4];
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 t16_0;
highp vec3 t1;
mediump vec4 t16_1;
lowp vec4 t10_1;
highp vec4 t2;
highp vec3 t3;
lowp float t10_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
mediump float t16_9;
lowp float t10_9;
mediump float t16_13;
mediump float t16_17;
bool tb17;
mediump float t16_24;
mediump float t16_29;
mediump float t16_30;
void main()
{
    t16_0.x = (-_LightShadowData.x) + 1.0;
    t16_1.xyz = vs_TEXCOORD6.xyz / vs_TEXCOORD6.www;
    t2.xyz = t16_1.xyz + _ShadowOffsets[0].xyz;
    vec3 txVec48 = vec3(t2.xy,t2.z);
    t2.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec48, 0.0);
    t3.xyz = t16_1.xyz + _ShadowOffsets[1].xyz;
    vec3 txVec49 = vec3(t3.xy,t3.z);
    t2.y = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec49, 0.0);
    t3.xyz = t16_1.xyz + _ShadowOffsets[2].xyz;
    t1.xyz = t16_1.xyz + _ShadowOffsets[3].xyz;
    vec3 txVec50 = vec3(t1.xy,t1.z);
    t2.w = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec50, 0.0);
    vec3 txVec51 = vec3(t3.xy,t3.z);
    t2.z = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec51, 0.0);
    t16_0 = t2 * t16_0.xxxx + _LightShadowData.xxxx;
    t16_1.x = dot(t16_0, vec4(0.25, 0.25, 0.25, 0.25));
    t16_0.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_0.xy = t16_0.xy + vec2(0.5, 0.5);
    t10_9 = texture(_LightTexture0, t16_0.xy).w;
    tb17 = 0.0<vs_TEXCOORD5.z;
    t10_4 = (tb17) ? 1.0 : 0.0;
    t10_4 = t10_9 * t10_4;
    t16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_9 = texture(_LightTextureB0, t16_0.xx).w;
    t10_4 = t10_9 * t10_4;
    t10_4 = t16_1.x * t10_4;
    t16_0.xyz = vec3(t10_4) * _LightColor0.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_5.x = vs_TEXCOORD2.w;
    t16_5.y = vs_TEXCOORD3.w;
    t16_5.z = vs_TEXCOORD4.w;
    t16_29 = dot(t16_5.xyz, t16_5.xyz);
    t16_29 = inversesqrt(t16_29);
    t16_5.xyz = vec3(t16_29) * t16_5.xyz;
    t16_6.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_5.xyz;
    t16_24 = dot(t16_6.xyz, t16_6.xyz);
    t16_1.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_1.x);
    t16_6.xyz = vec3(t16_24) * t16_6.xyz;
    t16_24 = dot(t16_5.xyz, t16_6.xyz);
    t16_1.x = max(t16_24, 0.0);
    t16_24 = t16_1.x * t16_1.x;
    t16_29 = (-_Glossiness) + 1.0;
    t16_30 = t16_29 * t16_29;
    t16_29 = (-t16_29) + 1.0;
    t16_29 = t16_29 * 0.967999995 + 0.0299999993;
    t16_29 = log2(t16_29);
    t16_29 = 10.0 / t16_29;
    t16_29 = max(t16_29, -255.936996);
    t16_24 = t16_24 * _Glossiness + t16_30;
    t16_24 = t16_24 * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_24 * t16_1.x + 9.99999975e-005;
    t16_24 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_7.xyz = vec3(t16_24) * vs_TEXCOORD4.xyz;
    t16_24 = dot(t16_7.xyz, t16_6.xyz);
    t16_5.x = dot(t16_7.xyz, t16_5.xyz);
    t16_9 = max(t16_5.x, 0.0);
    t16_17 = max(t16_24, 0.0);
    t16_24 = log2(t16_17);
    t16_5.x = t16_29 * t16_29;
    t16_13 = t16_29 * t16_29 + 1.0;
    t16_24 = t16_24 * t16_5.x;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_13;
    t16_1.x = t16_24 / t16_1.x;
    t16_24 = max(t16_1.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_5.xyz = vec3(t16_24) * t16_5.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = t16_1.xzw * vec3(t16_24) + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_5.xyz;
    t16_0.xyz = vec3(t16_9) * t16_0.xyz;
    t1.x = vs_TEXCOORD7;
    t1.x = clamp(t1.x, 0.0, 1.0);
    t1.xyz = t16_0.xyz * t1.xxx;
    SV_Target0.xyz = t1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec4 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
bvec4 tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp vec3 t7;
mediump float t16_7;
mediump float t16_11;
mediump float t16_14;
mediump float t16_24;
mediump float t16_25;
mediump float t16_26;
void main()
{
    t0.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t0.x = sqrt(t0.x);
    t0.x = t0.x * _LightPositionRange.w;
    t0.x = t0.x * 0.970000029;
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, 0.0078125, 0.0078125);
    t1 = texture(_ShadowMapTexture, t7.xyz);
    t1.x = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, -0.0078125, 0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.y = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, 0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.z = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, -0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.w = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb0 = lessThan(t1, t0.xxxx);
    t0.x = (tb0.x) ? _LightShadowData.x : float(1.0);
    t0.y = (tb0.y) ? _LightShadowData.x : float(1.0);
    t0.z = (tb0.z) ? _LightShadowData.x : float(1.0);
    t0.w = (tb0.w) ? _LightShadowData.x : float(1.0);
    t16_3.x = dot(t0, vec4(0.25, 0.25, 0.25, 0.25));
    t0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTexture0, t0.xx).w;
    t16_0.x = t16_3.x * t10_0.x;
    t16_3.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_4.x = vs_TEXCOORD2.w;
    t16_4.y = vs_TEXCOORD3.w;
    t16_4.z = vs_TEXCOORD4.w;
    t16_25 = dot(t16_4.xyz, t16_4.xyz);
    t16_25 = inversesqrt(t16_25);
    t16_4.xyz = vec3(t16_25) * t16_4.xyz;
    t16_5.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_4.xyz;
    t16_24 = dot(t16_5.xyz, t16_5.xyz);
    t16_0.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_0.x);
    t16_5.xyz = vec3(t16_24) * t16_5.xyz;
    t16_24 = dot(t16_4.xyz, t16_5.xyz);
    t16_0.x = max(t16_24, 0.0);
    t16_24 = t16_0.x * t16_0.x;
    t16_25 = (-_Glossiness) + 1.0;
    t16_26 = t16_25 * t16_25;
    t16_25 = (-t16_25) + 1.0;
    t16_25 = t16_25 * 0.967999995 + 0.0299999993;
    t16_25 = log2(t16_25);
    t16_25 = 10.0 / t16_25;
    t16_25 = max(t16_25, -255.936996);
    t16_24 = t16_24 * _Glossiness + t16_26;
    t16_24 = t16_24 * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_24 * t16_0.x + 9.99999975e-005;
    t16_24 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_6.xyz = vec3(t16_24) * vs_TEXCOORD4.xyz;
    t16_24 = dot(t16_6.xyz, t16_5.xyz);
    t16_4.x = dot(t16_6.xyz, t16_4.xyz);
    t16_7 = max(t16_4.x, 0.0);
    t16_14 = max(t16_24, 0.0);
    t16_24 = log2(t16_14);
    t16_4.x = t16_25 * t16_25;
    t16_11 = t16_25 * t16_25 + 1.0;
    t16_24 = t16_24 * t16_4.x;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_11;
    t16_0.x = t16_24 / t16_0.x;
    t16_24 = max(t16_0.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_4.xyz = vec3(t16_24) * t16_4.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_0.xzw * vec3(t16_24) + t16_4.xyz;
    t16_3.xyz = t16_3.xyz * t16_4.xyz;
    t16_3.xyz = vec3(t16_7) * t16_3.xyz;
    t0.x = vs_TEXCOORD7;
    t0.x = clamp(t0.x, 0.0, 1.0);
    t0.xyz = t16_3.xyz * t0.xxx;
    SV_Target0.xyz = t0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec4 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
bvec4 tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp vec3 t7;
mediump float t16_7;
lowp float t10_7;
mediump float t16_11;
mediump float t16_14;
mediump float t16_24;
mediump float t16_25;
mediump float t16_26;
void main()
{
    t0.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t0.x = sqrt(t0.x);
    t0.x = t0.x * _LightPositionRange.w;
    t0.x = t0.x * 0.970000029;
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, 0.0078125, 0.0078125);
    t1 = texture(_ShadowMapTexture, t7.xyz);
    t1.x = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, -0.0078125, 0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.y = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, 0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.z = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, -0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.w = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb0 = lessThan(t1, t0.xxxx);
    t0.x = (tb0.x) ? _LightShadowData.x : float(1.0);
    t0.y = (tb0.y) ? _LightShadowData.x : float(1.0);
    t0.z = (tb0.z) ? _LightShadowData.x : float(1.0);
    t0.w = (tb0.w) ? _LightShadowData.x : float(1.0);
    t16_3.x = dot(t0, vec4(0.25, 0.25, 0.25, 0.25));
    t0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, t0.xx).w;
    t10_7 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_0.x = t10_7 * t10_0.x;
    t16_0.x = t16_3.x * t16_0.x;
    t16_3.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_4.x = vs_TEXCOORD2.w;
    t16_4.y = vs_TEXCOORD3.w;
    t16_4.z = vs_TEXCOORD4.w;
    t16_25 = dot(t16_4.xyz, t16_4.xyz);
    t16_25 = inversesqrt(t16_25);
    t16_4.xyz = vec3(t16_25) * t16_4.xyz;
    t16_5.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_4.xyz;
    t16_24 = dot(t16_5.xyz, t16_5.xyz);
    t16_0.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_0.x);
    t16_5.xyz = vec3(t16_24) * t16_5.xyz;
    t16_24 = dot(t16_4.xyz, t16_5.xyz);
    t16_0.x = max(t16_24, 0.0);
    t16_24 = t16_0.x * t16_0.x;
    t16_25 = (-_Glossiness) + 1.0;
    t16_26 = t16_25 * t16_25;
    t16_25 = (-t16_25) + 1.0;
    t16_25 = t16_25 * 0.967999995 + 0.0299999993;
    t16_25 = log2(t16_25);
    t16_25 = 10.0 / t16_25;
    t16_25 = max(t16_25, -255.936996);
    t16_24 = t16_24 * _Glossiness + t16_26;
    t16_24 = t16_24 * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_24 * t16_0.x + 9.99999975e-005;
    t16_24 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_6.xyz = vec3(t16_24) * vs_TEXCOORD4.xyz;
    t16_24 = dot(t16_6.xyz, t16_5.xyz);
    t16_4.x = dot(t16_6.xyz, t16_4.xyz);
    t16_7 = max(t16_4.x, 0.0);
    t16_14 = max(t16_24, 0.0);
    t16_24 = log2(t16_14);
    t16_4.x = t16_25 * t16_25;
    t16_11 = t16_25 * t16_25 + 1.0;
    t16_24 = t16_24 * t16_4.x;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_11;
    t16_0.x = t16_24 / t16_0.x;
    t16_24 = max(t16_0.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_4.xyz = vec3(t16_24) * t16_4.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_0.xzw * vec3(t16_24) + t16_4.xyz;
    t16_3.xyz = t16_3.xyz * t16_4.xyz;
    t16_3.xyz = vec3(t16_7) * t16_3.xyz;
    t0.x = vs_TEXCOORD7;
    t0.x = clamp(t0.x, 0.0, 1.0);
    t0.xyz = t16_3.xyz * t0.xxx;
    SV_Target0.xyz = t0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD5 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_0.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_1.xyz;
    t16_12 = dot(t16_0.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.00100000005);
    t16_12 = inversesqrt(t16_2.x);
    t16_0.xyz = vec3(t16_12) * t16_0.xyz;
    t16_12 = dot(t16_1.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.0);
    t16_12 = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_12 = t16_12 * _Glossiness + t16_3.x;
    t16_12 = t16_12 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_12 * t16_2.x + 9.99999975e-005;
    t16_12 = t16_13 * t16_13 + 1.0;
    t16_13 = t16_13 * t16_13;
    t16_3.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_3.x = inversesqrt(t16_3.x);
    t16_3.xyz = t16_3.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_0.xyz);
    t16_0.y = dot(t16_3.xyz, t16_1.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_0.x = t16_0.x * t16_13;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_12;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    vec3 txVec44 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
    t16_12 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec44, 0.0);
    t16_1.x = (-_LightShadowData.x) + 1.0;
    t16_12 = t16_12 * t16_1.x + _LightShadowData.x;
    t16_1.xyz = vec3(t16_12) * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    t16_0.xyz = t16_6.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "FOG_EXP2" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec2 vs_TEXCOORD5;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t2.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    t2.y = dot(t16_0, t1);
    vs_TEXCOORD5.xy = t2.xy;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec2 vs_TEXCOORD5;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec3 t16_1;
highp vec3 t2;
mediump vec4 t16_2;
lowp vec4 t10_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec2 t16_6;
mediump float t16_12;
mediump float t16_13;
void main()
{
    t16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_0.x = inversesqrt(t16_0.x);
    t16_1.x = vs_TEXCOORD2.w;
    t16_1.y = vs_TEXCOORD3.w;
    t16_1.z = vs_TEXCOORD4.w;
    t16_0.xyz = (-vs_TEXCOORD1.xyz) * t16_0.xxx + t16_1.xyz;
    t16_12 = dot(t16_0.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.00100000005);
    t16_12 = inversesqrt(t16_2.x);
    t16_0.xyz = vec3(t16_12) * t16_0.xyz;
    t16_12 = dot(t16_1.xyz, t16_0.xyz);
    t16_2.x = max(t16_12, 0.0);
    t16_12 = t16_2.x * t16_2.x;
    t16_13 = (-_Glossiness) + 1.0;
    t16_3.x = t16_13 * t16_13;
    t16_13 = (-t16_13) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_13 = max(t16_13, -255.936996);
    t16_12 = t16_12 * _Glossiness + t16_3.x;
    t16_12 = t16_12 * unity_LightGammaCorrectionConsts.z;
    t16_2.x = t16_12 * t16_2.x + 9.99999975e-005;
    t16_12 = t16_13 * t16_13 + 1.0;
    t16_13 = t16_13 * t16_13;
    t16_3.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
    t16_3.x = inversesqrt(t16_3.x);
    t16_3.xyz = t16_3.xxx * vs_TEXCOORD4.xyz;
    t16_0.x = dot(t16_3.xyz, t16_0.xyz);
    t16_0.y = dot(t16_3.xyz, t16_1.xyz);
    t16_6.xy = max(t16_0.yx, vec2(0.0, 0.0));
    t16_0.x = log2(t16_6.y);
    t16_0.x = t16_0.x * t16_13;
    t16_0.x = exp2(t16_0.x);
    t16_0.x = t16_0.x * t16_12;
    t16_2.x = t16_0.x / t16_2.x;
    t16_0.x = max(t16_2.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_2.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_2.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_2.xzw = t10_2.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_4.xyz * t16_0.xxx;
    t16_12 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_2.xzw * vec3(t16_12) + t16_0.xyz;
    vec3 txVec52 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_12 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec52, 0.0);
    t16_1.x = (-_LightShadowData.x) + 1.0;
    t16_12 = t16_12 * t16_1.x + _LightShadowData.x;
    t10_2.x = texture(_LightTexture0, vs_TEXCOORD5.xy).w;
    t16_2.x = t16_12 * t10_2.x;
    t16_1.xyz = t16_2.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_1.xyz;
    t16_0.xyz = t16_6.xxx * t16_0.xyz;
    t2.x = vs_TEXCOORD7;
    t2.x = clamp(t2.x, 0.0, 1.0);
    t2.xyz = t16_0.xyz * t2.xxx;
    SV_Target0.xyz = t2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
highp float t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
mediump vec4 t16_1;
mediump vec3 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_5;
mediump float t16_9;
mediump float t16_13;
mediump float t16_14;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_13 = dot(t16_1.xyz, t16_1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_1.xyz = vec3(t16_13) * t16_1.xyz;
    t16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_14 = dot(t16_2.xyz, t16_2.xyz);
    t16_14 = inversesqrt(t16_14);
    t16_2.xyz = vec3(t16_14) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_13) + t16_2.xyz;
    t16_13 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_13, 0.00100000005);
    t16_13 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_13) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_5.x = (-_Glossiness) + 1.0;
    t16_9 = (-t16_5.x) + 1.0;
    t16_9 = t16_9 * 0.967999995 + 0.0299999993;
    t16_9 = log2(t16_9);
    t16_9 = 10.0 / t16_9;
    t16_5.y = max(t16_9, -255.936996);
    t16_5.xz = t16_5.xy * t16_5.xy;
    t16_9 = t16_5.y * t16_5.y + 1.0;
    t16_1.x = t16_1.x * t16_5.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_9;
    t16_9 = t16_0.x * t16_0.x;
    t16_5.x = t16_9 * _Glossiness + t16_5.x;
    t16_5.x = t16_5.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_5.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_5.xyz * t16_1.xxx;
    t16_13 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_13) + t16_1.xyz;
    t0 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTexture0, vec2(t0)).w;
    t16_2.xyz = t10_0.xxx * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_2.xyz;
    SV_Target0.xyz = t16_0.yyy * t16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec4 t16_1;
lowp vec4 t10_1;
mediump vec4 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump float t16_10;
mediump float t16_11;
mediump float t16_15;
void main()
{
    t16_0.x = (-_Glossiness) + 1.0;
    t16_5.x = (-t16_0.x) + 1.0;
    t16_5.x = t16_5.x * 0.967999995 + 0.0299999993;
    t16_5.x = log2(t16_5.x);
    t16_5.x = 10.0 / t16_5.x;
    t16_0.y = max(t16_5.x, -255.936996);
    t16_0.xz = t16_0.xy * t16_0.xy;
    t16_5.x = t16_0.y * t16_0.y + 1.0;
    t10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_2.xyz = t10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_3.xyz = t16_2.yyy * vs_TEXCOORD3.xyz;
    t16_2.xyw = vs_TEXCOORD2.xyz * t16_2.xxx + t16_3.xyz;
    t16_2.xyz = vs_TEXCOORD4.xyz * t16_2.zzz + t16_2.xyw;
    t16_15 = dot(t16_2.xyz, t16_2.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_2.xyz = vec3(t16_15) * t16_2.xyz;
    t16_15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_3.x = vs_TEXCOORD2.w;
    t16_3.y = vs_TEXCOORD3.w;
    t16_3.z = vs_TEXCOORD4.w;
    t16_4.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_15) + t16_3.xyz;
    t16_15 = dot(t16_4.xyz, t16_4.xyz);
    t16_1.x = max(t16_15, 0.00100000005);
    t16_15 = inversesqrt(t16_1.x);
    t16_4.xyz = vec3(t16_15) * t16_4.xyz;
    t16_15 = dot(t16_2.xyz, t16_4.xyz);
    t16_2.x = dot(t16_2.xyz, t16_3.xyz);
    t16_2.y = dot(t16_3.xyz, t16_4.xyz);
    t16_1.xy = max(t16_2.yx, vec2(0.0, 0.0));
    t16_11 = max(t16_15, 0.0);
    t16_15 = log2(t16_11);
    t16_10 = t16_15 * t16_0.z;
    t16_10 = exp2(t16_10);
    t16_5.x = t16_10 * t16_5.x;
    t16_10 = t16_1.x * t16_1.x;
    t16_0.x = t16_10 * _Glossiness + t16_0.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_0.x * t16_1.x + 9.99999975e-005;
    t16_1.x = t16_5.x / t16_1.x;
    t16_0.x = max(t16_1.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_5.xyz * t16_0.xxx;
    t16_15 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_1.xzw * vec3(t16_15) + t16_0.xyz;
    t16_0.xyz = t16_0.xyz * _LightColor0.xyz;
    SV_Target0.xyz = t16_1.yyy * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 t16_0;
lowp vec4 t10_0;
mediump vec4 t16_1;
mediump vec3 t16_2;
mediump vec3 t16_3;
lowp float t10_4;
mediump vec3 t16_6;
bool tb10;
mediump float t16_11;
mediump float t16_16;
mediump float t16_17;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_16 = dot(t16_1.xyz, t16_1.xyz);
    t16_16 = inversesqrt(t16_16);
    t16_1.xyz = vec3(t16_16) * t16_1.xyz;
    t16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_16 = inversesqrt(t16_16);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_17 = dot(t16_2.xyz, t16_2.xyz);
    t16_17 = inversesqrt(t16_17);
    t16_2.xyz = vec3(t16_17) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_16) + t16_2.xyz;
    t16_16 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_16, 0.00100000005);
    t16_16 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_16) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_6.x = (-_Glossiness) + 1.0;
    t16_11 = (-t16_6.x) + 1.0;
    t16_11 = t16_11 * 0.967999995 + 0.0299999993;
    t16_11 = log2(t16_11);
    t16_11 = 10.0 / t16_11;
    t16_6.y = max(t16_11, -255.936996);
    t16_6.xz = t16_6.xy * t16_6.xy;
    t16_11 = t16_6.y * t16_6.y + 1.0;
    t16_1.x = t16_1.x * t16_6.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_11;
    t16_11 = t16_0.x * t16_0.x;
    t16_6.x = t16_11 * _Glossiness + t16_6.x;
    t16_6.x = t16_6.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_6.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_6.xyz = vec3(_Metallic) * t16_6.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_6.xyz * t16_1.xxx;
    t16_16 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_16) + t16_1.xyz;
    t16_2.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_2.xy = t16_2.xy + vec2(0.5, 0.5);
    t10_0.x = texture(_LightTexture0, t16_2.xy).w;
    tb10 = 0.0<vs_TEXCOORD5.z;
    t10_4 = (tb10) ? 1.0 : 0.0;
    t10_4 = t10_0.x * t10_4;
    t16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, t16_0.xx).w;
    t10_4 = t10_0.x * t10_4;
    t16_2.xyz = vec3(t10_4) * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_2.xyz;
    SV_Target0.xyz = t16_0.yyy * t16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
highp float t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
mediump vec4 t16_1;
mediump vec3 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_5;
lowp float t10_8;
mediump float t16_9;
mediump float t16_13;
mediump float t16_14;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_13 = dot(t16_1.xyz, t16_1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_1.xyz = vec3(t16_13) * t16_1.xyz;
    t16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_14 = dot(t16_2.xyz, t16_2.xyz);
    t16_14 = inversesqrt(t16_14);
    t16_2.xyz = vec3(t16_14) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_13) + t16_2.xyz;
    t16_13 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_13, 0.00100000005);
    t16_13 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_13) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_5.x = (-_Glossiness) + 1.0;
    t16_9 = (-t16_5.x) + 1.0;
    t16_9 = t16_9 * 0.967999995 + 0.0299999993;
    t16_9 = log2(t16_9);
    t16_9 = 10.0 / t16_9;
    t16_5.y = max(t16_9, -255.936996);
    t16_5.xz = t16_5.xy * t16_5.xy;
    t16_9 = t16_5.y * t16_5.y + 1.0;
    t16_1.x = t16_1.x * t16_5.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_9;
    t16_9 = t16_0.x * t16_0.x;
    t16_5.x = t16_9 * _Glossiness + t16_5.x;
    t16_5.x = t16_5.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_5.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_5.xyz * t16_1.xxx;
    t16_13 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_13) + t16_1.xyz;
    t0 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, vec2(t0)).w;
    t10_8 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_0.x = t10_8 * t10_0.x;
    t16_2.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_2.xyz;
    SV_Target0.xyz = t16_0.yyy * t16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec2 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t16_1.x = _LightMatrix0[0].x;
    t16_1.y = _LightMatrix0[1].x;
    t16_1.z = _LightMatrix0[2].x;
    t16_1.w = _LightMatrix0[3].x;
    vs_TEXCOORD5.x = dot(t16_1, t0);
    t16_1.x = _LightMatrix0[0].y;
    t16_1.y = _LightMatrix0[1].y;
    t16_1.z = _LightMatrix0[2].y;
    t16_1.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_1, t0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec2 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec4 t16_1;
lowp vec4 t10_1;
mediump vec4 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump float t16_10;
mediump float t16_11;
mediump float t16_15;
void main()
{
    t16_0.x = (-_Glossiness) + 1.0;
    t16_5.x = (-t16_0.x) + 1.0;
    t16_5.x = t16_5.x * 0.967999995 + 0.0299999993;
    t16_5.x = log2(t16_5.x);
    t16_5.x = 10.0 / t16_5.x;
    t16_0.y = max(t16_5.x, -255.936996);
    t16_0.xz = t16_0.xy * t16_0.xy;
    t16_5.x = t16_0.y * t16_0.y + 1.0;
    t10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_2.xyz = t10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_3.xyz = t16_2.yyy * vs_TEXCOORD3.xyz;
    t16_2.xyw = vs_TEXCOORD2.xyz * t16_2.xxx + t16_3.xyz;
    t16_2.xyz = vs_TEXCOORD4.xyz * t16_2.zzz + t16_2.xyw;
    t16_15 = dot(t16_2.xyz, t16_2.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_2.xyz = vec3(t16_15) * t16_2.xyz;
    t16_15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_3.x = vs_TEXCOORD2.w;
    t16_3.y = vs_TEXCOORD3.w;
    t16_3.z = vs_TEXCOORD4.w;
    t16_4.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_15) + t16_3.xyz;
    t16_15 = dot(t16_4.xyz, t16_4.xyz);
    t16_1.x = max(t16_15, 0.00100000005);
    t16_15 = inversesqrt(t16_1.x);
    t16_4.xyz = vec3(t16_15) * t16_4.xyz;
    t16_15 = dot(t16_2.xyz, t16_4.xyz);
    t16_2.x = dot(t16_2.xyz, t16_3.xyz);
    t16_2.y = dot(t16_3.xyz, t16_4.xyz);
    t16_1.xy = max(t16_2.yx, vec2(0.0, 0.0));
    t16_11 = max(t16_15, 0.0);
    t16_15 = log2(t16_11);
    t16_10 = t16_15 * t16_0.z;
    t16_10 = exp2(t16_10);
    t16_5.x = t16_10 * t16_5.x;
    t16_10 = t16_1.x * t16_1.x;
    t16_0.x = t16_10 * _Glossiness + t16_0.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_0.x * t16_1.x + 9.99999975e-005;
    t16_1.x = t16_5.x / t16_1.x;
    t16_0.x = max(t16_1.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_5.xyz * t16_0.xxx;
    t16_15 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_1.xzw * vec3(t16_15) + t16_0.xyz;
    t10_1.x = texture(_LightTexture0, vs_TEXCOORD5.xy).w;
    t16_2.xyz = t10_1.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_2.xyz;
    SV_Target0.xyz = t16_1.yyy * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 t16_0;
lowp vec4 t10_0;
mediump vec4 t16_1;
mediump vec3 t16_2;
mediump vec3 t16_3;
lowp float t10_4;
mediump vec3 t16_6;
bool tb10;
mediump float t16_11;
mediump float t16_16;
mediump float t16_17;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_16 = dot(t16_1.xyz, t16_1.xyz);
    t16_16 = inversesqrt(t16_16);
    t16_1.xyz = vec3(t16_16) * t16_1.xyz;
    t16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_16 = inversesqrt(t16_16);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_17 = dot(t16_2.xyz, t16_2.xyz);
    t16_17 = inversesqrt(t16_17);
    t16_2.xyz = vec3(t16_17) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_16) + t16_2.xyz;
    t16_16 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_16, 0.00100000005);
    t16_16 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_16) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_6.x = (-_Glossiness) + 1.0;
    t16_11 = (-t16_6.x) + 1.0;
    t16_11 = t16_11 * 0.967999995 + 0.0299999993;
    t16_11 = log2(t16_11);
    t16_11 = 10.0 / t16_11;
    t16_6.y = max(t16_11, -255.936996);
    t16_6.xz = t16_6.xy * t16_6.xy;
    t16_11 = t16_6.y * t16_6.y + 1.0;
    t16_1.x = t16_1.x * t16_6.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_11;
    t16_11 = t16_0.x * t16_0.x;
    t16_6.x = t16_11 * _Glossiness + t16_6.x;
    t16_6.x = t16_6.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_6.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_6.xyz = vec3(_Metallic) * t16_6.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_6.xyz * t16_1.xxx;
    t16_16 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_16) + t16_1.xyz;
    t16_2.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_2.xy = t16_2.xy + vec2(0.5, 0.5);
    t10_0.x = texture(_LightTexture0, t16_2.xy).w;
    tb10 = 0.0<vs_TEXCOORD5.z;
    t10_4 = (tb10) ? 1.0 : 0.0;
    t10_4 = t10_0.x * t10_4;
    t16_16 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, vec2(t16_16)).w;
    t10_4 = t10_0.x * t10_4;
    t16_0.xzw = vs_TEXCOORD6.xyz / vs_TEXCOORD6.www;
    vec3 txVec41 = vec3(t16_0.xz,t16_0.w);
    t10_0.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec41, 0.0);
    t16_16 = (-_LightShadowData.x) + 1.0;
    t16_16 = t10_0.x * t16_16 + _LightShadowData.x;
    t10_4 = t16_16 * t10_4;
    t16_2.xyz = vec3(t10_4) * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_2.xyz;
    SV_Target0.xyz = t16_0.yyy * t16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
highp float t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
bool tb0;
mediump vec4 t16_1;
highp vec4 t2;
mediump vec3 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_5;
highp float t8;
mediump float t16_9;
mediump float t16_13;
mediump float t16_14;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_13 = dot(t16_1.xyz, t16_1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_1.xyz = vec3(t16_13) * t16_1.xyz;
    t16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_14 = dot(t16_2.xyz, t16_2.xyz);
    t16_14 = inversesqrt(t16_14);
    t16_2.xyz = vec3(t16_14) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_13) + t16_2.xyz;
    t16_13 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_13, 0.00100000005);
    t16_13 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_13) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_5.x = (-_Glossiness) + 1.0;
    t16_9 = (-t16_5.x) + 1.0;
    t16_9 = t16_9 * 0.967999995 + 0.0299999993;
    t16_9 = log2(t16_9);
    t16_9 = 10.0 / t16_9;
    t16_5.y = max(t16_9, -255.936996);
    t16_5.xz = t16_5.xy * t16_5.xy;
    t16_9 = t16_5.y * t16_5.y + 1.0;
    t16_1.x = t16_1.x * t16_5.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_9;
    t16_9 = t16_0.x * t16_0.x;
    t16_5.x = t16_9 * _Glossiness + t16_5.x;
    t16_5.x = t16_5.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_5.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_5.xyz * t16_1.xxx;
    t16_13 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_13) + t16_1.xyz;
    t0 = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t0 = sqrt(t0);
    t0 = t0 * _LightPositionRange.w;
    t0 = t0 * 0.970000029;
    t2 = texture(_ShadowMapTexture, vs_TEXCOORD6.xyz);
    t8 = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb0 = t8<t0;
    t16_13 = (tb0) ? _LightShadowData.x : 1.0;
    t0 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTexture0, vec2(t0)).w;
    t16_0.x = t16_13 * t10_0.x;
    t16_3.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_3.xyz;
    SV_Target0.xyz = t16_0.yyy * t16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
highp float t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
bool tb0;
mediump vec4 t16_1;
highp vec4 t2;
mediump vec3 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_5;
highp float t8;
lowp float t10_8;
mediump float t16_9;
mediump float t16_13;
mediump float t16_14;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_13 = dot(t16_1.xyz, t16_1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_1.xyz = vec3(t16_13) * t16_1.xyz;
    t16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_14 = dot(t16_2.xyz, t16_2.xyz);
    t16_14 = inversesqrt(t16_14);
    t16_2.xyz = vec3(t16_14) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_13) + t16_2.xyz;
    t16_13 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_13, 0.00100000005);
    t16_13 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_13) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_5.x = (-_Glossiness) + 1.0;
    t16_9 = (-t16_5.x) + 1.0;
    t16_9 = t16_9 * 0.967999995 + 0.0299999993;
    t16_9 = log2(t16_9);
    t16_9 = 10.0 / t16_9;
    t16_5.y = max(t16_9, -255.936996);
    t16_5.xz = t16_5.xy * t16_5.xy;
    t16_9 = t16_5.y * t16_5.y + 1.0;
    t16_1.x = t16_1.x * t16_5.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_9;
    t16_9 = t16_0.x * t16_0.x;
    t16_5.x = t16_9 * _Glossiness + t16_5.x;
    t16_5.x = t16_5.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_5.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_5.xyz * t16_1.xxx;
    t16_13 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_13) + t16_1.xyz;
    t0 = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t0 = sqrt(t0);
    t0 = t0 * _LightPositionRange.w;
    t0 = t0 * 0.970000029;
    t2 = texture(_ShadowMapTexture, vs_TEXCOORD6.xyz);
    t8 = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb0 = t8<t0;
    t16_13 = (tb0) ? _LightShadowData.x : 1.0;
    t0 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, vec2(t0)).w;
    t10_8 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_0.x = t10_8 * t10_0.x;
    t16_0.x = t16_13 * t16_0.x;
    t16_3.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_3.xyz;
    SV_Target0.xyz = t16_0.yyy * t16_1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	vec4 _ShadowOffsets[4];
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	vec4 _ShadowOffsets[4];
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 t16_0;
highp vec3 t1;
mediump vec4 t16_1;
lowp vec4 t10_1;
highp vec4 t2;
highp vec3 t3;
lowp float t10_4;
mediump vec4 t16_5;
mediump vec3 t16_6;
mediump vec3 t16_7;
lowp float t10_9;
mediump float t16_13;
mediump float t16_17;
bool tb17;
mediump float t16_24;
mediump float t16_29;
void main()
{
    t16_0.x = (-_LightShadowData.x) + 1.0;
    t16_1.xyz = vs_TEXCOORD6.xyz / vs_TEXCOORD6.www;
    t2.xyz = t16_1.xyz + _ShadowOffsets[0].xyz;
    vec3 txVec53 = vec3(t2.xy,t2.z);
    t2.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec53, 0.0);
    t3.xyz = t16_1.xyz + _ShadowOffsets[1].xyz;
    vec3 txVec54 = vec3(t3.xy,t3.z);
    t2.y = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec54, 0.0);
    t3.xyz = t16_1.xyz + _ShadowOffsets[2].xyz;
    t1.xyz = t16_1.xyz + _ShadowOffsets[3].xyz;
    vec3 txVec55 = vec3(t1.xy,t1.z);
    t2.w = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec55, 0.0);
    vec3 txVec56 = vec3(t3.xy,t3.z);
    t2.z = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec56, 0.0);
    t16_0 = t2 * t16_0.xxxx + _LightShadowData.xxxx;
    t16_1.x = dot(t16_0, vec4(0.25, 0.25, 0.25, 0.25));
    t16_0.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_0.xy = t16_0.xy + vec2(0.5, 0.5);
    t10_9 = texture(_LightTexture0, t16_0.xy).w;
    tb17 = 0.0<vs_TEXCOORD5.z;
    t10_4 = (tb17) ? 1.0 : 0.0;
    t10_4 = t10_9 * t10_4;
    t16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_9 = texture(_LightTextureB0, t16_0.xx).w;
    t10_4 = t10_9 * t10_4;
    t10_4 = t16_1.x * t10_4;
    t16_0.xyz = vec3(t10_4) * _LightColor0.xyz;
    t10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = t10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_6.xyz = t16_5.yyy * vs_TEXCOORD3.xyz;
    t16_5.xyw = vs_TEXCOORD2.xyz * t16_5.xxx + t16_6.xyz;
    t16_5.xyz = vs_TEXCOORD4.xyz * t16_5.zzz + t16_5.xyw;
    t16_24 = dot(t16_5.xyz, t16_5.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_5.xyz = vec3(t16_24) * t16_5.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_6.x = vs_TEXCOORD2.w;
    t16_6.y = vs_TEXCOORD3.w;
    t16_6.z = vs_TEXCOORD4.w;
    t16_29 = dot(t16_6.xyz, t16_6.xyz);
    t16_29 = inversesqrt(t16_29);
    t16_6.xyz = vec3(t16_29) * t16_6.xyz;
    t16_7.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_6.xyz;
    t16_24 = dot(t16_7.xyz, t16_7.xyz);
    t16_1.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_1.x);
    t16_7.xyz = vec3(t16_24) * t16_7.xyz;
    t16_24 = dot(t16_5.xyz, t16_7.xyz);
    t16_5.x = dot(t16_5.xyz, t16_6.xyz);
    t16_5.y = dot(t16_6.xyz, t16_7.xyz);
    t16_1.xy = max(t16_5.yx, vec2(0.0, 0.0));
    t16_17 = max(t16_24, 0.0);
    t16_24 = log2(t16_17);
    t16_5.x = (-_Glossiness) + 1.0;
    t16_13 = (-t16_5.x) + 1.0;
    t16_13 = t16_13 * 0.967999995 + 0.0299999993;
    t16_13 = log2(t16_13);
    t16_13 = 10.0 / t16_13;
    t16_5.y = max(t16_13, -255.936996);
    t16_5.xz = t16_5.xy * t16_5.xy;
    t16_13 = t16_5.y * t16_5.y + 1.0;
    t16_24 = t16_24 * t16_5.z;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_13;
    t16_13 = t16_1.x * t16_1.x;
    t16_5.x = t16_13 * _Glossiness + t16_5.x;
    t16_5.x = t16_5.x * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_5.x * t16_1.x + 9.99999975e-005;
    t16_1.x = t16_24 / t16_1.x;
    t16_24 = max(t16_1.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_5.xyz = vec3(t16_24) * t16_5.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_5.xyz = t16_1.xzw * vec3(t16_24) + t16_5.xyz;
    t16_0.xyz = t16_0.xyz * t16_5.xyz;
    SV_Target0.xyz = t16_1.yyy * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec4 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
bvec4 tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp vec3 t7;
mediump float t16_11;
mediump float t16_14;
mediump float t16_24;
mediump float t16_25;
void main()
{
    t0.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t0.x = sqrt(t0.x);
    t0.x = t0.x * _LightPositionRange.w;
    t0.x = t0.x * 0.970000029;
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, 0.0078125, 0.0078125);
    t1 = texture(_ShadowMapTexture, t7.xyz);
    t1.x = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, -0.0078125, 0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.y = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, 0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.z = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, -0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.w = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb0 = lessThan(t1, t0.xxxx);
    t0.x = (tb0.x) ? _LightShadowData.x : float(1.0);
    t0.y = (tb0.y) ? _LightShadowData.x : float(1.0);
    t0.z = (tb0.z) ? _LightShadowData.x : float(1.0);
    t0.w = (tb0.w) ? _LightShadowData.x : float(1.0);
    t16_3.x = dot(t0, vec4(0.25, 0.25, 0.25, 0.25));
    t0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTexture0, t0.xx).w;
    t16_0.x = t16_3.x * t10_0.x;
    t16_3.xyz = t16_0.xxx * _LightColor0.xyz;
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_24 = dot(t16_4.xyz, t16_4.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_4.xyz = vec3(t16_24) * t16_4.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_5.x = vs_TEXCOORD2.w;
    t16_5.y = vs_TEXCOORD3.w;
    t16_5.z = vs_TEXCOORD4.w;
    t16_25 = dot(t16_5.xyz, t16_5.xyz);
    t16_25 = inversesqrt(t16_25);
    t16_5.xyz = vec3(t16_25) * t16_5.xyz;
    t16_6.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_5.xyz;
    t16_24 = dot(t16_6.xyz, t16_6.xyz);
    t16_0.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_0.x);
    t16_6.xyz = vec3(t16_24) * t16_6.xyz;
    t16_24 = dot(t16_4.xyz, t16_6.xyz);
    t16_4.x = dot(t16_4.xyz, t16_5.xyz);
    t16_4.y = dot(t16_5.xyz, t16_6.xyz);
    t16_0.xy = max(t16_4.yx, vec2(0.0, 0.0));
    t16_14 = max(t16_24, 0.0);
    t16_24 = log2(t16_14);
    t16_4.x = (-_Glossiness) + 1.0;
    t16_11 = (-t16_4.x) + 1.0;
    t16_11 = t16_11 * 0.967999995 + 0.0299999993;
    t16_11 = log2(t16_11);
    t16_11 = 10.0 / t16_11;
    t16_4.y = max(t16_11, -255.936996);
    t16_4.xz = t16_4.xy * t16_4.xy;
    t16_11 = t16_4.y * t16_4.y + 1.0;
    t16_24 = t16_24 * t16_4.z;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_11;
    t16_11 = t16_0.x * t16_0.x;
    t16_4.x = t16_11 * _Glossiness + t16_4.x;
    t16_4.x = t16_4.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_4.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_24 / t16_0.x;
    t16_24 = max(t16_0.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_4.xyz = vec3(t16_24) * t16_4.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_0.xzw * vec3(t16_24) + t16_4.xyz;
    t16_3.xyz = t16_3.xyz * t16_4.xyz;
    SV_Target0.xyz = t16_0.yyy * t16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec3 t2;
highp vec3 t3;
mediump vec3 t16_4;
highp float t15;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t1.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t1.xyz;
    t1.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t1.xyz;
    t15 = dot(t1.xyz, t1.xyz);
    t15 = inversesqrt(t15);
    t1.xyz = vec3(t15) * t1.xyz;
    t2.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD6.xyz = t0.xyz + (-_LightPositionRange.xyz);
    t1.w = t2.x;
    vs_TEXCOORD2 = t1;
    t0.x = in_NORMAL0.x * _World2Object[0].x;
    t0.y = in_NORMAL0.x * _World2Object[1].x;
    t0.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t0.xyz = t0.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t0.xyz = t0.xyz + t3.xyz;
    t15 = dot(t0.xyz, t0.xyz);
    t15 = inversesqrt(t15);
    t0.xyz = vec3(t15) * t0.xyz;
    t16_4.xyz = t1.yzx * t0.zxy;
    t16_4.xyz = t0.yzx * t1.zxy + (-t16_4.xyz);
    t1.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t1.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t2.y;
    t0.w = t2.z;
    vs_TEXCOORD4 = t0;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
uniform highp samplerCube _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec4 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
bvec4 tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec3 t16_3;
mediump vec4 t16_4;
mediump vec3 t16_5;
mediump vec3 t16_6;
highp vec3 t7;
lowp float t10_7;
mediump float t16_11;
mediump float t16_14;
mediump float t16_24;
mediump float t16_25;
void main()
{
    t0.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    t0.x = sqrt(t0.x);
    t0.x = t0.x * _LightPositionRange.w;
    t0.x = t0.x * 0.970000029;
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, 0.0078125, 0.0078125);
    t1 = texture(_ShadowMapTexture, t7.xyz);
    t1.x = dot(t1, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, -0.0078125, 0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.y = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(-0.0078125, 0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.z = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    t7.xyz = vs_TEXCOORD6.xyz + vec3(0.0078125, -0.0078125, -0.0078125);
    t2 = texture(_ShadowMapTexture, t7.xyz);
    t1.w = dot(t2, vec4(1.0, 0.00392156886, 1.53787005e-005, 6.03086292e-008));
    tb0 = lessThan(t1, t0.xxxx);
    t0.x = (tb0.x) ? _LightShadowData.x : float(1.0);
    t0.y = (tb0.y) ? _LightShadowData.x : float(1.0);
    t0.z = (tb0.z) ? _LightShadowData.x : float(1.0);
    t0.w = (tb0.w) ? _LightShadowData.x : float(1.0);
    t16_3.x = dot(t0, vec4(0.25, 0.25, 0.25, 0.25));
    t0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, t0.xx).w;
    t10_7 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_0.x = t10_7 * t10_0.x;
    t16_0.x = t16_3.x * t16_0.x;
    t16_3.xyz = t16_0.xxx * _LightColor0.xyz;
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_5.xyz = t16_4.yyy * vs_TEXCOORD3.xyz;
    t16_4.xyw = vs_TEXCOORD2.xyz * t16_4.xxx + t16_5.xyz;
    t16_4.xyz = vs_TEXCOORD4.xyz * t16_4.zzz + t16_4.xyw;
    t16_24 = dot(t16_4.xyz, t16_4.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_4.xyz = vec3(t16_24) * t16_4.xyz;
    t16_24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_24 = inversesqrt(t16_24);
    t16_5.x = vs_TEXCOORD2.w;
    t16_5.y = vs_TEXCOORD3.w;
    t16_5.z = vs_TEXCOORD4.w;
    t16_25 = dot(t16_5.xyz, t16_5.xyz);
    t16_25 = inversesqrt(t16_25);
    t16_5.xyz = vec3(t16_25) * t16_5.xyz;
    t16_6.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_24) + t16_5.xyz;
    t16_24 = dot(t16_6.xyz, t16_6.xyz);
    t16_0.x = max(t16_24, 0.00100000005);
    t16_24 = inversesqrt(t16_0.x);
    t16_6.xyz = vec3(t16_24) * t16_6.xyz;
    t16_24 = dot(t16_4.xyz, t16_6.xyz);
    t16_4.x = dot(t16_4.xyz, t16_5.xyz);
    t16_4.y = dot(t16_5.xyz, t16_6.xyz);
    t16_0.xy = max(t16_4.yx, vec2(0.0, 0.0));
    t16_14 = max(t16_24, 0.0);
    t16_24 = log2(t16_14);
    t16_4.x = (-_Glossiness) + 1.0;
    t16_11 = (-t16_4.x) + 1.0;
    t16_11 = t16_11 * 0.967999995 + 0.0299999993;
    t16_11 = log2(t16_11);
    t16_11 = 10.0 / t16_11;
    t16_4.y = max(t16_11, -255.936996);
    t16_4.xz = t16_4.xy * t16_4.xy;
    t16_11 = t16_4.y * t16_4.y + 1.0;
    t16_24 = t16_24 * t16_4.z;
    t16_24 = exp2(t16_24);
    t16_24 = t16_24 * t16_11;
    t16_11 = t16_0.x * t16_0.x;
    t16_4.x = t16_11 * _Glossiness + t16_4.x;
    t16_4.x = t16_4.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_4.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_24 / t16_0.x;
    t16_24 = max(t16_0.x, 0.0);
    t16_24 = min(t16_24, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_4.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_4.xyz = vec3(_Metallic) * t16_4.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_4.xyz = vec3(t16_24) * t16_4.xyz;
    t16_24 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_4.xyz = t16_0.xzw * vec3(t16_24) + t16_4.xyz;
    t16_3.xyz = t16_3.xyz * t16_4.xyz;
    SV_Target0.xyz = t16_0.yyy * t16_3.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t1 = t0.yyyy * unity_World2Shadow[0][1];
    t1 = unity_World2Shadow[0][0] * t0.xxxx + t1;
    t1 = unity_World2Shadow[0][2] * t0.zzzz + t1;
    t0 = unity_World2Shadow[0][3] * t0.wwww + t1;
    vs_TEXCOORD5 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec4 t16_1;
lowp vec4 t10_1;
mediump vec4 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump float t16_10;
mediump float t16_11;
mediump float t16_15;
void main()
{
    t16_0.x = (-_Glossiness) + 1.0;
    t16_5.x = (-t16_0.x) + 1.0;
    t16_5.x = t16_5.x * 0.967999995 + 0.0299999993;
    t16_5.x = log2(t16_5.x);
    t16_5.x = 10.0 / t16_5.x;
    t16_0.y = max(t16_5.x, -255.936996);
    t16_0.xz = t16_0.xy * t16_0.xy;
    t16_5.x = t16_0.y * t16_0.y + 1.0;
    t10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_2.xyz = t10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_3.xyz = t16_2.yyy * vs_TEXCOORD3.xyz;
    t16_2.xyw = vs_TEXCOORD2.xyz * t16_2.xxx + t16_3.xyz;
    t16_2.xyz = vs_TEXCOORD4.xyz * t16_2.zzz + t16_2.xyw;
    t16_15 = dot(t16_2.xyz, t16_2.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_2.xyz = vec3(t16_15) * t16_2.xyz;
    t16_15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_3.x = vs_TEXCOORD2.w;
    t16_3.y = vs_TEXCOORD3.w;
    t16_3.z = vs_TEXCOORD4.w;
    t16_4.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_15) + t16_3.xyz;
    t16_15 = dot(t16_4.xyz, t16_4.xyz);
    t16_1.x = max(t16_15, 0.00100000005);
    t16_15 = inversesqrt(t16_1.x);
    t16_4.xyz = vec3(t16_15) * t16_4.xyz;
    t16_15 = dot(t16_2.xyz, t16_4.xyz);
    t16_2.x = dot(t16_2.xyz, t16_3.xyz);
    t16_2.y = dot(t16_3.xyz, t16_4.xyz);
    t16_1.xy = max(t16_2.yx, vec2(0.0, 0.0));
    t16_11 = max(t16_15, 0.0);
    t16_15 = log2(t16_11);
    t16_10 = t16_15 * t16_0.z;
    t16_10 = exp2(t16_10);
    t16_5.x = t16_10 * t16_5.x;
    t16_10 = t16_1.x * t16_1.x;
    t16_0.x = t16_10 * _Glossiness + t16_0.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_0.x * t16_1.x + 9.99999975e-005;
    t16_1.x = t16_5.x / t16_1.x;
    t16_0.x = max(t16_1.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_5.xyz * t16_0.xxx;
    t16_15 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_1.xzw * vec3(t16_15) + t16_0.xyz;
    vec3 txVec45 = vec3(vs_TEXCOORD5.xy,vs_TEXCOORD5.z);
    t16_15 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec45, 0.0);
    t16_2.x = (-_LightShadowData.x) + 1.0;
    t16_15 = t16_15 * t16_2.x + _LightShadowData.x;
    t16_2.xyz = vec3(t16_15) * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_2.xyz;
    SV_Target0.xyz = t16_1.yyy * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec2 vs_TEXCOORD5;
out mediump vec4 vs_TEXCOORD6;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t2.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    t2.y = dot(t16_0, t1);
    vs_TEXCOORD5.xy = t2.xy;
    t0 = t1.yyyy * unity_World2Shadow[0][1];
    t0 = unity_World2Shadow[0][0] * t1.xxxx + t0;
    t0 = unity_World2Shadow[0][2] * t1.zzzz + t0;
    t0 = unity_World2Shadow[0][3] * t1.wwww + t0;
    vs_TEXCOORD6 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform lowp sampler2D _ShadowMapTexture;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec2 vs_TEXCOORD5;
in mediump vec4 vs_TEXCOORD6;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
mediump vec4 t16_1;
lowp vec4 t10_1;
mediump vec4 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump float t16_10;
mediump float t16_11;
mediump float t16_15;
void main()
{
    t16_0.x = (-_Glossiness) + 1.0;
    t16_5.x = (-t16_0.x) + 1.0;
    t16_5.x = t16_5.x * 0.967999995 + 0.0299999993;
    t16_5.x = log2(t16_5.x);
    t16_5.x = 10.0 / t16_5.x;
    t16_0.y = max(t16_5.x, -255.936996);
    t16_0.xz = t16_0.xy * t16_0.xy;
    t16_5.x = t16_0.y * t16_0.y + 1.0;
    t10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_2.xyz = t10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_3.xyz = t16_2.yyy * vs_TEXCOORD3.xyz;
    t16_2.xyw = vs_TEXCOORD2.xyz * t16_2.xxx + t16_3.xyz;
    t16_2.xyz = vs_TEXCOORD4.xyz * t16_2.zzz + t16_2.xyw;
    t16_15 = dot(t16_2.xyz, t16_2.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_2.xyz = vec3(t16_15) * t16_2.xyz;
    t16_15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_3.x = vs_TEXCOORD2.w;
    t16_3.y = vs_TEXCOORD3.w;
    t16_3.z = vs_TEXCOORD4.w;
    t16_4.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_15) + t16_3.xyz;
    t16_15 = dot(t16_4.xyz, t16_4.xyz);
    t16_1.x = max(t16_15, 0.00100000005);
    t16_15 = inversesqrt(t16_1.x);
    t16_4.xyz = vec3(t16_15) * t16_4.xyz;
    t16_15 = dot(t16_2.xyz, t16_4.xyz);
    t16_2.x = dot(t16_2.xyz, t16_3.xyz);
    t16_2.y = dot(t16_3.xyz, t16_4.xyz);
    t16_1.xy = max(t16_2.yx, vec2(0.0, 0.0));
    t16_11 = max(t16_15, 0.0);
    t16_15 = log2(t16_11);
    t16_10 = t16_15 * t16_0.z;
    t16_10 = exp2(t16_10);
    t16_5.x = t16_10 * t16_5.x;
    t16_10 = t16_1.x * t16_1.x;
    t16_0.x = t16_10 * _Glossiness + t16_0.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_0.x * t16_1.x + 9.99999975e-005;
    t16_1.x = t16_5.x / t16_1.x;
    t16_0.x = max(t16_1.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_5.xyz * t16_0.xxx;
    t16_15 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_1.xzw * vec3(t16_15) + t16_0.xyz;
    vec3 txVec42 = vec3(vs_TEXCOORD6.xy,vs_TEXCOORD6.z);
    t16_15 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec42, 0.0);
    t16_2.x = (-_LightShadowData.x) + 1.0;
    t16_15 = t16_15 * t16_2.x + _LightShadowData.x;
    t10_1.x = texture(_LightTexture0, vs_TEXCOORD5.xy).w;
    t16_1.x = t16_15 * t10_1.x;
    t16_2.xyz = t16_1.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_2.xyz;
    SV_Target0.xyz = t16_1.yyy * t16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec3 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
mediump vec4 t16_1;
mediump vec3 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_5;
mediump float t16_9;
mediump float t16_13;
mediump float t16_14;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_13 = dot(t16_1.xyz, t16_1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_1.xyz = vec3(t16_13) * t16_1.xyz;
    t16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_14 = dot(t16_2.xyz, t16_2.xyz);
    t16_14 = inversesqrt(t16_14);
    t16_2.xyz = vec3(t16_14) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_13) + t16_2.xyz;
    t16_13 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_13, 0.00100000005);
    t16_13 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_13) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_5.x = (-_Glossiness) + 1.0;
    t16_9 = (-t16_5.x) + 1.0;
    t16_9 = t16_9 * 0.967999995 + 0.0299999993;
    t16_9 = log2(t16_9);
    t16_9 = 10.0 / t16_9;
    t16_5.y = max(t16_9, -255.936996);
    t16_5.xz = t16_5.xy * t16_5.xy;
    t16_9 = t16_5.y * t16_5.y + 1.0;
    t16_1.x = t16_1.x * t16_5.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_9;
    t16_9 = t16_0.x * t16_0.x;
    t16_5.x = t16_9 * _Glossiness + t16_5.x;
    t16_5.x = t16_5.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_5.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_5.xyz * t16_1.xxx;
    t16_13 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_13) + t16_1.xyz;
    t0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTexture0, t0.xx).w;
    t16_2.xyz = t10_0.xxx * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_2.xyz;
    t16_1.xyz = t16_0.yyy * t16_1.xyz;
    t0.x = vs_TEXCOORD7;
    t0.x = clamp(t0.x, 0.0, 1.0);
    t0.xyz = t16_1.xyz * t0.xxx;
    SV_Target0.xyz = t0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
highp vec4 t0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
highp vec3 t1;
mediump vec4 t16_1;
lowp vec4 t10_1;
mediump vec4 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump float t16_10;
mediump float t16_11;
mediump float t16_15;
void main()
{
    t16_0.x = (-_Glossiness) + 1.0;
    t16_5.x = (-t16_0.x) + 1.0;
    t16_5.x = t16_5.x * 0.967999995 + 0.0299999993;
    t16_5.x = log2(t16_5.x);
    t16_5.x = 10.0 / t16_5.x;
    t16_0.y = max(t16_5.x, -255.936996);
    t16_0.xz = t16_0.xy * t16_0.xy;
    t16_5.x = t16_0.y * t16_0.y + 1.0;
    t10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_2.xyz = t10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_3.xyz = t16_2.yyy * vs_TEXCOORD3.xyz;
    t16_2.xyw = vs_TEXCOORD2.xyz * t16_2.xxx + t16_3.xyz;
    t16_2.xyz = vs_TEXCOORD4.xyz * t16_2.zzz + t16_2.xyw;
    t16_15 = dot(t16_2.xyz, t16_2.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_2.xyz = vec3(t16_15) * t16_2.xyz;
    t16_15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_3.x = vs_TEXCOORD2.w;
    t16_3.y = vs_TEXCOORD3.w;
    t16_3.z = vs_TEXCOORD4.w;
    t16_4.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_15) + t16_3.xyz;
    t16_15 = dot(t16_4.xyz, t16_4.xyz);
    t16_1.x = max(t16_15, 0.00100000005);
    t16_15 = inversesqrt(t16_1.x);
    t16_4.xyz = vec3(t16_15) * t16_4.xyz;
    t16_15 = dot(t16_2.xyz, t16_4.xyz);
    t16_2.x = dot(t16_2.xyz, t16_3.xyz);
    t16_2.y = dot(t16_3.xyz, t16_4.xyz);
    t16_1.xy = max(t16_2.yx, vec2(0.0, 0.0));
    t16_11 = max(t16_15, 0.0);
    t16_15 = log2(t16_11);
    t16_10 = t16_15 * t16_0.z;
    t16_10 = exp2(t16_10);
    t16_5.x = t16_10 * t16_5.x;
    t16_10 = t16_1.x * t16_1.x;
    t16_0.x = t16_10 * _Glossiness + t16_0.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_0.x * t16_1.x + 9.99999975e-005;
    t16_1.x = t16_5.x / t16_1.x;
    t16_0.x = max(t16_1.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_5.xyz * t16_0.xxx;
    t16_15 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_1.xzw * vec3(t16_15) + t16_0.xyz;
    t16_0.xyz = t16_0.xyz * _LightColor0.xyz;
    t16_0.xyz = t16_1.yyy * t16_0.xyz;
    t1.x = vs_TEXCOORD7;
    t1.x = clamp(t1.x, 0.0, 1.0);
    t1.xyz = t16_0.xyz * t1.xxx;
    SV_Target0.xyz = t1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out mediump vec4 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
mediump vec4 t16_2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    t0.x = dot(t16_0, t1);
    t16_2.x = _LightMatrix0[0].y;
    t16_2.y = _LightMatrix0[1].y;
    t16_2.z = _LightMatrix0[2].y;
    t16_2.w = _LightMatrix0[3].y;
    t0.y = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].z;
    t16_2.y = _LightMatrix0[1].z;
    t16_2.z = _LightMatrix0[2].z;
    t16_2.w = _LightMatrix0[3].z;
    t0.z = dot(t16_2, t1);
    t16_2.x = _LightMatrix0[0].w;
    t16_2.y = _LightMatrix0[1].w;
    t16_2.z = _LightMatrix0[2].w;
    t16_2.w = _LightMatrix0[3].w;
    t0.w = dot(t16_2, t1);
    vs_TEXCOORD5 = t0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
uniform lowp sampler2D _LightTextureB0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in mediump vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec3 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
mediump vec4 t16_1;
mediump vec3 t16_2;
mediump vec3 t16_3;
lowp float t10_4;
mediump vec3 t16_6;
bool tb10;
mediump float t16_11;
mediump float t16_16;
mediump float t16_17;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_16 = dot(t16_1.xyz, t16_1.xyz);
    t16_16 = inversesqrt(t16_16);
    t16_1.xyz = vec3(t16_16) * t16_1.xyz;
    t16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_16 = inversesqrt(t16_16);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_17 = dot(t16_2.xyz, t16_2.xyz);
    t16_17 = inversesqrt(t16_17);
    t16_2.xyz = vec3(t16_17) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_16) + t16_2.xyz;
    t16_16 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_16, 0.00100000005);
    t16_16 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_16) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_6.x = (-_Glossiness) + 1.0;
    t16_11 = (-t16_6.x) + 1.0;
    t16_11 = t16_11 * 0.967999995 + 0.0299999993;
    t16_11 = log2(t16_11);
    t16_11 = 10.0 / t16_11;
    t16_6.y = max(t16_11, -255.936996);
    t16_6.xz = t16_6.xy * t16_6.xy;
    t16_11 = t16_6.y * t16_6.y + 1.0;
    t16_1.x = t16_1.x * t16_6.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_11;
    t16_11 = t16_0.x * t16_0.x;
    t16_6.x = t16_11 * _Glossiness + t16_6.x;
    t16_6.x = t16_6.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_6.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_6.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_6.xyz = vec3(_Metallic) * t16_6.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_6.xyz * t16_1.xxx;
    t16_16 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_16) + t16_1.xyz;
    t16_2.xy = vs_TEXCOORD5.xy / vs_TEXCOORD5.ww;
    t16_2.xy = t16_2.xy + vec2(0.5, 0.5);
    t10_0.x = texture(_LightTexture0, t16_2.xy).w;
    tb10 = 0.0<vs_TEXCOORD5.z;
    t10_4 = (tb10) ? 1.0 : 0.0;
    t10_4 = t10_0.x * t10_4;
    t16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, t16_0.xx).w;
    t10_4 = t10_0.x * t10_4;
    t16_2.xyz = vec3(t10_4) * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_2.xyz;
    t16_1.xyz = t16_0.yyy * t16_1.xyz;
    t0.x = vs_TEXCOORD7;
    t0.x = clamp(t0.x, 0.0, 1.0);
    t0.xyz = t16_1.xyz * t0.xxx;
    SV_Target0.xyz = t0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out highp float vs_TEXCOORD7;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD5;
highp vec4 t0;
mediump vec4 t16_0;
bool tb0;
highp vec4 t1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t16_0.x = _LightMatrix0[0].x;
    t16_0.y = _LightMatrix0[1].x;
    t16_0.z = _LightMatrix0[2].x;
    t16_0.w = _LightMatrix0[3].x;
    t1 = in_POSITION0.yyyy * _Object2World[1];
    t1 = _Object2World[0] * in_POSITION0.xxxx + t1;
    t1 = _Object2World[2] * in_POSITION0.zzzz + t1;
    t1 = _Object2World[3] * in_POSITION0.wwww + t1;
    vs_TEXCOORD5.x = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].y;
    t16_0.y = _LightMatrix0[1].y;
    t16_0.z = _LightMatrix0[2].y;
    t16_0.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_0, t1);
    t16_0.x = _LightMatrix0[0].z;
    t16_0.y = _LightMatrix0[1].z;
    t16_0.z = _LightMatrix0[2].z;
    t16_0.w = _LightMatrix0[3].z;
    vs_TEXCOORD5.z = dot(t16_0, t1);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTextureB0;
uniform lowp samplerCube _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in highp float vs_TEXCOORD7;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
highp vec3 t0;
mediump vec4 t16_0;
lowp vec4 t10_0;
mediump vec4 t16_1;
mediump vec3 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_5;
lowp float t10_8;
mediump float t16_9;
mediump float t16_13;
mediump float t16_14;
void main()
{
    t10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_1.xyz = t10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_2.xyz = t16_1.yyy * vs_TEXCOORD3.xyz;
    t16_1.xyw = vs_TEXCOORD2.xyz * t16_1.xxx + t16_2.xyz;
    t16_1.xyz = vs_TEXCOORD4.xyz * t16_1.zzz + t16_1.xyw;
    t16_13 = dot(t16_1.xyz, t16_1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_1.xyz = vec3(t16_13) * t16_1.xyz;
    t16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_13 = inversesqrt(t16_13);
    t16_2.x = vs_TEXCOORD2.w;
    t16_2.y = vs_TEXCOORD3.w;
    t16_2.z = vs_TEXCOORD4.w;
    t16_14 = dot(t16_2.xyz, t16_2.xyz);
    t16_14 = inversesqrt(t16_14);
    t16_2.xyz = vec3(t16_14) * t16_2.xyz;
    t16_3.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_13) + t16_2.xyz;
    t16_13 = dot(t16_3.xyz, t16_3.xyz);
    t16_0.x = max(t16_13, 0.00100000005);
    t16_13 = inversesqrt(t16_0.x);
    t16_3.xyz = vec3(t16_13) * t16_3.xyz;
    t16_1.w = dot(t16_1.xyz, t16_3.xyz);
    t16_1.x = dot(t16_1.xyz, t16_2.xyz);
    t16_1.y = dot(t16_2.xyz, t16_3.xyz);
    t16_0.xyz = max(t16_1.yxw, vec3(0.0, 0.0, 0.0));
    t16_1.x = log2(t16_0.z);
    t16_5.x = (-_Glossiness) + 1.0;
    t16_9 = (-t16_5.x) + 1.0;
    t16_9 = t16_9 * 0.967999995 + 0.0299999993;
    t16_9 = log2(t16_9);
    t16_9 = 10.0 / t16_9;
    t16_5.y = max(t16_9, -255.936996);
    t16_5.xz = t16_5.xy * t16_5.xy;
    t16_9 = t16_5.y * t16_5.y + 1.0;
    t16_1.x = t16_1.x * t16_5.z;
    t16_1.x = exp2(t16_1.x);
    t16_1.x = t16_1.x * t16_9;
    t16_9 = t16_0.x * t16_0.x;
    t16_5.x = t16_9 * _Glossiness + t16_5.x;
    t16_5.x = t16_5.x * unity_LightGammaCorrectionConsts.z;
    t16_0.x = t16_5.x * t16_0.x + 9.99999975e-005;
    t16_0.x = t16_1.x / t16_0.x;
    t16_1.x = max(t16_0.x, 0.0);
    t16_1.x = min(t16_1.x, 100.0);
    t10_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_0.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_0.xzw = t10_0.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_1.xyz = t16_5.xyz * t16_1.xxx;
    t16_13 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_1.xyz = t16_0.xzw * vec3(t16_13) + t16_1.xyz;
    t0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);
    t10_0.x = texture(_LightTextureB0, t0.xx).w;
    t10_8 = texture(_LightTexture0, vs_TEXCOORD5.xyz).w;
    t16_0.x = t10_8 * t10_0.x;
    t16_2.xyz = t16_0.xxx * _LightColor0.xyz;
    t16_1.xyz = t16_1.xyz * t16_2.xyz;
    t16_1.xyz = t16_0.yyy * t16_1.xyz;
    t0.x = vs_TEXCOORD7;
    t0.x = clamp(t0.x, 0.0, 1.0);
    t0.xyz = t16_1.xyz * t0.xxx;
    SV_Target0.xyz = t0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
in highp vec4 in_POSITION0;
in mediump vec3 in_NORMAL0;
in highp vec2 in_TEXCOORD0;
in highp vec2 in_TEXCOORD1;
in mediump vec4 in_TANGENT0;
out highp vec4 vs_TEXCOORD0;
out mediump vec3 vs_TEXCOORD1;
out mediump vec4 vs_TEXCOORD2;
out mediump vec4 vs_TEXCOORD3;
out mediump vec4 vs_TEXCOORD4;
out highp vec2 vs_TEXCOORD5;
out highp float vs_TEXCOORD7;
highp vec4 t0;
bool tb0;
highp vec4 t1;
mediump vec4 t16_1;
highp vec4 t2;
highp vec3 t3;
mediump vec3 t16_4;
void main()
{
    t0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
    t0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + t0;
    t0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + t0;
    t0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + t0;
    gl_Position = t0;
    t0.x = t0.z * unity_FogParams.x;
    t0.x = t0.x * (-t0.x);
    vs_TEXCOORD7 = exp2(t0.x);
    tb0 = _UVSec==0.0;
    t0.xy = (bool(tb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;
    vs_TEXCOORD0.zw = t0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    t0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
    t0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + t0.xyz;
    t0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + t0.xyz;
    t0.xyz = _Object2World[3].xyz * in_POSITION0.www + t0.xyz;
    t1.xyz = t0.xyz + (-_WorldSpaceCameraPos.xyzx.xyz);
    t0.xyz = (-t0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
    vs_TEXCOORD1.xyz = t1.xyz;
    t1.w = t0.x;
    t2.xyz = in_TANGENT0.yyy * _Object2World[1].xyz;
    t2.xyz = _Object2World[0].xyz * in_TANGENT0.xxx + t2.xyz;
    t2.xyz = _Object2World[2].xyz * in_TANGENT0.zzz + t2.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t1.xyz = t0.xxx * t2.xyz;
    vs_TEXCOORD2 = t1;
    t2.x = in_NORMAL0.x * _World2Object[0].x;
    t2.y = in_NORMAL0.x * _World2Object[1].x;
    t2.z = in_NORMAL0.x * _World2Object[2].x;
    t3.x = in_NORMAL0.y * _World2Object[0].y;
    t3.y = in_NORMAL0.y * _World2Object[1].y;
    t3.z = in_NORMAL0.y * _World2Object[2].y;
    t2.xyz = t2.xyz + t3.xyz;
    t3.x = in_NORMAL0.z * _World2Object[0].z;
    t3.y = in_NORMAL0.z * _World2Object[1].z;
    t3.z = in_NORMAL0.z * _World2Object[2].z;
    t2.xyz = t2.xyz + t3.xyz;
    t0.x = dot(t2.xyz, t2.xyz);
    t0.x = inversesqrt(t0.x);
    t2.xyz = t0.xxx * t2.xyz;
    t16_4.xyz = t1.yzx * t2.zxy;
    t16_4.xyz = t2.yzx * t1.zxy + (-t16_4.xyz);
    t0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
    vs_TEXCOORD3.xyz = t0.xxx * t16_4.xyz;
    vs_TEXCOORD3.w = t0.y;
    t2.w = t0.z;
    vs_TEXCOORD4 = t2;
    t0 = in_POSITION0.yyyy * _Object2World[1];
    t0 = _Object2World[0] * in_POSITION0.xxxx + t0;
    t0 = _Object2World[2] * in_POSITION0.zzzz + t0;
    t0 = _Object2World[3] * in_POSITION0.wwww + t0;
    t16_1.x = _LightMatrix0[0].x;
    t16_1.y = _LightMatrix0[1].x;
    t16_1.z = _LightMatrix0[2].x;
    t16_1.w = _LightMatrix0[3].x;
    vs_TEXCOORD5.x = dot(t16_1, t0);
    t16_1.x = _LightMatrix0[0].y;
    t16_1.y = _LightMatrix0[1].y;
    t16_1.z = _LightMatrix0[2].y;
    t16_1.w = _LightMatrix0[3].y;
    vs_TEXCOORD5.y = dot(t16_1, t0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	lowp vec4 unity_ColorSpaceGrey;
uniform 	lowp vec4 unity_ColorSpaceDouble;
uniform 	mediump vec4 unity_ColorSpaceDielectricSpec;
uniform 	mediump vec4 unity_ColorSpaceLuminance;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 unity_DynamicLightmap_HDR;
uniform 	lowp vec4 _LightColor0;
uniform 	lowp vec4 _SpecColor;
uniform 	mediump vec4 unity_LightGammaCorrectionConsts;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Cutoff;
uniform 	vec4 _MainTex_ST;
uniform 	vec4 _DetailAlbedoMap_ST;
uniform 	mediump float _BumpScale;
uniform 	mediump float _DetailNormalMapScale;
uniform 	mediump float _Metallic;
uniform 	mediump float _Glossiness;
uniform 	mediump float _OcclusionStrength;
uniform 	mediump float _Parallax;
uniform 	mediump float _UVSec;
uniform 	mediump vec4 _EmissionColor;
uniform 	mediump mat4 _LightMatrix0;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BumpMap;
uniform lowp sampler2D _LightTexture0;
in highp vec4 vs_TEXCOORD0;
in mediump vec3 vs_TEXCOORD1;
in mediump vec4 vs_TEXCOORD2;
in mediump vec4 vs_TEXCOORD3;
in mediump vec4 vs_TEXCOORD4;
in highp vec2 vs_TEXCOORD5;
in highp float vs_TEXCOORD7;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 t16_0;
highp vec3 t1;
mediump vec4 t16_1;
lowp vec4 t10_1;
mediump vec4 t16_2;
mediump vec3 t16_3;
mediump vec3 t16_4;
mediump vec3 t16_5;
mediump float t16_10;
mediump float t16_11;
mediump float t16_15;
void main()
{
    t16_0.x = (-_Glossiness) + 1.0;
    t16_5.x = (-t16_0.x) + 1.0;
    t16_5.x = t16_5.x * 0.967999995 + 0.0299999993;
    t16_5.x = log2(t16_5.x);
    t16_5.x = 10.0 / t16_5.x;
    t16_0.y = max(t16_5.x, -255.936996);
    t16_0.xz = t16_0.xy * t16_0.xy;
    t16_5.x = t16_0.y * t16_0.y + 1.0;
    t10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
    t16_2.xyz = t10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
    t16_3.xyz = t16_2.yyy * vs_TEXCOORD3.xyz;
    t16_2.xyw = vs_TEXCOORD2.xyz * t16_2.xxx + t16_3.xyz;
    t16_2.xyz = vs_TEXCOORD4.xyz * t16_2.zzz + t16_2.xyw;
    t16_15 = dot(t16_2.xyz, t16_2.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_2.xyz = vec3(t16_15) * t16_2.xyz;
    t16_15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    t16_15 = inversesqrt(t16_15);
    t16_3.x = vs_TEXCOORD2.w;
    t16_3.y = vs_TEXCOORD3.w;
    t16_3.z = vs_TEXCOORD4.w;
    t16_4.xyz = (-vs_TEXCOORD1.xyz) * vec3(t16_15) + t16_3.xyz;
    t16_15 = dot(t16_4.xyz, t16_4.xyz);
    t16_1.x = max(t16_15, 0.00100000005);
    t16_15 = inversesqrt(t16_1.x);
    t16_4.xyz = vec3(t16_15) * t16_4.xyz;
    t16_15 = dot(t16_2.xyz, t16_4.xyz);
    t16_2.x = dot(t16_2.xyz, t16_3.xyz);
    t16_2.y = dot(t16_3.xyz, t16_4.xyz);
    t16_1.xy = max(t16_2.yx, vec2(0.0, 0.0));
    t16_11 = max(t16_15, 0.0);
    t16_15 = log2(t16_11);
    t16_10 = t16_15 * t16_0.z;
    t16_10 = exp2(t16_10);
    t16_5.x = t16_10 * t16_5.x;
    t16_10 = t16_1.x * t16_1.x;
    t16_0.x = t16_10 * _Glossiness + t16_0.x;
    t16_0.x = t16_0.x * unity_LightGammaCorrectionConsts.z;
    t16_1.x = t16_0.x * t16_1.x + 9.99999975e-005;
    t16_1.x = t16_5.x / t16_1.x;
    t16_0.x = max(t16_1.x, 0.0);
    t16_0.x = min(t16_0.x, 100.0);
    t10_1.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    t16_5.xyz = _Color.xyz * t10_1.xzw + (-unity_ColorSpaceDielectricSpec.xyz);
    t16_1.xzw = t10_1.xzw * _Color.xyz;
    t16_5.xyz = vec3(_Metallic) * t16_5.xyz + unity_ColorSpaceDielectricSpec.xyz;
    t16_0.xyz = t16_5.xyz * t16_0.xxx;
    t16_15 = (-_Metallic) * unity_ColorSpaceDielectricSpec.w + unity_ColorSpaceDielectricSpec.w;
    t16_0.xyz = t16_1.xzw * vec3(t16_15) + t16_0.xyz;
    t10_1.x = texture(_LightTexture0, vs_TEXCOORD5.xy).w;
    t16_2.xyz = t10_1.xxx * _LightColor0.xyz;
    t16_0.xyz = t16_0.xyz * t16_2.xyz;
    t16_0.xyz = t16_1.yyy * t16_0.xyz;
    t1.x = vs_TEXCOORD7;
    t1.x = clamp(t1.x, 0.0, 1.0);
    t1.xyz = t16_0.xyz * t1.xxx;
    SV_Target0.xyz = t1.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "FOG_EXP2" "_NORMALMAP" }
"!!GLES3
#ifdef VERTEX
#version 300 es
precision highp float;
precision highp int;
uniform 	vec4 _Time;
uniform 	vec4 _SinTime;
uniform 	vec4 _CosTime;
uniform 	vec4 unity_DeltaTime;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _ProjectionParams;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 unity_CameraWorldClipPlanes[6];
uniform 	mat4 unity_CameraProjection;
uniform 	mat4 unity_CameraInvProjection;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	vec4 _LightPositionRange;
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	vec4 unity_LightPosition[8];
uniform 	mediump vec4 unity_LightAtten[8];
uniform 	vec4 unity_SpotDirection[8];
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec3 unity_LightColor0;
uniform 	mediump vec3 unity_LightColor1;
uniform 	mediump vec3 unity_LightColor2;
uniform 	mediump vec3 unity_LightColor3;
uniform 	vec4 unity_ShadowSplitSpheres[4];
uniform 	vec4 unity_ShadowSplitSqRadii;
uniform 	vec4 unity_LightShadowBias;
uniform 	vec4 _LightSplitsNear;
uniform 	vec4 _LightSplitsFar;
uniform 	mat4 unity_World2Shadow[4];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	mat4 glstate_matrix_mvp;
uniform 	mat4 glstate_matrix_modelview0;
uniform 	mat4 glstate_matrix_invtrans_modelview0;
uniform 	mat4 _Object2World;
uniform 	mat4 _World2Object;
uniform 	vec4 unity_LODFade;
uniform 	vec4 unity_WorldTransformParams;
uniform 	mat4 glstate_matrix_transpose_modelview0;
uniform 	mat4 glstate_matrix_projection;
uniform 	lowp vec4 glstate_lightmodel_ambient;
uniform 	mat4 unity_MatrixV;
uniform 	mat4 unity_MatrixVP;
uniform 	lowp vec4 unity_AmbientSky;
uniform 	lowp vec4 unity_AmbientEquator;
uniform 	lowp vec4 unity_AmbientGround;
uniform 	lowp vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 unity_DynamicLightmapST;
uniform 	vec4 unity_SpecCube0_BoxMax;
uniform 	vec4 unity_SpecCube0_BoxMin;
uniform 	vec4 unity_SpecCube0_ProbePosition;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	vec4 unity_SpecCube1_BoxMax;
uniform 	vec4 unity_SpecCube1_BoxMin;
uniform 	vec4 unity_SpecCube1_ProbePosition;
uniform 	mediump vec4 unity_SpecCube1_HDR;
uniform 	